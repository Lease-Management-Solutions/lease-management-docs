{
	// Se esta configuração for falsa, nenhuma telemetria será enviada, independentemente do valor da nova configuração. Preterido devido à combinação na configuração `telemetry.telemetryLevel`.
	// Habilite os relatórios de erro que serão coletados. Isso nos ajuda a melhorar a estabilidade. 
	// Essa opção requer a reinicialização para ter efeito.
	"telemetry.enableCrashReporter": true,

	// Se esta configuração for falsa, nenhuma telemetria será enviada, independentemente do valor da nova configuração. Preterido em favor da configuração `telemetry.telemetryLevel`.
	// Habilite os dados de diagnóstico que serão coletados. Isso nos ajuda a melhor entender como Visual Studio Code é executado e onde as melhorias precisam ser feitas. [Leia mais](https://go.microsoft.com/fwlink/?LinkId=521839) sobre o que coletamos e nossa política de privacidade.
	"telemetry.enableTelemetry": true,

	// 
	// Controla a telemetria Visual Studio Code, a telemetria de extensão internar e a telemetria de extensão de terceiros participantes. Algumas extensões de terceiros podem não respeitar essa configuração. Consulte a documentação da extensão específica para ter certeza. A telemetria nos ajuda a entender melhor o desempenho de Visual Studio Code, onde as melhorias precisam ser feitas e como os recursos estão sendo usados. Leia mais sobre os [dados coletados](https://aka.ms/vscode-telemetry) e nossa [política de privacidade](https://go.microsoft.com/fwlink/?LinkId=521839). Será necessário uma reinicialização completa do aplicativo para que as alterações do relatório de falhas entrem em vigor.
	// 
	// &nbsp;
	// 
	// A tabela a seguir descreve os dados enviados com cada configuração:
	// 
	// |       | Relatórios de Falhas | Telemetria de Erro | Dados de Uso |
	// |:------|:---------------------:|:---------------:|:--------------:|
	// | all   |            ✓          |        ✓        |        ✓       |
	// | error |            ✓          |        ✓        |        -       |
	// | crash |            ✓          |        -        |        -       |
	// | off   |            -          |        -        |        -       |
	// 
	// 
	// &nbsp;
	// 
	// ****Observação:*** se esta configuração estiver “desativada”, nenhuma telemetria será enviada independentemente de outras configurações de telemetria. Se essa configuração estiver definida como qualquer coisa, exceto “desativada”, e a telemetria estiver desabilitada com configurações preteridas, nenhuma telemetria será enviada.*
	// 
	//  - all: Envia dados de uso, erros e relatórios de falhas.
	//  - error: Envia relatórios gerais de telemetria e falhas de erros.
	//  - crash: Envia relatórios de falhas no nível do sistema operacional.
	//  - off: Desabilita toda a telemetria do produto.
	"telemetry.telemetryLevel": "all",

	// Controla se as ações embutidas estão sempre visíveis na exibição de Controle do Código-fonte.
	"scm.alwaysShowActions": false,

	// Controla se os repositórios devem sempre estar visíveis na exibição do Controle do Código-Fonte.
	"scm.alwaysShowRepositories": false,

	// Controla se a exibição do Controle do Código-Fonte deve revelar e selecionar arquivos automaticamente ao abri-los.
	"scm.autoReveal": true,

	// Controla o selo da contagem no ícone de Controle do Código-fonte na Barra de Atividade.
	//  - all: Mostrar a soma de todas as notificações de contagem dos Provedores de Controle do Código-fonte.
	//  - focused: Mostrar a notificação de contagem do Provedor de Controle do Código-fonte com foco.
	//  - off: Desabilitar a notificação de contagem do Controle do Código-fonte.
	"scm.countBadge": "all",

	// Controla o modo de exibição do repositório de Controle do Código-fonte padrão.
	//  - tree: Mostrar as alterações do repositório como uma árvore.
	//  - list: Mostrar as alterações do repositório como uma lista.
	"scm.defaultViewMode": "list",

	// Controla o repositório padrão de Controle de Fonte altera a ordem de classificação quando visto como uma lista.
	//  - name: Classifique as alterações do repositório por nome do arquivo.
	//  - path: Classifique as alterações do repositório para o caminho.
	//  - status: Classificar as alterações do repositório pelo status do Controle do Código-Fonte.
	"scm.defaultViewSortKey": "path",

	// Controla decorações de comparação no editor.
	//  - all: Mostrar as decorações de comparação em todas as localizações disponíveis.
	//  - gutter: Mostrar as decorações de comparação somente na medianiz do editor.
	//  - overview: Mostrar as decorações de comparação somente na régua de visão geral.
	//  - minimap: Mostrar as decorações de comparação somente no minimapa.
	//  - none: Não mostrar as decorações de comparação.
	"scm.diffDecorations": "all",

	// Controla o comportamento das decorações da medianiz de comparação do Controle do Código-Fonte.
	//  - diff: Mostrar a exibição de espiada de comparação embutida ao clicar.
	//  - none: Não fazer nada.
	"scm.diffDecorationsGutterAction": "diff",

	// Controla se um padrão é usado para as decorações de comparação na medianiz.
	"scm.diffDecorationsGutterPattern": {
		"added": false,
		"modified": true
	},

	// Controla a visibilidade do decorador de comparação do Controle do Código-fonte na medianiz.
	//  - always: Mostrar o decorador de comparação na medianiz a qualquer momento.
	//  - hover: Mostrar o decorador de comparação na medianiz somente no foco.
	"scm.diffDecorationsGutterVisibility": "always",

	// Controla a largura (px) das decorações de comparação na medianiz (adicionado a & modified).
	"scm.diffDecorationsGutterWidth": 3,

	// Controla se o espaço em branco à esquerda e à direita é ignorado nas decorações da medianiz de comparação do Controle do Código-fonte.
	//  - true: Ignore o espaço em branco à esquerda e à direita.
	//  - false: Não ignore o espaço em branco à esquerda e à direita.
	//  - inherit: Herdar de `diffEditor.ignoreTrimWhitespace`.
	"scm.diffDecorationsIgnoreTrimWhitespace": "false",

	// Controla a fonte da mensagem de entrada. Use 'default' para a família de fontes da interface do usuário do workbench, `editor` para o valor de `editor.fontFamily` ou uma família de fontes personalizada.
	"scm.inputFontFamily": "default",

	// Controla o tamanho da fonte da mensagem de entrada em pixels.
	"scm.inputFontSize": 13,

	// Controla o número máximo de linhas para as quais a entrada crescerá automaticamente.
	"scm.inputMaxLineCount": 10,

	// Controla o número mínimo de linhas a partir das quais a entrada crescerá automaticamente.
	"scm.inputMinLineCount": 1,

	// Controla as notificações de contagem nos cabeçalhos do Provedor de Controle do Código-Fonte. Esses cabeçalhos aparecem na exibição Controle do Código-Fonte quando há mais de um provedor ou quando a configuração `scm.alwaysShowRepositories` está habilitada e na exibição Repositórios de Controle do Código-Fonte.
	//  - hidden: Ocultar notificações de contagem do Provedor de Controle do Código-fonte.
	//  - auto: Somente mostrar a notificação de contagem para o Provedor de Controle do Código-fonte quando diferente de zero.
	//  - visible: Mostrar notificações de contagem do Provedor de Controle do Código-fonte.
	"scm.providerCountBadge": "hidden",

	// Controla a ordem de classificação dos repositórios na exibição de repositórios de controle do código-fonte.
	//  - discovery time: Os repositórios na exibição de Repositórios de Controle do Código-Fonte são classificados pela hora da descoberta. Os repositórios na exibição de Controle do Código-Fonte são classificadas na ordem em que foram selecionados.
	//  - name: Os repositórios nas exibições de Controle do Código-Fonte e Repositórios de Controle do Código-Fonte são classificados pelo nome do repositório.
	//  - path: Os repositórios nas exibições de Controle do Código-Fonte e Repositórios de Controle do Código-Fonte são classificados pelo caminho do repositório.
	"scm.repositories.sortOrder": "discovery time",

	// Controla quantos repositórios são visíveis na seção Repositórios de Controle do Código-fonte. Defina como 0 para poder redimensionar manualmente o modo de exibição.
	"scm.repositories.visible": 10,

	// Controla se um botão de ação pode ser mostrado na exibição do Controle do Código-Fonte.
	"scm.showActionButton": true,

	// Controla se a entrada Todas as Alterações é mostrada para alterações de entrada/saída na exibição Controle de Origem.
	"scm.showChangesSummary": true,

	// Controla se as alterações de entrada são mostradas no modo de exibição Controle do código-fonte.
	//  - always: Sempre mostre as alterações de entrada no modo de exibição Controle do código-fonte.
	//  - never: Nunca mostre as alterações de entrada no modo de exibição Controle do código-fonte.
	//  - auto: Mostrar somente as alterações de entrada no modo de exibição Controle do código-fonte quando houver alguma.
	"scm.showIncomingChanges": "auto",

	// Controla se um botão de ação pode ser mostrado na entrada do Controle do Código-Fonte.
	"scm.showInputActionButton": true,

	// Controla se as alterações de saída são mostradas no modo de exibição Controle do código-fonte.
	//  - always: Sempre mostre as alterações de saída no modo de exibição Controle do código-fonte.
	//  - never: Nunca mostre alterações de saída no modo de exibição Controle do código-fonte.
	//  - auto: Mostrar somente as alterações de saída no modo de exibição Controle do código-fonte quando houver.
	"scm.showOutgoingChanges": "auto",

	// Controla se o editor mostra CodeLens.
	"diffEditor.codeLens": false,

	// 
	//  - legacy: Usa o algoritmo de comparação herdado.
	//  - advanced: Usa o algoritmo de comparação avançada.
	"diffEditor.diffAlgorithm": "advanced",

	// Controla se o editor de comparação mostra decorações vazias para ver onde os caracteres foram inseridos ou excluídos.
	"diffEditor.experimental.showEmptyDecorations": true,

	// Controla se o editor de diferenças deve mostrar movimentos de código detectados.
	"diffEditor.experimental.showMoves": false,

	// Controla quantas linhas são usadas como contexto ao comparar regiões inalteradas.
	"diffEditor.hideUnchangedRegions.contextLineCount": 3,

	// Controla se o editor de comparação mostra regiões inalteradas.
	"diffEditor.hideUnchangedRegions.enabled": false,

	// Controla quantas linhas são usadas como mínimo para regiões inalteradas.
	"diffEditor.hideUnchangedRegions.minimumLineCount": 3,

	// Controla quantas linhas são usadas para regiões inalteradas.
	"diffEditor.hideUnchangedRegions.revealLineCount": 20,

	// Quando habilitado, o editor de comparação ignora as alterações no espaço em branco à esquerda ou à direita.
	"diffEditor.ignoreTrimWhitespace": true,

	// Tempo limite em milissegundos após o cancelamento da computação de comparação. Use 0 para nenhum tempo limite.
	"diffEditor.maxComputationTime": 5000,

	// Tamanho máximo do arquivo em MB para calcular as diferenças. Use 0 para nenhum limite.
	"diffEditor.maxFileSize": 50,

	// When enabled, the diff editor shows a special gutter for revert and stage actions.
	"diffEditor.renderGutterMenu": true,

	// Controla se o editor de comparação mostra indicadores +/- para alterações adicionadas/removidas.
	"diffEditor.renderIndicators": true,

	// Quando ativado, o editor de diferenças mostra setas em sua margem de glifo para reverter as alterações.
	"diffEditor.renderMarginRevertIcon": true,

	// Controla se o editor de comparação mostra a comparação lado a lado ou embutida.
	"diffEditor.renderSideBySide": true,

	// Se a largura do editor de comparação for menor que esse valor, será usada a exibição embutida.
	"diffEditor.renderSideBySideInlineBreakpoint": 900,

	// Se habilitada e a largura do editor for muito pequena, será usada a exibição embutida.
	"diffEditor.useInlineViewWhenSpaceIsLimited": true,

	// 
	//  - off: As linhas nunca serão quebradas.
	//  - on: As linhas serão quebradas na largura do visor.
	//  - inherit: As linhas serão encapsuladas de acordo com a configuração do `editor.wordWrap`.
	"diffEditor.wordWrap": "inherit",

	// Controla se as sugestões devem ser aceitas em caracteres de confirmação. Por exemplo, em JavaScript, o ponto e vírgula (`;`) pode ser um caractere de confirmação que aceita uma sugestão e digita esse caractere.
	"editor.acceptSuggestionOnCommitCharacter": true,

	// Controla se as sugestões devem ser aceitas pressionando `Enter`, além de `Tab`. Ajuda a evitar ambiguidade entre a inserção de novas linhas ou a aceitação de sugestões.
	//  - on
	//  - smart: Somente aceitar uma sugestão com `Enter` quando ela fizer uma alteração textual.
	//  - off
	"editor.acceptSuggestionOnEnter": "on",

	// Controla o número de linhas no editor que podem ser lidas por um leitor de tela de uma vez. Quando detectamos um leitor de tela, definimos o padrão automaticamente como 500. Aviso: esta opção afeta o desempenho para números maiores que o padrão.
	"editor.accessibilityPageSize": 10,

	// Controla se a interface do usuário deve ser executada em um modo otimizado para leitores de tela.
	//  - auto: Use APIs de plataforma para detectar quando um Leitor de Tela está conectado.
	//  - on: Otimize para o uso com um Leitor de Tela.
	//  - off: Suponha que um leitor de tela não esteja conectado.
	"editor.accessibilitySupport": "auto",

	// Controla se o editor deve fechar automaticamente os colchetes após o usuário adicionar um colchete de abertura.
	//  - always
	//  - languageDefined: Usar as configurações de linguagem para determinar quando fechar automaticamente os colchetes.
	//  - beforeWhitespace: Fechar automaticamente os colchetes somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingBrackets": "languageDefined",

	// Controla se o editor deve fechar automaticamente os comentários depois que o usuário adicionar um comentário de abertura.
	//  - always
	//  - languageDefined: Usar as configurações de linguagem para determinar quando fechar automaticamente os comentários.
	//  - beforeWhitespace: Fechar automaticamente os comentários somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingComments": "languageDefined",

	// Controla se o editor deve remover as aspas ou os colchetes de fechamento adjacentes durante a exclusão.
	//  - always
	//  - auto: Remover as aspas ou os colchetes de fechamento adjacentes somente se eles foram inseridos automaticamente.
	//  - never
	"editor.autoClosingDelete": "auto",

	// Controla se o editor deve digitar usando colchetes ou aspas de fechamento.
	//  - always
	//  - auto: Digitar usando colchetes ou aspas de fechamento somente se eles tiverem sido inseridos automaticamente.
	//  - never
	"editor.autoClosingOvertype": "auto",

	// Controla se o editor deverá fechar as aspas automaticamente depois que o usuário adicionar aspas de abertura.
	//  - always
	//  - languageDefined: Use as configurações de linguagem para determinar quando fechar as aspas automaticamente.
	//  - beforeWhitespace: Fechar automaticamente as aspas somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingQuotes": "languageDefined",

	// Controla se o editor deve ajustar automaticamente o recuo quando os usuários digitam, colam, movem ou recuam linhas.
	//  - none: O editor não inserirá o recuo automaticamente.
	//  - keep: O editor manterá o recuo da linha atual.
	//  - brackets: O editor manterá o recuo da linha atual e honrará os colchetes definidos por linguagem.
	//  - advanced: O editor manterá o recuo da linha atual, honrará os colchetes definidos por linguagem e invocará onEnterRules especiais definidos por linguagens.
	//  - full: O editor manterá o recuo da linha atual, honrará os colchetes definidos por linguagem, invocará onEnterRules especiais definidos por linguagens e honrará indentationRules definido por linguagens.
	"editor.autoIndent": "full",

	// Controla se o editor deve envolver as seleções automaticamente.
	//  - languageDefined: Usar as configurações de linguagem para determinar quando circundar as seleções automaticamente.
	//  - quotes: Colocar entre aspas, mas não entre colchetes.
	//  - brackets: Colocar entre colchetes, mas não entre aspas.
	//  - never
	"editor.autoSurround": "languageDefined",

	// Controla se a colorização do par de colchetes está habilitada ou não. Use `workbench.colorCustomizations` para substituir as cores de realce do colchete.
	"editor.bracketPairColorization.enabled": true,

	// Controla se cada tipo de colchete tem seu próprio pool de cores independente.
	"editor.bracketPairColorization.independentColorPoolPerBracketType": false,

	// Execute Ações de Código para o editor ao salvar. As Ações de Código devem ser especificadas e o editor não deve ser desligado. Exemplo: `"source.organizeImports": "explicit" `
	"editor.codeActionsOnSave": {},

	// Habilita/desabilita a exibição da Correção Rápida mais próxima em uma linha quando não estiver atualmente em um diagnóstico.
	"editor.codeActionWidget.includeNearbyQuickFixes": true,

	// Habilitar/desabilitar a exibição de cabeçalhos de grupo no menu de ação de código.
	"editor.codeActionWidget.showHeaders": true,

	// Controla se o editor mostra CodeLens.
	"editor.codeLens": true,

	// Controla a família de fontes do CodeLens.
	"editor.codeLensFontFamily": "",

	// Controla o tamanho da fonte do CodeLens em pixels. Quando é definida como 0, será usado 90% do `editor.fontSize`.
	"editor.codeLensFontSize": 0,

	// Controla se o editor deve renderizar o seletor de cor e os decoradores de cor embutidos.
	"editor.colorDecorators": true,

	// Controla a condição para fazer um seletor de cores aparecer em um decorador de cores
	//  - clickAndHover: Faça o seletor de cores aparecer ao clicar e ao passar o cursor do decorador de cores
	//  - hover: Faça o seletor de cores aparecer ao passar o mouse sobre o decorador de cores
	//  - click: Faça o editor de cores aparecer ao clicar no decorador de cores
	"editor.colorDecoratorsActivatedOn": "clickAndHover",

	// Controla o número máximo de decoradores de cores que podem ser renderizados em um editor de uma só vez.
	"editor.colorDecoratorsLimit": 500,

	// Permite que a seleção com o mouse e as teclas faça a seleção de coluna.
	"editor.columnSelection": false,

	// Controla se linhas vazias devem ser ignoradas com as ações de alternância, adição ou remoção para comentários de linha.
	"editor.comments.ignoreEmptyLines": true,

	// Controla se um caractere de espaço é inserido durante o comentário.
	"editor.comments.insertSpace": true,

	// Controla se o realce de sintaxe deve ser copiado para a área de transferência.
	"editor.copyWithSyntaxHighlighting": true,

	// Controla o estilo de animação do cursor.
	"editor.cursorBlinking": "blink",

	// Controla se a animação de cursor suave deve ser habilitada.
	//  - off: A animação de cursor suave está desabilitada.
	//  - explicit: A animação de cursor suave é habilitada somente quando o usuário move o cursor com um gesto explícito.
	//  - on: A animação de cursor suave está sempre habilitada.
	"editor.cursorSmoothCaretAnimation": "off",

	// Controla o estilo do cursor.
	"editor.cursorStyle": "line",

	// Controla o número mínimo de linhas iniciais visíveis (mínimo 0) e linhas finais (mínimo 1) ao redor do cursor. Conhecido como 'scrollOff' ou 'scrollOffset' em alguns outros editores.
	"editor.cursorSurroundingLines": 0,

	// Controla quando '#cursorSurroundingLines#' deve ser imposto.
	//  - default: `cursorSurroundingLines` é imposto somente quando disparado via teclado ou API.
	//  - all: `cursorSurroundingLines` é sempre imposto.
	"editor.cursorSurroundingLinesStyle": "default",

	// Controla a largura do cursor quando `editor.cursorStyle` está definido como `line`.
	"editor.cursorWidth": 0,

	// Controla se as decorações de cores embutidas devem ser mostradas usando o provedor de cores de documento padrão
	"editor.defaultColorDecorators": false,

	// Define um provedor de intervalo de dobragem padrão que tem precedência sobre todos os outros provedores de intervalo de dobragem. Deverá ser o identificador de uma extensão que contribui com um provedor de intervalo de dobragem.
	//  - null: Todos os provedores de intervalo de dobragem ativos
	//  - njpwerner.autodocstring: Generates python docstrings automatically
	//  - formulahendry.code-runner: Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA, Less, Fortran, Ring, Standard ML, Zig, Mojo, Erlang, SPWN, Pkl, Gleam
	//  - GitHub.copilot: Your AI pair programmer
	//  - GitHub.copilot-chat: AI chat features powered by Copilot
	//  - ms-vscode.cpptools: C/C++ IntelliSense, debugging, and code browsing.
	//  - vscode.css-language-features: Fornece suporte de linguagem avançada para arquivos CSS, LESS e SCSS.
	//  - vscode.html-language-features: Fornece suporte de linguagem avançada para arquivos HTML e Handlebar
	//  - redhat.java: Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...
	//  - vscode.json-language-features: Fornece suporte de linguagem avançada para arquivos JSON.
	//  - James-Yu.latex-workshop: Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.
	//  - vscode.markdown-language-features: Fornece suporte de linguagem avançada para Markdown.
	//  - vscode.markdown-math: Adiciona suporte matemático ao Markdown em notebooks.
	//  - zobo.php-intellisense: Advanced Autocompletion and Refactoring support for PHP
	//  - vscode.php-language-features: Fornece suporte de linguagem avançada para arquivos do PHP.
	//  - ms-python.python: Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.
	//  - donjayamanne.python-environment-manager: View and manage Python environments & packages.
	//  - vscode.typescript-language-features: Fornece suporte de linguagem avançada para JavaScript e TypeScript.
	//  - KevinRose.vsc-python-indent: Correct Python indentation
	//  - batisteo.vscode-django: Beautiful syntax and scoped snippets for perfectionists with deadlines
	//  - bmewburn.vscode-intelephense-client: PHP code intelligence for Visual Studio Code
	//  - vscjava.vscode-java-debug: A lightweight Java debugger for Visual Studio Code
	//  - vscjava.vscode-java-pack: Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more
	//  - vscjava.vscode-maven: Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.
	//  - ms-python.vscode-pylance: A performant, feature-rich language server for Python in VS Code
	//  - twxs.cmake: CMake langage support for Visual Studio Code
	//  - ms-vscode.cmake-tools: Extended CMake support in Visual Studio Code
	//  - vscode.configuration-editing: Fornece recursos (IntelliSense avançado, correção automática) em arquivos de configuração, como arquivos de recomendação de extensão, de inicialização e de configuração.
	//  - ms-vscode.cpptools-extension-pack: Popular extensions for C++ development in Visual Studio Code.
	//  - vscode.debug-auto-launch: O auxiliar para o recurso de anexação automática quando as extensões de depuração de nó não estão ativas.
	//  - vscode.debug-server-ready: Abrir URI no navegador se o servidor em depuração estiver pronto.
	//  - ms-python.debugpy: Python Debugger extension using debugpy.
	//  - vscode.emmet: Suporte Emmet para VS Code
	//  - vscode.extension-editing: Fornece funcionalidades de lint para extensões de criação.
	//  - vscode.git: Integração SCM do Git
	//  - vscode.git-base: Seletor e contribuições estáticas do GIT.
	//  - mhutchie.git-graph: View a Git Graph of your repository, and perform Git actions from the graph.
	//  - donjayamanne.githistory: View git log, file history, compare branches or commits
	//  - vscode.github: Recursos do GitHub para VS Code
	//  - vscode.github-authentication: Provedor de Autenticação do GitHub
	//  - vscode.grunt: Extension to add Grunt capabilities to VS Code.
	//  - vscode.gulp: Extensão para adicionar funcionalidades do Gulp ao VSCode.
	//  - VisualStudioExptTeam.intellicode-api-usage-examples: Veja exemplos de código relevantes do GitHub para mais de 100 mil APIs diferentes diretamente no seu editor.
	//  - vscode.ipynb: Fornece suporte básico para abrir e ler os arquivos de notebook .ipynb do Jupyter
	//  - vscode.jake: Extensão para adicionar funcionalidades do Jake ao VS Code.
	//  - ms-vscode.js-debug: An extension for debugging Node.js programs and Chrome.
	//  - ms-vscode.js-debug-companion: Companion extension to js-debug that provides capability for remote debugging
	//  - ms-toolsai.jupyter: Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.
	//  - ms-toolsai.jupyter-renderers: Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)
	//  - vscode.media-preview: Fornece visualizações integradas do VS Code para imagens, áudio e vídeo
	//  - vscode.merge-conflict: Realce e comandos para conflitos de mesclagem embutida.
	//  - vscode.microsoft-authentication: Provedor de autenticação da Microsoft
	//  - vscode.npm: Extensão para adicionar suporte de tarefa para scripts npm.
	//  - xdebug.php-debug: Debug support for PHP with Xdebug
	//  - vscode.references-view: Referenciar os Resultados da pesquisa como modo de exibição estável e separado na barra lateral
	//  - vscode.search-result: Fornece recursos de linguagem e realce de sintaxe para resultados da pesquisa com guias.
	//  - vscode.simple-browser: Um modo de exibição da Web interno muito básico para exibir conteúdo da Web.
	//  - vscode.tunnel-forwarding: Permite que as portas locais de encaminhamento sejam acessíveis pela Internet.
	//  - vscjava.vscode-java-dependency: Manage Java projects in Visual Studio Code
	//  - vscjava.vscode-java-test: Run and debug JUnit or TestNG test cases.
	//  - ms-vscode.vscode-js-profile-table: Text visualizer for profiles taken from the JavaScript debugger
	//  - ms-toolsai.vscode-jupyter-cell-tags: Jupyter Cell Tags support for VS Code
	//  - ms-toolsai.vscode-jupyter-slideshow: Jupyter Slide Show support for VS Code
	//  - VisualStudioExptTeam.vscodeintellicode: Desenvolvimento assistido por IA
	//  - ms-vsliveshare.vsliveshare: Real-time collaborative development from the comfort of your favorite tools.
	"editor.defaultFoldingRangeProvider": null,

	// Define um formatador padrão que tem precedência sobre todas as outras configurações do formatador. Precisa ser o identificador de uma extensão que contribui com um formatador.
	//  - null: Nenhum
	//  - njpwerner.autodocstring: Generates python docstrings automatically
	//  - formulahendry.code-runner: Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA, Less, Fortran, Ring, Standard ML, Zig, Mojo, Erlang, SPWN, Pkl, Gleam
	//  - GitHub.copilot: Your AI pair programmer
	//  - GitHub.copilot-chat: AI chat features powered by Copilot
	//  - ms-vscode.cpptools: C/C++ IntelliSense, debugging, and code browsing.
	//  - vscode.css-language-features: Fornece suporte de linguagem avançada para arquivos CSS, LESS e SCSS.
	//  - vscode.html-language-features: Fornece suporte de linguagem avançada para arquivos HTML e Handlebar
	//  - redhat.java: Java Linting, Intellisense, formatting, refactoring, Maven/Gradle support and more...
	//  - vscode.json-language-features: Fornece suporte de linguagem avançada para arquivos JSON.
	//  - James-Yu.latex-workshop: Boost LaTeX typesetting efficiency with preview, compile, autocomplete, colorize, and more.
	//  - vscode.markdown-language-features: Fornece suporte de linguagem avançada para Markdown.
	//  - vscode.markdown-math: Adiciona suporte matemático ao Markdown em notebooks.
	//  - zobo.php-intellisense: Advanced Autocompletion and Refactoring support for PHP
	//  - vscode.php-language-features: Fornece suporte de linguagem avançada para arquivos do PHP.
	//  - ms-python.python: Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.
	//  - donjayamanne.python-environment-manager: View and manage Python environments & packages.
	//  - vscode.typescript-language-features: Fornece suporte de linguagem avançada para JavaScript e TypeScript.
	//  - KevinRose.vsc-python-indent: Correct Python indentation
	//  - batisteo.vscode-django: Beautiful syntax and scoped snippets for perfectionists with deadlines
	//  - bmewburn.vscode-intelephense-client: PHP code intelligence for Visual Studio Code
	//  - vscjava.vscode-java-debug: A lightweight Java debugger for Visual Studio Code
	//  - vscjava.vscode-java-pack: Popular extensions for Java development that provides Java IntelliSense, debugging, testing, Maven/Gradle support, project management and more
	//  - vscjava.vscode-maven: Manage Maven projects, execute goals, generate project from archetype, improve user experience for Java developers.
	//  - ms-python.vscode-pylance: A performant, feature-rich language server for Python in VS Code
	//  - twxs.cmake: CMake langage support for Visual Studio Code
	//  - ms-vscode.cmake-tools: Extended CMake support in Visual Studio Code
	//  - vscode.configuration-editing: Fornece recursos (IntelliSense avançado, correção automática) em arquivos de configuração, como arquivos de recomendação de extensão, de inicialização e de configuração.
	//  - ms-vscode.cpptools-extension-pack: Popular extensions for C++ development in Visual Studio Code.
	//  - vscode.debug-auto-launch: O auxiliar para o recurso de anexação automática quando as extensões de depuração de nó não estão ativas.
	//  - vscode.debug-server-ready: Abrir URI no navegador se o servidor em depuração estiver pronto.
	//  - ms-python.debugpy: Python Debugger extension using debugpy.
	//  - vscode.emmet: Suporte Emmet para VS Code
	//  - vscode.extension-editing: Fornece funcionalidades de lint para extensões de criação.
	//  - vscode.git: Integração SCM do Git
	//  - vscode.git-base: Seletor e contribuições estáticas do GIT.
	//  - mhutchie.git-graph: View a Git Graph of your repository, and perform Git actions from the graph.
	//  - donjayamanne.githistory: View git log, file history, compare branches or commits
	//  - vscode.github: Recursos do GitHub para VS Code
	//  - vscode.github-authentication: Provedor de Autenticação do GitHub
	//  - vscode.grunt: Extension to add Grunt capabilities to VS Code.
	//  - vscode.gulp: Extensão para adicionar funcionalidades do Gulp ao VSCode.
	//  - VisualStudioExptTeam.intellicode-api-usage-examples: Veja exemplos de código relevantes do GitHub para mais de 100 mil APIs diferentes diretamente no seu editor.
	//  - vscode.ipynb: Fornece suporte básico para abrir e ler os arquivos de notebook .ipynb do Jupyter
	//  - vscode.jake: Extensão para adicionar funcionalidades do Jake ao VS Code.
	//  - ms-vscode.js-debug: An extension for debugging Node.js programs and Chrome.
	//  - ms-vscode.js-debug-companion: Companion extension to js-debug that provides capability for remote debugging
	//  - ms-toolsai.jupyter: Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.
	//  - ms-toolsai.jupyter-renderers: Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)
	//  - vscode.media-preview: Fornece visualizações integradas do VS Code para imagens, áudio e vídeo
	//  - vscode.merge-conflict: Realce e comandos para conflitos de mesclagem embutida.
	//  - vscode.microsoft-authentication: Provedor de autenticação da Microsoft
	//  - vscode.npm: Extensão para adicionar suporte de tarefa para scripts npm.
	//  - xdebug.php-debug: Debug support for PHP with Xdebug
	//  - vscode.references-view: Referenciar os Resultados da pesquisa como modo de exibição estável e separado na barra lateral
	//  - vscode.search-result: Fornece recursos de linguagem e realce de sintaxe para resultados da pesquisa com guias.
	//  - vscode.simple-browser: Um modo de exibição da Web interno muito básico para exibir conteúdo da Web.
	//  - vscode.tunnel-forwarding: Permite que as portas locais de encaminhamento sejam acessíveis pela Internet.
	//  - vscjava.vscode-java-dependency: Manage Java projects in Visual Studio Code
	//  - vscjava.vscode-java-test: Run and debug JUnit or TestNG test cases.
	//  - ms-vscode.vscode-js-profile-table: Text visualizer for profiles taken from the JavaScript debugger
	//  - ms-toolsai.vscode-jupyter-cell-tags: Jupyter Cell Tags support for VS Code
	//  - ms-toolsai.vscode-jupyter-slideshow: Jupyter Slide Show support for VS Code
	//  - VisualStudioExptTeam.vscodeintellicode: Desenvolvimento assistido por IA
	//  - ms-vsliveshare.vsliveshare: Real-time collaborative development from the comfort of your favorite tools.
	"editor.defaultFormatter": null,

	// Controla se o gesto do mouse Ir para Definição sempre abre o widget de espiada.
	"editor.definitionLinkOpensInPeek": false,

	// Controla se `editor.tabSize#` e `#editor.insertSpaces` serão detectados automaticamente quando um arquivo for aberto com base no conteúdo do arquivo.
	"editor.detectIndentation": true,

	// Controla se o editor deve permitir a movimentação de seleções por meio de arrastar e soltar.
	"editor.dragAndDrop": true,

	// Controla se você pode arrastar e soltar um arquivo em um editor de texto mantendo pressionada a tecla `Shift` (em vez de abrir o arquivo em um editor).
	"editor.dropIntoEditor.enabled": true,

	// Controla se um widget é mostrado ao soltar arquivos no editor. Este widget permite controlar como o arquivo é descartado.
	//  - afterDrop: Mostra o widget seletor de soltar depois que um arquivo é solto no editor.
	//  - never: Nunca mostre o widget seletor de soltar. Em vez disso, o provedor drop padrão é sempre usado.
	"editor.dropIntoEditor.showDropSelector": "afterDrop",

	// Controla se a cópia sem uma seleção copia a linha atual.
	"editor.emptySelectionClipboard": true,

	// Controla se a geração de tokens deve ocorrer de forma assíncrona em uma função de trabalho.
	"editor.experimental.asyncTokenization": true,

	// Controla se a geração de tokens assíncronos deve ser registrada. Somente para depuração.
	"editor.experimental.asyncTokenizationLogging": false,

	// Controla se a tokenização assíncrona deve ser verificada em relação à tokenização em segundo plano herdada. Pode desacelerar a tokenização. Apenas para depuração.
	"editor.experimental.asyncTokenizationVerification": false,

	// Configura o provedor de remoção padrão a ser usado para o conteúdo de um determinado tipo MIME.
	"editor.experimental.dropIntoEditor.defaultProvider": {},

	// Controla se o plano de fundo das edições embutidas deve ser colorido.
	"editor.experimentalInlineEdit.backgroundColoring": false,

	// Controla se as edições embutidas devem ser mostradas no editor.
	"editor.experimentalInlineEdit.enabled": false,

	// Controla a família de fontes da edição embutida.
	"editor.experimentalInlineEdit.fontFamily": "default",

	// Controla quando mostrar a barra de ferramentas de edição embutida.
	//  - always: Mostre a barra de ferramentas de edição embutida sempre que uma sugestão embutida for mostrada.
	//  - onHover: Mostre a barra de ferramentas de edição embutida ao passar o mouse sobre uma sugestão embutida.
	//  - never: Nunca mostre a barra de ferramentas de edição embutida.
	"editor.experimentalInlineEdit.showToolbar": "onHover",

	// Controla se o espaço em branco é renderizado com um novo método experimental.
	//  - svg: Use um novo método de renderização com svgs.
	//  - font: Use um novo método de renderização com caracteres de fonte.
	//  - off: Use o método de renderização estável.
	"editor.experimentalWhitespaceRendering": "svg",

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"editor.fastScrollSensitivity": 5,

	// Controla se Localizar Widget deve adicionar linhas extras na parte superior do editor. Quando true, você poderá rolar para além da primeira linha quando Localizar Widget estiver visível.
	"editor.find.addExtraSpaceOnTop": true,

	// Controla automaticamente a condição para habilitar a Localização na Seleção.
	//  - never: Nunca ativar Localizar na seleção automaticamente (padrão).
	//  - always: Sempre ativar Localizar na seleção automaticamente.
	//  - multiline: Ative Localizar na Seleção automaticamente quando várias linhas de conteúdo forem selecionadas.
	"editor.find.autoFindInSelection": "never",

	// Controla se o cursor deve ir para a localização de correspondências durante a digitação.
	"editor.find.cursorMoveOnType": true,

	// Controla se Localizar Widget deve ler ou modificar a área de transferência de localização compartilhada no macOS.
	"editor.find.globalFindClipboard": false,

	// Controla se a pesquisa é reiniciada automaticamente do início (ou do fim) quando nenhuma correspondência adicional é encontrada.
	"editor.find.loop": true,

	// Controla se a cadeia de caracteres de pesquisa em Localizar Widget é propagada da seleção do editor.
	//  - never: Nunca propagar a cadeia de caracteres da pesquisa da seleção do editor.
	//  - always: Sempre propague a cadeia de caracteres de pesquisa da seleção do editor, incluindo a palavra na posição do cursor.
	//  - selection: Somente propagar a cadeia de caracteres da pesquisa da seleção do editor.
	"editor.find.seedSearchStringFromSelection": "always",

	// Controla se o editor tem a dobragem de código habilitada.
	"editor.folding": true,

	// Controla se o editor deve realçar intervalos dobrados.
	"editor.foldingHighlight": true,

	// Controla se o editor recolhe automaticamente os intervalos de importação.
	"editor.foldingImportsByDefault": false,

	// O número máximo de regiões dobráveis. Aumentar esse valor pode fazer com que o editor se torne menos responsivo quando a fonte atual tiver um grande número de regiões dobráveis.
	"editor.foldingMaximumRegions": 5000,

	// Controla a estratégia para os intervalos de dobragem de computação.
	//  - auto: Usar uma estratégia de dobragem específica a um linguagem, se disponível, senão usar uma baseada em recuo.
	//  - indentation: Usar a estratégia de dobragem baseada em recuo.
	"editor.foldingStrategy": "auto",

	// Controla a família de fontes.
	"editor.fontFamily": "Menlo, Monaco, 'Courier New', monospace",

	// Configura as ligaturas de fonte ou os recursos de fonte. Pode ser um booliano para habilitar/desabilitar ligaturas ou uma cadeia de caracteres para o valor da propriedade 'font-feature-settings' do CSS.
	"editor.fontLigatures": false,

	// Controla o tamanho da fonte em pixels.
	"editor.fontSize": 12,

	// Configura variações de fonte. Pode ser um booleano para habilitar/desabilitar a tradução de font-weight para font-variation-settings ou uma cadeia de caracteres para o valor da propriedade CSS 'font-variation-settings'.
	"editor.fontVariations": false,

	// Controla a espessura da fonte. Aceita palavras-chave "normal" e "bold" ou números entre 1 e 1.000.
	"editor.fontWeight": "normal",

	// Controla se o editor deve formatar automaticamente o conteúdo colado. Um formatador precisa estar disponível e o formatador deve ser capaz de formatar um intervalo em um documento.
	"editor.formatOnPaste": false,

	// Formatar um arquivo ao salvar. Um formatador precisa estar disponível, o arquivo não deve ser salvo após o atraso e o editor não deve estar desligando.
	"editor.formatOnSave": false,

	// Controla se o formato no salvamento formata o arquivo inteiro ou somente as modificações. Aplica-se somente quando `editor.formatOnSave` é habilitado.
	//  - file: Formate todo o documento.
	//  - modifications: Formate modificações (exige controle do código-fonte).
	//  - modificationsIfAvailable: Tentará formatar apenas as modificações (requer controle do código-fonte). Se o controle do código-fonte não puder ser usado, todo o arquivo será formatado.
	"editor.formatOnSaveMode": "file",

	// Controla se o editor deve formatar automaticamente a linha após a digitação.
	"editor.formatOnType": false,

	// Controla se o editor deve renderizar a margem vertical do glifo. A margem do glifo é usada principalmente para depuração.
	"editor.glyphMargin": true,

	// ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Declaração' é a localização atual.
	"editor.gotoLocation.alternativeDeclarationCommand": "editor.action.goToReferences",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Definição' é a localização atual.
	"editor.gotoLocation.alternativeDefinitionCommand": "editor.action.goToReferences",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Implementação' é a localização atual.
	"editor.gotoLocation.alternativeImplementationCommand": "",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Referência' é a localização atual.
	"editor.gotoLocation.alternativeReferenceCommand": "",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Definição de Tipo' é a localização atual.
	"editor.gotoLocation.alternativeTypeDefinitionCommand": "editor.action.goToReferences",

	// Essa configuração foi preterida. Use configurações separadas como 'editor.editor.gotoLocation.multipleDefinitions' ou 'editor.editor.gotoLocation.multipleImplementations'.
	// 
	"editor.gotoLocation.multiple": null,

	// Controla o comportamento do comando 'Go to Declaration' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleDeclarations": "peek",

	// Controla o comportamento do comando 'Go to Definition' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleDefinitions": "peek",

	// Controla o comportamento do comando 'Go to Implementations' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleImplementations": "peek",

	// Controla o comportamento do comando 'Go to References' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleReferences": "peek",

	// Controla o comportamento do comando 'Go to Type Definition' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleTypeDefinitions": "peek",

	// Controla se as guias de pares de colchetes estão habilitadas ou não.
	//  - true: Habilita guias de par de colchetes.
	//  - active: Habilita guias de par de colchetes somente para o par de colchetes ativo.
	//  - false: Desabilita guias de par de colchetes.
	"editor.guides.bracketPairs": false,

	// Controla se as guias de par de colchetes horizontais estão habilitadas ou não.
	//  - true: Habilita guias horizontais como adição a guias de par de colchetes verticais.
	//  - active: Habilita guias horizontais somente para o par de colchetes ativo.
	//  - false: Desabilita guias de par de colchetes horizontais.
	"editor.guides.bracketPairsHorizontal": "active",

	// Controla se o editor deve destacar o par de colchetes ativo.
	"editor.guides.highlightActiveBracketPair": true,

	// Controla se o editor deve realçar a guia de recuo ativo.
	//  - true: Realçar o guia de recuo ativo.
	//  - always: Realça o guia de recuo ativo mesmo se as guias de colchetes estiverem realçadas.
	//  - false: Não realçar o guia de recuo ativo.
	"editor.guides.highlightActiveIndentation": true,

	// Controla se o editor deve renderizar guias de recuo.
	"editor.guides.indentation": true,

	// Controla se o cursor deve ser ocultado na régua de visão geral.
	"editor.hideCursorInOverviewRuler": false,

	// Prefira mostrar os focos acima da linha, se houver espaço.
	"editor.hover.above": true,

	// Controla o atraso em milissegundos após o qual o foco é exibido.
	"editor.hover.delay": 300,

	// Controla se o foco é mostrado.
	"editor.hover.enabled": true,

	// Controla o atraso em milissegundos após o qual o foco fica oculto. Requer que `editor.hover.sticky` esteja habilitado.
	"editor.hover.hidingDelay": 300,

	// Controla se o foco deve permanecer visível quando o mouse é movido sobre ele.
	"editor.hover.sticky": true,

	// O número de espaços usados para recuo ou `"tabSize"` para usar o valor de '#editor.tabSize#'. Essa configuração é substituída com base no conteúdo do arquivo quando '#editor.detectIndentation#' estiver ativado.
	"editor.indentSize": "tabSize",

	// Habilita as dicas embutidas no editor.
	//  - on: As dicas embutidas estão habilitadas
	//  - onUnlessPressed: As dicas de incrustação são exibidas por padrão e ocultadas ao segurar Ctrl+Option
	//  - offUnlessPressed: As dicas de embutimento ficam ocultas por padrão e são exibidas ao segurar Ctrl+Option
	//  - off: As dicas embutidas estão desabilitadas
	"editor.inlayHints.enabled": "on",

	// Controla a família de fontes de dicas de inlay no editor. Quando definido como vazio, o `editor.fontFamily` é usado.
	"editor.inlayHints.fontFamily": "",

	// Controla o tamanho da fonte das dicas de inlay no editor. Por padrão, o `editor.fontSize` é usado quando o valor configurado é menor que `5` ou maior que o tamanho da fonte do editor.
	"editor.inlayHints.fontSize": 0,

	// Habilita o preenchimento em torno das sugestões embutidas no editor.
	"editor.inlayHints.padding": false,

	// Controla se a dica de acessibilidade deve ser fornecida aos usuários do leitor de tela quando uma conclusão embutida é mostrada.
	"editor.inlineCompletionsAccessibilityVerbose": false,

	// Controla se quer mostrar automaticamente sugestões em linha no editor.
	"editor.inlineSuggest.enabled": true,

	// Controla a família de fontes das sugestões embutidas.
	"editor.inlineSuggest.fontFamily": "default",

	// Controla quando mostrar a barra de ferramentas de sugestão embutida.
	//  - always: Mostrar a barra de ferramentas de sugestão embutida sempre que uma sugestão embutida for mostrada.
	//  - onHover: Mostrar a barra de ferramentas de sugestão embutida ao passar o mouse sobre uma sugestão embutida.
	//  - never: Nunca mostre a barra de ferramentas de sugestão embutida.
	"editor.inlineSuggest.showToolbar": "onHover",

	// Controla como as sugestões embutidas interagem com o widget de sugestão. Se habilitado, o widget de sugestão não é mostrado automaticamente quando sugestões embutidas estão disponíveis.
	"editor.inlineSuggest.suppressSuggestions": false,

	// Insira espaços ao pressionar 'Tab'. Essa configuração é substituída com base no conteúdo do arquivo quando `editor.detectIndentation` está ativado.
	"editor.insertSpaces": true,

	// Define os símbolos de colchetes que aumentam ou diminuem o recuo.
	"editor.language.brackets": null,

	// Define os pares de colchetes que são coloridos por seu nível de aninhamento se a colorização de par de colchetes estiver habilitada.
	"editor.language.colorizedBracketPairs": null,

	// Tratamento especial para arquivos grandes para desabilitar determinados recursos de uso intensivo de memória.
	"editor.largeFileOptimizations": true,

	// Controla o espaçamento de letras em pixels.
	"editor.letterSpacing": 0,

	// Habilita a lâmpada de Ação do Código no editor.
	//  - off: Desabilite o menu de ação do código.
	//  - onCode: Mostra o menu de ação do código quando o cursor está nas linhas com código.
	//  - on: Mostra o menu de ação do código quando o cursor estiver nas linhas com código ou nas linhas vazias.
	"editor.lightbulb.enabled": "on",

	// Controla a altura da linha. 
	//  - Use 0 para calcular automaticamente a altura da linha do tamanho da fonte.
	//  - Os valores entre 0 e 8 serão usados como um multiplicador com o tamanho da fonte.
	//  - Valores maiores ou iguais a 8 serão usados como valores efetivos.
	"editor.lineHeight": 0,

	// Controla a exibição de números de linha.
	//  - off: Os números de linha não são renderizados.
	//  - on: Os números de linha são renderizados como um número absoluto.
	//  - relative: Os números de linha são renderizados como distância em linhas à posição do cursor.
	//  - interval: Os números de linha são renderizados a cada dez linhas.
	"editor.lineNumbers": "on",

	// Controla se o editor tem a edição vinculada habilitada. Dependendo da linguagem, os símbolos relacionados, por exemplo, a marcas HTML, são atualizados durante a edição.
	"editor.linkedEditing": false,

	// Controla se o editor deve detectar links e torná-los clicáveis.
	"editor.links": true,

	// Realçar colchetes correspondentes.
	"editor.matchBrackets": "always",

	// Linhas acima desse comprimento não serão indexadas por motivos de desempenho
	"editor.maxTokenizationLineLength": 20000,

	// Controla se o minimapa é ocultado automaticamente.
	"editor.minimap.autohide": false,

	// Controla se o minimapa é exibido.
	"editor.minimap.enabled": true,

	// Limitar a largura do minimapa para renderizar no máximo um determinado número de colunas.
	"editor.minimap.maxColumn": 120,

	// Renderizar os caracteres reais em uma linha, em oposição aos blocos de cores.
	"editor.minimap.renderCharacters": true,

	// Escala de conteúdo desenhada no minimapa: 1, 2 ou 3.
	"editor.minimap.scale": 1,

	// Controls the font size of section headers in the minimap.
	"editor.minimap.sectionHeaderFontSize": 9,

	// Controls whether MARK: comments are shown as section headers in the minimap.
	"editor.minimap.showMarkSectionHeaders": true,

	// Controls whether named regions are shown as section headers in the minimap.
	"editor.minimap.showRegionSectionHeaders": true,

	// Controla quando o controle deslizante do minimapa é exibido.
	"editor.minimap.showSlider": "mouseover",

	// Controla o lado em que o minimapa deve ser renderizado.
	"editor.minimap.side": "right",

	// Controla o tamanho do minimapa.
	//  - proportional: O minimapa tem o mesmo tamanho que o conteúdo do editor (e pode rolar).
	//  - fill: O minimapa alongará ou reduzirá conforme necessário para preencher a altura do editor (sem rolagem).
	//  - fit: O minimapa será reduzido conforme o necessário para nunca ser maior que o editor (sem rolagem).
	"editor.minimap.size": "proportional",

	// Um multiplicador a ser usado no `deltaX` e no `deltaY` dos eventos de rolagem do mouse.
	"editor.mouseWheelScrollSensitivity": 1,

	// Aplicar zoom à fonte do editor ao usar o botão de rolagem do mouse e segurar `Cmd`.
	"editor.mouseWheelZoom": false,

	// Controla o número máximo de cursores que podem estar em um editor ativo ao mesmo tempo.
	"editor.multiCursorLimit": 10000,

	// Mesclar vários cursores quando eles estiverem sobrepostos.
	"editor.multiCursorMergeOverlapping": true,

	// O modificador a ser usado para adicionar vários cursores com o mouse. Os gestos do mouse Ir para Definição e Abrir Link irão adaptar-se de forma a não entrarem em conflito com o [modificador multicursor](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).
	//  - ctrlCmd: Mapeia para `Control` no Windows e no Linux e para `Command` no macOS.
	//  - alt: Mapeia para `Alt` no Windows e no Linux e para `Option` no macOS.
	"editor.multiCursorModifier": "alt",

	// Controla a colagem quando a contagem de linhas do texto colado corresponde à contagem do cursor.
	//  - spread: Cada cursor cola uma única linha do texto.
	//  - full: Cada cursor cola o texto completo.
	"editor.multiCursorPaste": "spread",

	// Controla se as ocorrências devem ser realçadas nos arquivos abertos.
	//  - off: Não realça ocorrências.
	//  - singleFile: Realça as ocorrências somente no arquivo atual.
	//  - multiFile: Experimental: realça ocorrências em todos os arquivos abertos válidos.
	"editor.occurrencesHighlight": "singleFile",

	// Controla se uma borda deve ser desenhada ao redor da régua de visão geral.
	"editor.overviewRulerBorder": true,

	// Controla a quantidade de espaço entre a borda inferior do editor e a última linha.
	"editor.padding.bottom": 0,

	// Controla a quantidade de espaço entre a borda superior do editor e a primeira linha.
	"editor.padding.top": 0,

	// Controla se o parâmetro sugere ciclos de menu ou fecha ao chegar ao final da lista.
	"editor.parameterHints.cycle": true,

	// Habilita um pop-up que mostra a documentação do parâmetro e as informações de tipo conforme você digita.
	"editor.parameterHints.enabled": true,

	// Controla se você pode colar conteúdo de maneiras diferentes.
	"editor.pasteAs.enabled": true,

	// Controla se um widget é mostrado ao colar conteúdo no editor. Este widget permite controlar como o arquivo é colado.
	//  - afterPaste: Mostra o widget do seletor de colagem depois que o conteúdo é colado no editor.
	//  - never: Nunca mostre o widget seletor de colagem. Em vez disso, o comportamento de colagem padrão é sempre usado.
	"editor.pasteAs.showPasteSelector": "afterPaste",

	// Controla se deve focar o editor embutido ou a árvore no widget de espiada.
	//  - tree: Focalizar a árvore ao abrir a espiada
	//  - editor: Focalizar o editor ao abrir a espiada
	"editor.peekWidgetDefaultFocus": "tree",

	// Controla se as sugestões devem aparecer automaticamente durante a digitação. Isso pode ser controlado para digitar comentários, cadeias de caracteres e outros códigos. A sugestão rápida pode ser configurada para ser exibida como texto fantasma ou com o widget de sugestão. Esteja ciente também da configuração '#editor.suggestOnTriggerCharacters#' que controla se as sugestões são acionadas por caracteres especiais.
	"editor.quickSuggestions": {
		"other": "on",
		"comments": "off",
		"strings": "off"
	},

	// Controla o atraso em milissegundos após o qual as sugestões rápidas serão exibidas.
	"editor.quickSuggestionsDelay": 10,

	// Habilitar/desabilitar a capacidade de visualizar alterações antes de renomear
	"editor.rename.enablePreview": true,

	// Preterido. Use `editor.linkedEditing`.
	// Controla se o editor é renomeado automaticamente no tipo.
	"editor.renameOnType": false,

	// Controla se o editor deve renderizar caracteres de controle.
	"editor.renderControlCharacters": true,

	// Renderizar o número da última linha quando o arquivo terminar com uma nova linha.
	"editor.renderFinalNewline": "on",

	// Controla como o editor deve renderizar o realce da linha atual.
	//  - none
	//  - gutter
	//  - line
	//  - all: Realça a medianiz e a linha atual.
	"editor.renderLineHighlight": "line",

	// Controla se o editor deve renderizar o realce da linha atual somente quando está focalizado.
	"editor.renderLineHighlightOnlyWhenFocus": false,

	// Controla como o editor deve renderizar caracteres de espaço em branco.
	//  - none
	//  - boundary: Renderizar caracteres de espaço em branco, exceto espaços únicos entre palavras.
	//  - selection: Renderizar caracteres de espaço em branco somente no texto selecionado.
	//  - trailing: Renderizar somente os caracteres de espaço em branco à direita.
	//  - all
	"editor.renderWhitespace": "selection",

	// Controla se as seleções devem ter cantos arredondados.
	"editor.roundedSelection": true,

	// Renderizar réguas verticais após um determinado número de caracteres com espaçamento uniforme. Usar vários valores para várias réguas. Nenhuma régua será desenhada se a matriz estiver vazia.
	"editor.rulers": [],

	// Controle se as sugestões em linha são anunciadas por um leitor de tela.
	"editor.screenReaderAnnounceInlineSuggestion": true,

	// Controla a visibilidade da barra de rolagem horizontal.
	//  - auto: A barra de rolagem horizontal estará visível somente quando necessário.
	//  - visible: A barra de rolagem horizontal sempre estará visível.
	//  - hidden: A barra de rolagem horizontal sempre estará oculta.
	"editor.scrollbar.horizontal": "auto",

	// A altura da barra de rolagem horizontal.
	"editor.scrollbar.horizontalScrollbarSize": 12,

	// Quando definida, a barra de rolagem horizontal não aumentará o tamanho do conteúdo do editor.
	"editor.scrollbar.ignoreHorizontalScrollbarInContentHeight": false,

	// Controla se os cliques rolam por página ou saltam para a posição do clique.
	"editor.scrollbar.scrollByPage": false,

	// Controla a visibilidade da barra de rolagem vertical.
	//  - auto: A barra de rolagem vertical estará visível somente quando necessário.
	//  - visible: A barra de rolagem vertical sempre estará visível.
	//  - hidden: A barra de rolagem vertical sempre estará oculta.
	"editor.scrollbar.vertical": "auto",

	// A largura da barra de rolagem vertical.
	"editor.scrollbar.verticalScrollbarSize": 14,

	// Controla o número de caracteres extras acima do qual o editor será rolado horizontalmente.
	"editor.scrollBeyondLastColumn": 4,

	// Controla se o editor será rolado para além da última linha.
	"editor.scrollBeyondLastLine": true,

	// Rolar apenas ao longo do eixo predominante ao rolar vertical e horizontalmente ao mesmo tempo. Evita o descompasso horizontal ao rolar verticalmente em um trackpad.
	"editor.scrollPredominantAxis": true,

	// Controla se o editor deve realçar correspondências semelhantes à seleção.
	"editor.selectionHighlight": true,

	// Controla se o semanticHighlighting é mostrado para as linguagens que dão suporte a ele.
	//  - true: Realce de semântica habilitado para todos os temas de cor.
	//  - false: Realce de semântica desabilitado para todos os temas de cor.
	//  - configuredByTheme: O realce de semântica é configurado pela configuração `semanticHighlighting` do tema de cor atual.
	"editor.semanticHighlighting.enabled": "configuredByTheme",

	// Substitui os estilos e a cor do token semântico do editor do tema de cores selecionado no momento.
	"editor.semanticTokenColorCustomizations": {},

	// Controla variáveis preteridas do tachado.
	"editor.showDeprecated": true,

	// Controla quando os controles de dobragem na medianiz são exibidos.
	//  - always: Sempre mostrar os controles de dobragem.
	//  - never: Nunca mostre os controles dobráveis e reduza o tamanho da calha.
	//  - mouseover: Mostrar somente os controles de dobragem quando o mouse estiver sobre a medianiz.
	"editor.showFoldingControls": "mouseover",

	// Controla o esmaecimento do código não usado.
	"editor.showUnused": true,

	// Se os espaços em branco à direita e à esquerda sempre devem ser selecionados.
	"editor.smartSelect.selectLeadingAndTrailingWhitespace": true,

	// Se subpalavras (como "foo" em "fooBar" ou "foo_bar") devem ser selecionadas.
	"editor.smartSelect.selectSubwords": true,

	// Controla se o editor rolará usando uma animação.
	"editor.smoothScrolling": false,

	// Controla se cercar com trechos ou trechos de modelo de arquivo são exibidos como ações de código.
	"editor.snippets.codeActions.enabled": true,

	// Controla se os snippets são mostrados com outras sugestões e como são classificados.
	//  - top: Mostrar sugestões de snippet na parte superior de outras sugestões.
	//  - bottom: Mostrar sugestões de snippet abaixo de outras sugestões.
	//  - inline: Mostrar sugestões de snippets com outras sugestões.
	//  - none: Não mostrar sugestões de snippet.
	"editor.snippetSuggestions": "inline",

	// Mantenha os editores de inspeção abertos mesmo ao clicar duas vezes em seu conteúdo ou ao pressionar `Escape`.
	"editor.stablePeek": false,

	// Define o modelo a ser usado para determinar quais linhas fixar. Se o modelo de estrutura de tópicos não existir, ele fará fallback no modelo de provedor de dobragem, que faz fallback no modelo de recuo. Essa ordem é respeitada em todos os três casos.
	"editor.stickyScroll.defaultModel": "outlineModel",

	// Mostra os escopos atuais aninhados durante a rolagem na parte superior do editor.
	"editor.stickyScroll.enabled": true,

	// Define o número máximo de linhas autoadesivas a serem mostradas.
	"editor.stickyScroll.maxLineCount": 5,

	// Habilite a rolagem do Rolagem de Aderência com a barra de rolagem horizontal do editor.
	"editor.stickyScroll.scrollWithEditor": true,

	// Emular o comportamento da seleção dos caracteres de tabulação ao usar espaços para recuo. A seleção respeitará as paradas de tabulação.
	"editor.stickyTabStops": false,

	// Esta configuração foi preterida. Use configurações separadas como 'editor.suggest.showKeywords' ou 'editor.suggest.showSnippets'.
	// 
	"editor.suggest.filteredTypes": {},

	// Controla se a filtragem e classificação de sugestões considera erros pequenos de digitação.
	"editor.suggest.filterGraceful": true,

	// Controla se as palavras são substituídas ao aceitar as conclusões. Observe que isso depende de extensões que optam por esse recurso.
	//  - insert: Inserir sugestão sem substituir o texto à direita do cursor.
	//  - replace: Inserir a sugestão e substituir o texto à direita do cursor.
	"editor.suggest.insertMode": "insert",

	// Controla se a classificação favorece palavras que aparecem próximas ao cursor.
	"editor.suggest.localityBonus": false,

	// Quando ativado, a filtragem IntelliSense requer que o primeiro caractere corresponda a uma palavra inicial, por exemplo, `c` no `Console` ou `WebContext`, mas _não_ na `descrição`. Quando desativado, o IntelliSense mostrará mais resultados, mas ainda os classificará por qualidade de correspondência.
	"editor.suggest.matchOnWordStartOnly": true,

	// Esta configuração foi preterida. Agora, o widget de sugestão pode ser redimensionado.
	// 
	"editor.suggest.maxVisibleSuggestions": 0,

	// Controla se a visualização do resultado da sugestão é apresentada no editor.
	"editor.suggest.preview": false,

	// Controla se uma sugestão é selecionada quando o widget é exibido. Observe que isso só se aplica a sugestões disparadas automaticamente ('#editor.quickSuggestions#' e '#editor.suggestOnTriggerCharacters#') e que uma sugestão é sempre selecionada quando invocada explicitamente, por exemplo, por meio de 'Ctrl+Espaço'.
	//  - always: Sempre selecione uma sugestão ao disparar automaticamente o IntelliSense.
	//  - never: Nunca selecione uma sugestão ao disparar automaticamente o IntelliSense.
	//  - whenTriggerCharacter: Selecione uma sugestão somente ao disparar o IntelliSense de um caractere de gatilho.
	//  - whenQuickSuggestion: Selecione uma sugestão somente ao disparar o IntelliSense enquanto digita.
	"editor.suggest.selectionMode": "always",

	// Controla se as seleções de sugestão lembradas são compartilhadas entre vários workspaces e janelas (precisa de `editor.suggestSelection`).
	"editor.suggest.shareSuggestSelections": false,

	// Quando habilitado, o IntelliSense mostra sugestões de `class`.
	"editor.suggest.showClasses": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `color`.
	"editor.suggest.showColors": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `constant`.
	"editor.suggest.showConstants": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `constructor`.
	"editor.suggest.showConstructors": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `customcolor`.
	"editor.suggest.showCustomcolors": true,

	// Quando habilitado, o IntelliSense mostra sugestões 'preteridas'.
	"editor.suggest.showDeprecated": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `enumMember`.
	"editor.suggest.showEnumMembers": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `enum`.
	"editor.suggest.showEnums": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `event`.
	"editor.suggest.showEvents": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `field`.
	"editor.suggest.showFields": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `file`.
	"editor.suggest.showFiles": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `folder`.
	"editor.suggest.showFolders": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `function`.
	"editor.suggest.showFunctions": true,

	// Controla se os ícones em sugestões devem ser mostrados ou ocultados.
	"editor.suggest.showIcons": true,

	// Controla se os detalhes da sugestão são mostrados embutidos com o rótulo ou somente no widget de detalhes.
	"editor.suggest.showInlineDetails": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `interface`.
	"editor.suggest.showInterfaces": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `issues`.
	"editor.suggest.showIssues": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `keyword`.
	"editor.suggest.showKeywords": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `method`.
	"editor.suggest.showMethods": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `module`.
	"editor.suggest.showModules": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `operator`.
	"editor.suggest.showOperators": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `property`.
	"editor.suggest.showProperties": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `reference`.
	"editor.suggest.showReferences": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `snippet`.
	"editor.suggest.showSnippets": true,

	// Controla a visibilidade da barra de status na parte inferior do widget de sugestão.
	"editor.suggest.showStatusBar": false,

	// Quando habilitado, o IntelliSense mostra sugestões de `struct`.
	"editor.suggest.showStructs": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `typeParameter`.
	"editor.suggest.showTypeParameters": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `unit`.
	"editor.suggest.showUnits": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `user`.
	"editor.suggest.showUsers": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `value`.
	"editor.suggest.showValues": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `variable`.
	"editor.suggest.showVariables": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `text`.
	"editor.suggest.showWords": true,

	// Controla se um snippet ativo impede sugestões rápidas.
	"editor.suggest.snippetsPreventQuickSuggestions": false,

	// Tamanho da fonte para o widget sugerido. Quando definido como `0`, o valor de `editor.fontSize` é usado.
	"editor.suggestFontSize": 0,

	// Altura da linha para o widget de sugestão. Quando definido como `0`, o valor de `editor.lineHeight` é usado. O valor mínimo é 8.
	"editor.suggestLineHeight": 0,

	// Controla se as sugestões devem ser exibidas automaticamente ao digitar caracteres de gatilho.
	"editor.suggestOnTriggerCharacters": true,

	// Controla como as sugestões são previamente selecionadas ao mostrar a lista de sugestões.
	//  - first: Sempre selecionar a primeira sugestão.
	//  - recentlyUsed: Selecionar sugestões recentes, a menos que outra digitação selecione uma, por exemplo, `console.| -> console.log`, pois `log` foi concluído recentemente.
	//  - recentlyUsedByPrefix: Selecionar sugestões com base nos prefixos anteriores que concluíram essas sugestões, por exemplo, `co -> console` e `con -> const`.
	"editor.suggestSelection": "first",

	// Habilita as conclusões da tabulação.
	//  - on: A conclusão da tabulação inserirá a melhor sugestão de correspondência quando você pressionar a tecla Tab.
	//  - off: Desabilitar as conclusões da tabulação.
	//  - onlySnippets: A conclusão da tabulação insere snippets quando o prefixo corresponde. Funciona melhor quando 'quickSuggestions' não está habilitado.
	"editor.tabCompletion": "off",

	// Controla se o editor recebe guias ou as transfere para o workbench de navegação.
	"editor.tabFocusMode": false,

	// O número de espaços aos qual uma guia é igual. Essa configuração é substituída com base no conteúdo do arquivo quando `editor.detectIndentation` está ativado.
	"editor.tabSize": 4,

	// Substitui o estilo da fonte e as cores de sintaxe do editor do tema de cores selecionado no momento.
	"editor.tokenColorCustomizations": {
		"[*Light*]": {
			"textMateRules": [
				{
					"scope": "ref.matchtext",
					"settings": {
						"foreground": "#000"
					}
				}
			]
		},
		"[*Dark*]": {
			"textMateRules": [
				{
					"scope": "ref.matchtext",
					"settings": {
						"foreground": "#fff"
					}
				}
			]
		}
	},

	// Remover o espaço em branco inserido automaticamente à direita.
	"editor.trimAutoWhitespace": true,

	// Controla se clicar no conteúdo vazio depois de uma linha dobrada desdobrará a linha.
	"editor.unfoldOnClickAfterEndOfLine": false,

	// Define os caracteres permitidos que não estão sendo destacados.
	"editor.unicodeHighlight.allowedCharacters": {},

	// Caracteres unicode que são comuns em localidades permitidas não estão sendo destacados.
	"editor.unicodeHighlight.allowedLocales": {
		"_os": true,
		"_vscode": true
	},

	// Controla se são realçados caracteres que podem ser confundidos com caracteres ASCII básicos, exceto aqueles que são comuns no local do usuário atual.
	"editor.unicodeHighlight.ambiguousCharacters": true,

	// Controla se os caracteres nos comentários também devem ser sujeitos a destaque unicode.
	"editor.unicodeHighlight.includeComments": "inUntrustedWorkspace",

	// Controla se as cadeias de caracteres também devem estar sujeitas ao realce do unicode.
	"editor.unicodeHighlight.includeStrings": true,

	// Controla se os caracteres que apenas reservam espaço ou não têm largura alguma são destacados.
	"editor.unicodeHighlight.invisibleCharacters": true,

	// Controla se todos os caracteres ASCII não-básicos são destacados. Somente caracteres entre U+0020 e U+007E, tabulação, alimentação de linha e retorno de carro são considerados ASCII básicos.
	"editor.unicodeHighlight.nonBasicASCII": "inUntrustedWorkspace",

	// Remover terminadores de linha incomuns que possam causar problemas.
	//  - auto: Terminadores de linha incomuns são removidos automaticamente.
	//  - off: Terminadores de linha incomuns são ignorados.
	//  - prompt: Terminadores de linha incomuns solicitam ser removidos.
	"editor.unusualLineTerminators": "prompt",

	// A inserção e a exclusão de um espaço em branco seguem as paradas da tabulação.
	"editor.useTabStops": true,

	// Controla se as conclusões devem ser computadas com base nas palavras do documento e a partir de quais documentos elas são computadas.
	//  - off: Desabilite as Sugestões Baseadas em Palavras.
	//  - currentDocument: Sugerir palavras apenas do documento ativo.
	//  - matchingDocuments: Sugerir palavras de todos os documentos abertos da mesma linguagem.
	//  - allDocuments: Sugerir palavras de todos os documentos abertos.
	"editor.wordBasedSuggestions": "matchingDocuments",

	// Controla as regras de quebra de palavras usadas para texto chinês/japonês/coreano (CJK).
	//  - normal: Use a regra de quebra de linha padrão.
	//  - keepAll: As quebras de palavras não devem ser usadas para texto chinês/japonês/coreano (CJK). O comportamento do texto não CJK é igual ao normal.
	"editor.wordBreak": "normal",

	// 
	"editor.wordSegmenterLocales": null,

	// Caracteres que serão usados como separadores de palavras ao fazer operações ou navegações relacionadas a palavras.
	"editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

	// Controla como as linhas devem ser quebradas.
	//  - off: As linhas nunca serão quebradas.
	//  - on: As linhas serão quebradas na largura do visor.
	//  - wordWrapColumn: As linhas serão quebradas em `editor.wordWrapColumn`.
	//  - bounded: As linhas serão quebradas no mínimo do visor e de `editor.wordWrapColumn`.
	"editor.wordWrap": "off",

	// Controla a coluna de quebra de linha do editor quando `editor.wordWrap` é `wordWrapColumn` ou `bounded`.
	"editor.wordWrapColumn": 80,

	// Controla o recuo de linhas quebradas.
	//  - none: Sem recuo. Linhas quebradas começam na coluna 1.
	//  - same: As linhas quebradas têm o mesmo recuo que o pai.
	//  - indent: As linhas quebradas obtêm recuo de +1 para o pai.
	//  - deepIndent: As linhas quebradas obtêm recuo de +2 para o pai.
	"editor.wrappingIndent": "same",

	// Controla o algoritmo que calcula os pontos de encapsulamento. Nota que, no modo de acessibilidade, avançado será usado para a melhor experiência.
	//  - simple: Assume que todos os caracteres têm a mesma largura. Este é um algoritmo rápido que funciona corretamente para fontes com espaçamento uniforme e determinados scripts (como caracteres latinos) em que os glifos têm a mesma largura.
	//  - advanced: Delega a computação do ponto de quebra de linha para o navegador. Este é um algoritmo lento, que pode causar congelamento para arquivos grandes, mas funciona corretamente em todos os casos.
	"editor.wrappingStrategy": "simple",

	// Se as sessões de chat embutido pendentes impedem o salvamento.
	"inlineChat.acceptedOrDiscardBeforeSave": true,

	// Se o chat embutido também renderiza um visualizador de comparação acessível para suas alterações.
	//  - auto: O visualizador de comparação acessível é baseado na habilitação do modo leitor de tela.
	//  - on: O visualizador de comparação acessível está sempre habilitado.
	//  - off: O visualizador de comparação acessível nunca está habilitado.
	"inlineChat.accessibleDiffView": "auto",

	// Se uma sessão de Chat Embutido deve ser encerrada ao digitar fora das regiões alteradas.
	"inlineChat.finishOnType": false,

	// Manter o atalho de teclado do chat embutido habilitará automaticamente o reconhecimento de fala.
	"inlineChat.holdToSpeech": true,

	// Configure se as alterações criadas com chat embutido são aplicadas diretamente ao documento ou são visualizadas primeiro.
	//  - live: As alterações são aplicadas diretamente ao documento, podem ser realçadas por meio de comparações embutidas e aceitas/descartadas por partes. Terminar uma sessão manterá as alterações.
	//  - preview: As alterações são apenas visualizadas e precisam ser aceitas por meio do botão Aplicar. Encerrar uma sessão descartará as alterações.
	"inlineChat.mode": "live",

	// Se habilitado, uma caixa de diálogo solicitará confirmação sempre que um arquivo ou workspace local estiver prestes a ser aberto por meio de um manipulador de protocolo.
	"security.promptForLocalFileProtocolHandling": true,

	// Se habilitado, uma caixa de diálogo solicitará confirmação sempre que um arquivo ou workspace remoto estiver prestes a ser aberto por meio de um manipulador de protocolo.
	"security.promptForRemoteFileProtocolHandling": true,

	// Controla quando a faixa do modo restrito é mostrada.
	//  - always: Mostrar a faixa sempre que um workspace não confiável estiver aberto.
	//  - untilDismissed: Mostra a faixa quando um espaço de trabalho não confiável for aberto até ser ignorado.
	//  - never: Não mostrar a faixa quando um workspace não confiável estiver aberto.
	"security.workspace.trust.banner": "untilDismissed",

	// Controla se a janela vazia é confiável por padrão dentro do VS Code. Quando usada com '#security.workspace.trust.untrustedFiles#', você pode habilitar a funcionalidade completa do VS Code sem solicitar em uma janela vazia.
	"security.workspace.trust.emptyWindow": true,

	// Controla se a Confiança do Workspace está habilitada no VS Code.
	"security.workspace.trust.enabled": true,

	// Controla quando a solicitação de inicialização para confiar em um espaço de trabalho é mostrada.
	//  - always: Peça confiança sempre que um espaço de trabalho não confiável for aberto.
	//  - once: Peça confiança na primeira vez que um espaço de trabalho não confiável for aberto.
	//  - never: Não peça confiança quando um espaço de trabalho não confiável for aberto.
	"security.workspace.trust.startupPrompt": "once",

	// Controla como lidar com a abertura de arquivos não confiáveis em um espaço de trabalho confiável. Esta configuração também se aplica a abrir arquivos em uma janela vazia, que é confiável via '#security.workspace.trust.emptyWindow#'.
	//  - prompt: Pergunte como lidar com arquivos não confiáveis para cada espaço de trabalho. Depois que arquivos não confiáveis forem introduzidos a um espaço de trabalho confiável, você não será solicitado novamente.
	//  - open: Sempre permita que arquivos não confiáveis sejam introduzidos a um espaço de trabalho confiável sem solicitar.
	//  - newWindow: Sempre abra arquivos não confidenciais em uma janela separada no modo restrito sem solicitar.
	"security.workspace.trust.untrustedFiles": "prompt",

	// Se deseja esmaecer editores e terminais sem foco, o que torna mais claro para onde a entrada digitada irá. Isso funciona com a maioria dos editores com as exceções notáveis daqueles que utilizam iframes como notebooks e editores de modo de exibição da Web de extensão.
	"accessibility.dimUnfocused.enabled": false,

	// A fração de opacidade (0,2 a 1,0) a ser usada para editores e terminais sem foco. Isso só terá efeito quando `accessibility.dimUnfocused.enabled` estiver habilitado.
	"accessibility.dimUnfocused.opacity": 0.75,

	// Controla se a Exibição Acessível está oculta.
	"accessibility.hideAccessibleView": false,

	// Controla a altura das guias do editor. Também se aplica à barra de controle do título quando `workbench.editor.showTabs` não está definido como `multiple`.
	"window.density.editorTabHeight": "default",

	// Controla o comportamento de clicar em um ícone da barra de atividades no workbench.
	//  - toggle: Ocultar a barra lateral se o item clicado já estiver visível.
	//  - focus: Focar na barra lateral se o item clicado já estiver visível.
	"workbench.activityBar.iconClickBehavior": "toggle",

	// Controla o local da Barra de Atividades. Pode ser mostrado para o `side` ou `top` da Barra Lateral Primária ou `hidden`.
	//  - default: Show the Activity Bar of the Primary Side Bar on the side.
	//  - top: Mostrar a Barra de Atividades na parte superior da Barra Lateral Primária.
	//  - bottom: Show the Activity Bar at the bottom of the Primary and Secondary Side Bar.
	//  - hidden: Ocultar a Barra de Atividades.
	"workbench.activityBar.location": "default",

	// Controla se é necessário retomar automaticamente as alterações de trabalho armazenadas na nuvem disponíveis para o espaço de trabalho atual.
	//  - onReload: Retome automaticamente as alterações de trabalho disponíveis da nuvem no recarregamento da janela.
	//  - off: Nunca tente retomar as alterações de trabalho da nuvem.
	"workbench.cloudChanges.autoResume": "onReload",

	// Controla se o usuário deve solicitar que o usuário armazene as alterações de trabalho na nuvem ao usar Continuar Trabalhando.
	//  - prompt: Solicite que o usuário entre para armazenar alterações de trabalho na nuvem com Continuar Trabalhando.
	//  - off: Não armazenar alterações de trabalho na nuvem com Continuar Trabalhando, a menos que o usuário já tenha ativado as Alterações na Nuvem.
	"workbench.cloudChanges.continueOn": "prompt",

	// Substitui cores do tema de cores selecionado no momento.
	"workbench.colorCustomizations": {},

	// Especifica o tema de cores usado no workbench.
	"workbench.colorTheme": "Default Dark Modern",

	// Controla onde a paleta de comandos deve fazer perguntas de chat.
	//  - chatView: Faça perguntas de chat no modo de exibição de Chat.
	//  - quickChat: Faça perguntas de chat no Chat Rápido.
	"workbench.commandPalette.experimental.askChatLocation": "chatView",

	// Controla se a paleta de comandos deve incluir comandos semelhantes. Você deve ter uma extensão instalada que forneça suporte à linguagem natural.
	"workbench.commandPalette.experimental.enableNaturalLanguageSearch": true,

	// Controla se a paleta de comandos deve ter uma lista de comandos comumente usados.
	"workbench.commandPalette.experimental.suggestCommands": false,

	// Controla o número de comandos usados recentemente para manter o histórico da paleta de comandos. Defina como 0 para desabilitar o histórico de comandos.
	"workbench.commandPalette.history": 50,

	// Controla se a última entrada digitada na paleta de comandos deverá ser restaurada ao ser aberta na próxima vez.
	"workbench.commandPalette.preserveInput": false,

	// Se um editor que corresponda a um dos tipos listados for aberto como o primeiro em um grupo de editores e mais de um grupo estiver aberto, o grupo será automaticamente bloqueado. Grupos bloqueados serão usados apenas para abrir os editores quando explicitamente escolhidos pelo gesto do usuário (por exemplo, arrastar e soltar), mas não por padrão. Consequentemente, o editor ativo em um grupo bloqueado tem menos probabilidade de ser substituído acidentalmente por um editor diferente.
	"workbench.editor.autoLockGroups": {
		"default": false,
		"workbench.editor.chatSession": false,
		"workbench.editorinputs.searchEditorInput": false,
		"workbench.editors.gettingStartedInput": false,
		"imagePreview.previewEditor": false,
		"vscode.audioPreview": false,
		"vscode.videoPreview": false,
		"jsProfileVisualizer.cpuprofile.table": false,
		"jsProfileVisualizer.heapprofile.table": false,
		"jsProfileVisualizer.heapsnapshot.table": false,
		"latex-workshop-pdf-hook": false,
		"decompiled.javaClass": false,
		"java.formatterSettingsEditor": false,
		"jupyter-notebook": false,
		"terminalEditor": true,
		"workbench.input.interactive": false,
		"mainThreadWebview-markdown.preview": false,
		"mainThreadWebview-simpleBrowser.view": true,
		"mainThreadWebview-browserPreview": true
	},

	// Controla se o layout centralizado deve ser redimensionado automaticamente para a largura máxima quando mais de um grupo é aberto. Uma vez que apenas um grupo estiver aberto, ele será redimensionado para a largura centralizada original.
	"workbench.editor.centeredLayoutAutoResize": true,

	// Controla se o layout centralizado tenta manter a largura constante quando a janela é redimensionada.
	"workbench.editor.centeredLayoutFixedWidth": false,

	// Controla o comportamento de grupos de editor vazios quando a última guia do grupo é fechada. Quando habilitados, os grupos vazios serão fechados automaticamente. Quando desabilitados, os grupos vazios continuarão fazendo parte da grade.
	"workbench.editor.closeEmptyGroups": true,

	// Controla se os editores que mostram um arquivo que foi aberto durante a sessão devem fechar automaticamente ao serem excluídos ou renomeados por algum outro processo. Desabilitar isso manterá o editor aberto em tal evento. Observe que a exclusão de dentro do aplicativo sempre fechará o editor e que os editores com alterações não salvas nunca fecharão para preservar seus dados.
	"workbench.editor.closeOnFileDelete": false,

	// Controls whether the custom workbench editor labels should be applied.
	"workbench.editor.customLabels.enabled": true,

	// Controls the rendering of the editor label. Each __Item__ is a pattern that matches a file path. Both relative and absolute file paths are supported. In case multiple patterns match, the longest matching path will be picked. Each __Value__ is the template for the rendered editor when the __Item__ matches. Variables are substituted based on the context:
	// - `${dirname}`: name of the folder in which the file is located (e.g. `root/folder/file.txt -> folder`).
	// - `${dirname(N)}`: name of the nth parent folder in which the file is located (e.g. `N=1: root/folder/file.txt -> root`).
	// - `${filename}`: name of the file without the file extension (e.g. `root/folder/file.txt -> file`).
	// - `${extname}`: the file extension (e.g. `root/folder/file.txt -> txt`).
	// 
	// Example: `"**/static/**/*.html": "${filename} - ${dirname} (${extname})"` will render a file `root/static/folder/file.html` as `file - folder (html)`.
	"workbench.editor.customLabels.patterns": {},

	// Controla se as decorações de arquivo do editor devem usar selos.
	"workbench.editor.decorations.badges": true,

	// Controla se as decorações de arquivo do editor devem usar cores.
	"workbench.editor.decorations.colors": true,

	// O editor padrão para arquivos detectados como binários. Se indefinido, o usuário será apresentado a um seletor.
	"workbench.editor.defaultBinaryEditor": "",

	// Controla como o grupo de editores é redimensionado ao clicar duas vezes em uma guia. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	//  - maximize: Todos os outros grupos de editores estão ocultos e o grupo de editores atual é maximizado para assumir toda a área do editor.
	//  - expand: O grupo de editores ocupa o máximo de espaço possível, tornando todos os outros grupos de editores o menor possível.
	//  - off: Nenhum grupo de editores é redimensionado ao clicar duas vezes em uma guia.
	"workbench.editor.doubleClickTabToToggleEditorGroupSizes": "expand",

	// Controla se os editores podem ser arrastados para fora da janela para abri-los em uma nova janela. Pressione e mantenha pressionada a tecla `Alt` e, ao mesmo tempo, arraste para alternar dinamicamente.
	"workbench.editor.dragToOpenWindow": true,

	// Controla onde as ações do editor são mostradas.
	//  - default: Mostrar ações do editor na barra de título da janela quando `workbench.editor.showTabs` estiver definido como `none`. Caso contrário, as ações do editor serão mostradas na barra de guias do editor.
	//  - titleBar: Mostrar ações do editor na barra de título da janela. Se `window.customTitleBarVisibility` estiver definido como `never`, as ações do editor serão ocultadas.
	//  - hidden: As ações do editor não são mostradas.
	"workbench.editor.editorActionsLocation": "default",

	// Controla se a dica de texto do editor vazio deve estar visível no editor.
	"workbench.editor.empty.hint": "text",

	// Controla se os editores abertos são exibidos como editores de visualização. Os editores de visualização não permanecem abertos, são reutilizados até serem explicitamente definidos para serem mantidos abertos (via clique duplo ou edição) e mostram nomes de arquivo em itálico.
	"workbench.editor.enablePreview": true,

	// Controla se os editores permanecem em visualização quando uma navegação de código é iniciada a partir deles. Os editores de visualização não permanecem abertos e são reutilizados até que sejam explicitamente definidos para serem mantidos abertos (via clique duplo ou edição). Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	"workbench.editor.enablePreviewFromCodeNavigation": false,

	// Controla se os editores abertos na Abertura Rápida são exibidos como editores de visualização. Os editores de visualização não permanecem abertos e são reutilizados até que sejam explicitamente definidos para serem mantidos abertos (via clique duplo ou edição). Quando habilitado, mantenha pressionada a tecla Ctrl antes da seleção para abrir um editor como uma não visualização. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	"workbench.editor.enablePreviewFromQuickOpen": false,

	// Controla se as guias são fechadas na ordem usada mais recentemente ou da esquerda para a direita.
	"workbench.editor.focusRecentEditorAfterClose": true,

	// Controla se uma borda superior é desenhada nas guias dos editores que têm alterações não salvas. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como multiple.
	"workbench.editor.highlightModifiedTabs": false,

	// Permite o uso do histórico do editor na detecção de idioma. Isso faz com que a detecção automática de idioma privilegie os idiomas que foram abertos recentemente e permite que a detecção de Idioma automática opere com entradas menores.
	"workbench.editor.historyBasedLanguageDetection": true,

	// Controla o formato do rótulo de um editor.
	//  - default: Mostrar o nome do arquivo. Quando as guias estão habilitadas e dois arquivos têm o mesmo nome em um grupo, as seções de diferenciação de cada caminho de arquivo são adicionadas. Quando as guias estiverem desabilitadas, o caminho relativo à pasta do workspace será mostrado se o editor estiver ativo.
	//  - short: Mostrar o nome do arquivo seguido por seu nome de diretório.
	//  - medium: Mostrar o nome do arquivo seguido pelo caminho relativo à pasta do workspace.
	//  - long: Mostrar o nome do arquivo seguido pelo caminho absoluto.
	"workbench.editor.labelFormat": "default",

	// Controla se a linguagem em um editor de texto é detectada automaticamente, a menos que tenha sido explicitamente definido pelo seletor de linguagem. Isso também pode ser definido por linguagem para que você possa especificar as linguagens das quais não deseja ser desativado. Isso é útil para linguagens como Markdown, que geralmente contêm outras linguagens que podem levar a detecção de linguagem a pensar que é a linguagem incorporada e não Markdown.
	"workbench.editor.languageDetection": true,

	// Quando habilitado, mostra uma correção rápida da barra de status quando o idioma do editor não corresponde ao idioma do conteúdo detectado.
	"workbench.editor.languageDetectionHints": {
		"untitledEditors": true,
		"notebookEditors": true
	},

	// Controla se o número de editores abertos deve ser limitado ou não. Quando habilitado, os editores menos usados recentemente fecharão para abrir espaço para os editores recém-abertos.
	"workbench.editor.limit.enabled": false,

	// Controla se o número máximo de editores abertos deve excluir os editores sujos para contagem até o limite configurado.
	"workbench.editor.limit.excludeDirty": false,

	// Controla se o limite de editores abertos máximos deve ser aplicado por grupo de editor ou por todos os grupos de editor.
	"workbench.editor.limit.perEditorGroup": false,

	// Controla o número máximo de editores abertos. Use a configuração `workbench.editor.limit.perEditorGroup` para controlar esse limite por grupo de editores ou em todos os grupos.
	"workbench.editor.limit.value": 10,

	// Habilita o uso dos botões quatro e cinco do mouse para os comandos 'Voltar' e 'Avançar'.
	"workbench.editor.mouseBackForwardToNavigate": true,

	// Controla o escopo do histórico de navegação em editores para comandos como 'Voltar' e 'Avançar'.
	//  - default: Navegar por todos os editores abertos e grupos de editores.
	//  - editorGroup: Navegar somente em editores do grupo de editores ativo.
	//  - editor: Navegar somente no editor ativo.
	"workbench.editor.navigationScope": "default",

	// Controla onde os editores são abertos. Selecione `left` ou `right` para abrir editores à esquerda ou à direita do editor ativo no momento. Selecione `first` ou `last` para abrir editores independentemente do que está ativo no momento.
	"workbench.editor.openPositioning": "right",

	// Controla a direção padrão dos editores que são abertos lado a lado (por exemplo, no Explorador). Por padrão, os editores serão abertos no lado direito do editor ativo no momento. Se esta opção for alterada para `down`, os editores serão abertos abaixo daquele que está ativo no momento.
	"workbench.editor.openSideBySideDirection": "right",

	// Controla o dimensionamento das guias fixadas do editor. As guias fixadas são classificadas para o início de todas as guias abertas e normalmente não fecham até que sejam desafixadas. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	//  - normal: Uma guia fixa herda a aparência das guias não fixas.
	//  - compact: Uma guia fixa será mostrada em um formato compacto com apenas o ícone ou a primeira letra do nome do editor.
	//  - shrink: Uma guia fixa é reduzida a um tamanho compacto fixo mostrando partes do nome do editor.
	"workbench.editor.pinnedTabSizing": "normal",

	// Quando habilitado, exibe guias fixadas em uma linha separada acima de todas as outras guias. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	"workbench.editor.pinnedTabsOnSeparateRow": false,

	// Quando habilitado, um modelo de detecção de idioma que leva em conta o histórico do editor terá maior precedência.
	"workbench.editor.preferHistoryBasedLanguageDetection": false,

	// Controla se editores fixados devem ser fechado quando o teclado ou o clique do meio do mouse é usado para fechar.
	//  - keyboardAndMouse: Sempre impedir que o editor fixado seja fechado ao usar o teclado ou o clique com o botão do meio do mouse.
	//  - keyboard: Impedir o fechamento do editor fixado ao usar o teclado.
	//  - mouse: Impedir que o editor fixado seja fechado ao usar o clique com o botão do meio do mouse.
	//  - never: Nunca impedir o fechamento de um editor fixado.
	"workbench.editor.preventPinnedEditorClose": "keyboardAndMouse",

	// Restaura o último estado de exibição do editor (como posição de rolagem) ao reabrir editores depois que eles tiverem sido fechados. O estado de exibição do editor é armazenado por grupo de editores e descartado quando um grupo é fechado. Use a configuração `workbench.editor.sharedViewState` para usar o último estado de exibição conhecido em todos os grupos de editores, caso nenhum estado de exibição anterior tenha sido encontrado para um grupo de editores.
	"workbench.editor.restoreViewState": true,

	// Controla se um editor é revelado em qualquer um dos grupos visíveis, se aberto. Se desabilitado, um editor preferirá abrir no grupo de editores ativo no momento. Se habilitado, um editor já aberto será revelado em vez de aberto novamente no grupo de editores ativo no momento. Observe que há alguns casos em que essa configuração é ignorada, como ao forçar um editor a abrir em um grupo específico ou ao lado do grupo ativo no momento.
	"workbench.editor.revealIfOpen": false,

	// Controla se a rolagem sobre as guias vai abri-las ou não. Por padrão, as guias só serão reveladas durante a rolagem, mas não serão abertas. Você pode pressionar e manter pressionada a tecla Shift durante a rolagem para alterar esse comportamento durante esse período. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	"workbench.editor.scrollToSwitchTabs": false,

	// Preserva o estado da exibição do editor mais recente (como posição de rolagem) em todos os grupos de editores e restaura isso se nenhum estado de visualização do editor específico for encontrado para o grupo de editores.
	"workbench.editor.sharedViewState": false,

	// Controla se editores abertos devem ser mostrados com um ícone. Isso exige que um tema de ícone de arquivo seja habilitado também.
	"workbench.editor.showIcons": true,

	// Controla se os editores abertos devem ser mostrados como guias individuais, uma única guia grande ou se a área de título não deve ser mostrada.
	//  - multiple: Cada editor é exibido como uma guia na área de título do editor.
	//  - single: O editor ativo é exibido como uma única guia grande na área de título do editor.
	//  - none: A área de título do editor não é exibida.
	"workbench.editor.showTabs": "multiple",

	// Controla o layout para quando um editor é dividido em um grupo de editores para ser vertical ou horizontal.
	//  - vertical: Os editores são posicionados de cima para baixo.
	//  - horizontal: Os editores são posicionados da esquerda para a direita.
	"workbench.editor.splitInGroupLayout": "horizontal",

	// Controla se os grupos do editor podem ser divididos das operações de arrastar e soltar soltando um editor ou um arquivo nas bordas da área do editor.
	"workbench.editor.splitOnDragAndDrop": true,

	// Controla o dimensionamento dos grupos do editor ao dividi-los.
	//  - auto: Divide o grupo de editores ativo em partes iguais, a menos que todos os grupos de editores já estejam em partes iguais. Nesse caso, divide todos os grupos de editores em partes iguais.
	//  - distribute: Divide todos os grupos do editor em partes iguais.
	//  - split: Divide o grupo do editor ativo em partes iguais.
	"workbench.editor.splitSizing": "auto",

	// Controla a visibilidade do botão de ação de fechamento da guia.
	"workbench.editor.tabActionCloseVisibility": true,

	// Controla a posição dos botões de ação das guias do editor (fechar, desafixar). Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	"workbench.editor.tabActionLocation": "right",

	// Controla a visibilidade do botão de ação de desafixação da guia.
	"workbench.editor.tabActionUnpinVisibility": true,

	// Controla o tamanho das guias do editor. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como `multiple`.
	//  - fit: Sempre mantenha as guias grandes o suficiente para mostrar o rótulo de editor completo.
	//  - shrink: Permitir que as guias sejam menores quando o espaço disponível não for suficiente para mostrar todas as guias de uma vez.
	//  - fixed: Torne todas as guias do mesmo tamanho, permitindo que elas sejam menores quando o espaço disponível não for suficiente para mostrar todas as guias ao mesmo tempo.
	"workbench.editor.tabSizing": "fit",

	// Controla a largura máxima das guias quando o tamanho `workbench.editor.tabSizing` é definido como `fixed`.
	"workbench.editor.tabSizingFixedMaxWidth": 160,

	// Controla a largura mínima das guias quando o tamanho `workbench.editor.tabSizing` é definido como `fixed`.
	"workbench.editor.tabSizingFixedMinWidth": 50,

	// Controla a altura das barras de rolagem usadas para guias e trilhas na área do título do editor.
	//  - default: O tamanho padrão.
	//  - large: Aumenta o tamanho para facilitar a captura com o mouse.
	"workbench.editor.titleScrollbarSizing": "default",

	// Controla o formato do rótulo de um editor sem título.
	//  - content: O nome do arquivo sem título é derivado do conteúdo de sua primeira linha, a menos que tenha um caminho de arquivo associado. Ele fará fallback para o nome caso a linha esteja vazia ou não contenha caracteres de palavras.
	//  - name: O nome do arquivo sem título não é derivado do conteúdo do arquivo.
	"workbench.editor.untitled.labelFormat": "content",

	// Controla se as guias devem ser agrupadas em várias linhas ao exceder o espaço disponível ou se uma barra de rolagem deve aparecer em seu lugar. Esse valor é ignorado quando `workbench.editor.showTabs` não está definido como ''`multiple`''.
	"workbench.editor.wrapTabs": false,

	// Configure [padrões glob](https://aka.ms/vscode-glob-patterns) para editores (por exemplo '"*.hex": "hexEditor.hexedit"'). Eles têm precedência sobre o comportamento padrão.
	"workbench.editorAssociations": {},

	// Controla o tamanho mínimo de um arquivo em MB antes de solicitar confirmação ao abrir no editor. Observe que essa configuração pode não se aplicar a todos os tipos de editor e ambientes.
	"workbench.editorLargeFileConfirmation": 1024,

	// Busca experimentos para execução usando um serviço online da Microsoft.
	"workbench.enableExperiments": true,

	// Controla se as alterações de trabalho disponíveis na nuvem devem ser armazenadas automaticamente no espaço de trabalho atual. Essa configuração não tem efeito na Web.
	//  - onShutdown: Armazenar automaticamente as alterações de trabalho atuais na nuvem ao fechar a janela.
	//  - off: Nunca tente armazenar automaticamente as alterações de trabalho na nuvem.
	"workbench.experimental.cloudChanges.autoStore": "off",

	// Controla se as alterações na nuvem que correspondem parcialmente à sessão atual devem ser exibidas.
	"workbench.experimental.cloudChanges.partialMatches.enabled": false,

	// Controla se a ação Compartilhar deve ser renderizada após o centro de comandos quando `window.commandCenter` for `true`.
	"workbench.experimental.share.enabled": false,

	// Configurar o abridor a ser usado para URIs externos (por exemplo, http, https).
	"workbench.externalUriOpeners": {},

	// Controla o método de suavização de fonte no workbench.
	//  - default: Suavização da fonte de subpixel. Na maioria das exibições que não são de retina, isso fornece o texto mais nítido.
	//  - antialiased: Suavizar a fonte no nível do pixel, em oposição ao subpixel. Pode tornar a fonte aparentemente mais clara de modo geral.
	//  - none: Desabilita a suavização de fonte. O texto será exibido com bordas nítidas irregulares.
	//  - auto: Aplica `default` ou `antialiased` automaticamente com base no DPI de exibições.
	"workbench.fontAliasing": "default",

	// Controla o atraso em milissegundos após o qual a focalização é exibida para os itens do Workbench (por exemplo, alguns itens do modo de exibição de árvore fornecidos na extensão). Os itens já visíveis podem exigir uma atualização para refletirem essa alteração na configuração.
	"workbench.hover.delay": 1500,

	// Especifica o tema do ícone de arquivo usado no workbench ou 'null' para não mostrar ícones de arquivo.
	//  - null: Nenhum ícone de arquivo
	//  - vs-minimal
	//  - vs-seti
	"workbench.iconTheme": "vs-seti",

	// Controla se o controle de layout é mostrado na barra de título personalizada. Essa configuração só tem efeito quando `window.customTitleBarVisibility` não está definido como `never`.
	"workbench.layoutControl.enabled": true,

	// Controla se o controle de layout na barra de título personalizada é exibido como um único botão de menu ou com vários comandos de interface do usuário.
	//  - menu: Mostra um único botão com uma lista suspensa de opções de layout.
	//  - toggles: Mostra vários botões para alternar a visibilidade dos painéis e da barra lateral.
	//  - both: Mostra os botões suspenso e de alternância.
	"workbench.layoutControl.type": "both",

	// Controla o tipo de correspondência usado ao pesquisar listas e árvores no workbench.
	//  - fuzzy: Use correspondência difusa ao pesquisar.
	//  - contiguous: Use correspondência contígua ao pesquisar.
	"workbench.list.defaultFindMatchType": "fuzzy",

	// Controla o modo de localização padrão para listas e árvores no workbench.
	//  - highlight: Realce os elementos ao pesquisar. Mais para cima e para baixo, a navegação atravessará apenas os elementos realçados.
	//  - filter: Filtrar elementos ao pesquisar.
	"workbench.list.defaultFindMode": "highlight",

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"workbench.list.fastScrollSensitivity": 5,

	// Controla se as listas e árvores dão suporte à rolagem horizontal no workbench. Aviso: a ativação desta configuração tem uma implicação de desempenho.
	"workbench.list.horizontalScrolling": false,

	// Em vez disso, use 'workbench.list.defaultFindMode' e 'workbench.list.typeNavigationMode'.
	// Controla o estilo de navegação pelo teclado para listas e árvores no workbench. Pode ser simples, realçar e filtrar.
	//  - simple: A navegação pelo teclado simples tem como foco elementos que correspondem à entrada do teclado. A correspondência é feita somente em prefixos.
	//  - highlight: Realçar a navegação pelo teclado realça elementos que correspondem à entrada do teclado. A navegação mais acima e abaixo passará apenas pelos elementos realçados.
	//  - filter: Filtrar a navegação pelo teclado filtrará e ocultará todos os elementos que não correspondem à entrada do teclado.
	"workbench.list.keyboardNavigation": "highlight",

	// Um multiplicador a ser usado no `deltaX` e no `deltaY` dos eventos de rolagem do mouse.
	"workbench.list.mouseWheelScrollSensitivity": 1,

	// O modificador a ser usado para adicionar um item em árvores e listas a uma seleção múltipla com o mouse (por exemplo, no explorador, abra os editores e a exibição de scm). Os gestos de mouse 'Abrir ao Lado', se compatíveis, se adaptarão de modo que não entrarão em conflito com o modificador de seleção múltipla.
	//  - ctrlCmd: Mapeia para `Control` no Windows e no Linux e para `Command` no macOS.
	//  - alt: Mapeia para `Alt` no Windows e no Linux e para `Option` no macOS.
	"workbench.list.multiSelectModifier": "ctrlCmd",

	// Controla como abrir itens em árvores e listas usando o mouse (caso haja suporte). Observe que algumas árvores e listas podem optar por ignorar essa configuração quando ela não se aplica.
	"workbench.list.openMode": "singleClick",

	// Controla se os cliques na barra de rolagem rolam página por página.
	"workbench.list.scrollByPage": false,

	// Controla se listas e árvores têm rolagem suave.
	"workbench.list.smoothScrolling": false,

	// Controla como a navegação de tipos funciona em listas e árvores no workbench. Quando definido como `trigger`, a navegação de tipo começa assim que o comando `list.triggerTypeNavigation` é executado.
	"workbench.list.typeNavigationMode": "automatic",

	// Controla se o histórico de arquivos locais está ativado. Quando habilitado, o conteúdo do arquivo de um editor salvo será armazenado em um local de backup para poder restaurar ou revisar o conteúdo posteriormente. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.enabled": true,

	// Configure caminhos ou [padrões glob](https://aka.ms/vscode-glob-patterns) para excluir arquivos do histórico de arquivos local. Os padrões glob são sempre avaliados em relação ao caminho da pasta do workspace, a menos que sejam caminhos absolutos. A alteração dessa configuração não tem efeito nas entradas de histórico de arquivos locais existentes.
	"workbench.localHistory.exclude": {},

	// Controla o número máximo de entradas do histórico de arquivos locais por arquivo. Quando o número de entradas do histórico de arquivos locais exceder esse número para um arquivo, as entradas mais antigas serão descartadas.
	"workbench.localHistory.maxFileEntries": 50,

	// Controla o tamanho máximo de um arquivo (em KB) a ser considerado para o histórico do arquivo local. Arquivos maiores não serão adicionados ao histórico de arquivos locais. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.maxFileSize": 256,

	// Configure um intervalo em segundos durante o qual a última entrada no histórico do arquivo local é substituída pela entrada que está sendo adicionada. Isso ajuda a reduzir o número geral de entradas adicionadas, por exemplo, quando o salvamento automático está ativado. Essa configuração é aplicada apenas a entradas que tenham a mesma origem de origem. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.mergeWindow": 10,

	// Controla o local padrão do painel (Terminal, Console de Depuração, Saída, Problemas) em um novo workspace. Ele poderá ser mostrado na parte inferior, direita ou esquerda da área do editor.
	"workbench.panel.defaultLocation": "bottom",

	// Controla se o painel é aberto maximizado. Ele pode ser sempre aberto maximizado, nunca aberto maximizado ou aberto no último estado em que estava antes de ser fechado.
	//  - always: Sempre maximize o painel ao abri-lo.
	//  - never: Nunca maximizar o painel ao abri-lo. O painel será aberto não maximizado.
	//  - preserve: Abrir o painel no estado em que estava antes de ser fechado.
	"workbench.panel.opensMaximized": "preserve",

	// Especifica o tema de cor preferencial para a aparência escura do sistema operacional quando `window.autoDetectColorScheme` está habilitado.
	"workbench.preferredDarkColorTheme": "Default Dark Modern",

	// Especifica o tema de cor preferencial usado no modo escuro de alto contraste quando `window.autoDetectHighContrast` está habilitado.
	"workbench.preferredHighContrastColorTheme": "Default High Contrast",

	// Especifica o tema de cor preferencial usado no modo de luz de alto contraste quando `window.autoDetectHighContrast` está habilitado.
	"workbench.preferredHighContrastLightColorTheme": "Default High Contrast Light",

	// Especifica o tema de cor preferido para a aparência leve do SO quando `window.autoDetectColorScheme` está habilitado.
	"workbench.preferredLightColorTheme": "Default Light Modern",

	// Especifica o tema do ícone do produto usado.
	//  - Default: Padrão
	"workbench.productIconTheme": "Default",

	// Controla se a Abertura Rápida deve ser fechada automaticamente quando perde o foco.
	"workbench.quickOpen.closeOnFocusLost": true,

	// Controla se a última entrada digitada para a Abertura Rápida deverá ser restaurada ao ser aberta na próxima vez.
	"workbench.quickOpen.preserveInput": false,

	// Controla se o workbench deve ser renderizado com menos animações.
	//  - on: Sempre renderizar com movimentos reduzidos.
	//  - off: Não renderizar com movimentos reduzidos
	//  - auto: Renderize com movimentos reduzidos com base na configuração do sistema operacional.
	"workbench.reduceMotion": "auto",

	// When enabled, remote extensions recommendations will be shown in the Remote Indicator menu.
	"workbench.remoteIndicator.showExtensionRecommendations": true,

	// Controla o atraso de resposta da focalização em milissegundos da área de arrastar entre as exibições e os editores.
	"workbench.sash.hoverDelay": 300,

	// Controla o tamanho da área de comentários, em pixels, da área de arrastar entre modos de exibição/editores. Defina-o como um valor maior se você achar difícil redimensionar modos de exibição usando o mouse.
	"workbench.sash.size": 4,

	// Defina as configurações a serem aplicadas a todos os perfis.
	"workbench.settings.applyToAllProfiles": [],

	// Determina qual editor de configurações usar por padrão.
	//  - ui: Use o editor de interface do usuário de configurações.
	//  - json: Use o editor de arquivos JSON.
	"workbench.settings.editor": "ui",

	// Controla se o modo de pesquisa de linguagem natural deve ser habilitado para configurações. A pesquisa de linguagem natural é fornecida por um serviço online da Microsoft.
	"workbench.settings.enableNaturalLanguageSearch": true,

	// Controla se as configurações de associação de teclas de abertura também abrem um editor mostrando todas as associações de teclas padrão.
	"workbench.settings.openDefaultKeybindings": false,

	// Controla se as configurações de abertura também abrem um editor mostrando todas as configurações padrão.
	"workbench.settings.openDefaultSettings": false,

	// Controla o comportamento do Sumário do Editor de configurações durante a pesquisa. Se essa configuração estiver sendo alterada no Editor de configurações, a configuração entrará em vigor após a modificação da consulta de pesquisa.
	//  - hide: Ocultar o Sumário ao pesquisar.
	//  - filter: Filtre o Sumário apenas para as categorias com configurações correspondentes. Ao clicar em uma categoria, os resultados serão filtrados para essa categoria.
	"workbench.settings.settingsSearchTocBehavior": "filter",

	// Controla se o editor de JSON dividido deve ser usado ao editar configurações como JSON.
	"workbench.settings.useSplitJSON": false,

	// Controla os locais da barra lateral primária e da barra de atividades. Elas podem ser mostradas à esquerda ou à direita do workbench. A barra lateral secundária será mostrada no lado oposto do workbench.
	"workbench.sideBar.location": "left",

	// Controla qual editor é mostrado na inicialização, se nenhum for restaurado da sessão anterior.
	//  - none: Iniciar sem um editor.
	//  - welcomePage: Abra a página de boas-vindas, com conteúdo para ajudar na introdução ao VS Code e extensões.
	//  - readme: Abra o README ao abrir uma pasta que contém um, caso contrário, volte para 'welcomePage'. Nota: isso só é observado como uma configuração global, será ignorado se definido em uma configuração de área de trabalho ou pasta.
	//  - newUntitledFile: Abra um novo arquivo de texto sem título (aplica-se apenas ao abrir uma janela vazia).
	//  - welcomePageInEmptyWorkbench: Abrir a página inicial ao abrir um workbench vazio.
	//  - terminal: Abra um novo terminal na área do editor.
	"workbench.startupEditor": "welcomePage",

	// Controla a visibilidade da barra de status na parte inferior do workbench.
	"workbench.statusBar.visible": true,

	// Quando habilitado, mostrará as dicas de marca-d'água quando não houver editor aberto.
	"workbench.tips.enabled": true,

	// Controla se a rolagem adesiva está habilitada em árvores.
	"workbench.tree.enableStickyScroll": true,

	// Controla como as pastas de árvore são expandidas ao clicar nos nomes das pastas. Observe que algumas árvores e listas poderão optar por ignorar essa configuração se ela não for aplicável.
	"workbench.tree.expandMode": "singleClick",

	// Controle o recuo da árvore em pixels.
	"workbench.tree.indent": 8,

	// Controla se a árvore deve renderizar guias de recuo.
	"workbench.tree.renderIndentGuides": "onHover",

	// Controla o número de elementos adesivos exibidos na árvore quando '#workbench.tree.enableStickyScroll#' está ativado.
	"workbench.tree.stickyScrollMaxItemCount": 7,

	// Quando habilitado, os prompts de domínio confiável serão exibidos ao abrir links em espaços de trabalho confiáveis.
	"workbench.trustedDomains.promptInTrustedWorkspace": false,

	// Controla a visibilidade das ações do cabeçalho do modo de exibição. Exibir ações de cabeçalho poderá estar sempre visível ou visível apenas quando esse modo de exibição estiver com foco ou focalizado.
	"workbench.view.alwaysShowHeaderActions": false,

	// Preterido, use o 'workbench.reduceMotion' global.
	// Quando habilitado, reduz o movimento na página de boas-vindas.
	"workbench.welcomePage.preferReducedMotion": false,

	// Quando habilitada, um passo a passo da extensão será aberto após a instalação da extensão.
	"workbench.welcomePage.walkthroughs.openOnInstall": true,

	// Se definido, alterna automaticamente para o tema de cores preferido com base na aparência do sistema operacional. Se a aparência do SO for escura, o tema especificado em `workbench.preferredDarkColorTheme#` é usado, para claro `#workbench.preferredLightColorTheme`.
	"window.autoDetectColorScheme": false,

	// Se habilitado, mudará automaticamente para tema de alto contraste se o sistema operacional estiver usando um tema de alto contraste. O tema de alto contraste a ser usado é especificado por `workbench.preferredHighContrastColorTheme#` e `#workbench.preferredHighContrastLightColorTheme`.
	"window.autoDetectHighContrast": true,

	// Se habilitado, clicar em uma janela inativa ativará a janela e disparará o elemento sob o mouse, se for clicável. Se desabilitado, clicar em qualquer lugar em uma janela inativa fará com que ela seja apenas ativada e um segundo clique será necessário no elemento.
	"window.clickThroughInactive": true,

	// Controla se fechar o último editor também deve fechar a janela. Essa configuração se aplica somente às janelas que não mostram pastas.
	"window.closeWhenEmpty": false,

	// Mostra o inicializador de comandos junto com o título da janela. Essa configuração só tem efeito quando `window.customTitleBarVisibility` não está definido como `never`.
	"window.commandCenter": true,

	// Controla se uma caixa de diálogo de confirmação deve ser exibida antes de fechar uma janela ou sair do aplicativo.
	//  - always: Sempre solicitar confirmação.
	//  - keyboardOnly: Peça confirmação apenas se uma associação de teclas for usada.
	//  - never: Nunca peça confirmação explicitamente.
	"window.confirmBeforeClose": "never",

	// Controla se uma caixa de diálogo de confirmação mostra uma solicitação para salvar ou descartar um espaço de trabalho aberto sem título na janela ao alternar para outro espaço de trabalho. Desabilitar a caixa de diálogo de confirmação sempre descartará o espaço de trabalho sem título.
	"window.confirmSaveUntitledWorkspace": true,

	// Ajuste quando a barra de título personalizada deve ser mostrada. A barra de título personalizada pode ser ocultada no modo de tela inteira com `windowed`. A barra de título personalizada só pode ser ocultada no modo de tela cheia com `never` quando `window.titleBarStyle` está definido como `native`.
	//  - auto: Altera automaticamente a visibilidade da barra de título personalizada.
	//  - windowed: Oculte a barra de título personalizada em tela inteira. Quando não estiver em tela cheia, altere automaticamente a visibilidade da barra de título personalizada.
	//  - never: Ocultar a barra de título personalizada quando `window.titleBarStyle` estiver definido como `native`.
	"window.customTitleBarVisibility": "auto",

	// Ajustar a aparência das janelas de diálogo.
	"window.dialogStyle": "native",

	// Se habilitada, essa configuração fechará a janela quando o ícone do aplicativo na barra de título for clicado duas vezes. A janela não poderá ser arrastada pelo ícone. Esta configuração é efetiva somente se `window.titleBarStyle` estiver definido como `custom`.
	"window.doubleClickIconToClose": false,

	// Controla se a tela inteira nativa deve ser usada no macOS. Desabilite esta opção para impedir que o macOS crie um espaço ao passar para a tela inteira.
	"window.nativeFullScreen": true,

	// Habilita as guias da janela do macOS Sierra. Observe que as alterações exigem uma reinicialização completa para serem aplicadas e as guias nativas desabilitarão um estilo de barra de título personalizada, se configuradas.
	"window.nativeTabs": false,

	// Controla as dimensões de abertura de uma nova janela quando pelo menos uma janela já está aberta. Observe que esta configuração não tem impacto na primeira janela aberta. A primeira janela sempre restaurará o tamanho e a localização conforme você deixou antes de fechar.
	//  - default: Abrir novas janelas no centro da tela.
	//  - inherit: Abrir novas janelas com a mesma dimensão que a última ativa.
	//  - offset: Abrir novas janelas com a mesma dimensão que a última ativa com uma posição de deslocamento.
	//  - maximized: Abrir novas janelas maximizadas.
	//  - fullscreen: Abrir novas janelas no modo de tela inteira.
	"window.newWindowDimensions": "default",

	// Controla se os arquivos devem ser abertos em uma nova janela ao usar uma caixa de diálogo de linha de comando ou de arquivo.
	// Observe que ainda pode haver casos em que essa configuração é ignorada (por exemplo, ao usar a opção de linha de comando '--new-window' ou '--reuse-window').
	//  - on: Os arquivos serão abertos em uma nova janela.
	//  - off: Os arquivos serão abertos na janela com a pasta Arquivos aberta ou a última janela ativa.
	//  - default: Os arquivos serão abertos na janela com a pasta Arquivos aberta ou a última janela ativa, a menos que sejam abertos por meio do Dock ou do Finder.
	"window.openFilesInNewWindow": "off",

	// Controla se as pastas devem abrir em uma nova janela ou substituir a última janela ativa.
	// Observe que ainda podem haver casos em que essa configuração é ignorada (por exemplo, quando usar a opção de linha de comando '--new-windows' ou '--reuse-window').
	//  - on: As pastas serão abertas em uma nova janela.
	//  - off: As pastas substituirão a última janela ativa.
	//  - default: As pastas serão abertas em uma nova janela, a menos que uma pasta seja selecionada de dentro do aplicativo (por exemplo, pelo menu Arquivo).
	"window.openFoldersInNewWindow": "default",

	// Controla se uma nova janela vazia deve ser aberta ao iniciar uma segunda instância sem argumentos ou se a última instância em execução deve receber o foco.
	// Observe que pode haver ainda casos em que essa configuração é ignorada (por exemplo, quando usamos '--new-window' ou '--reuse-window ' como opção de linha de comando).
	//  - on: Abrir uma nova janela vazia.
	//  - off: Focar na última instância de execução ativa.
	"window.openWithoutArgumentsInNewWindow": "off",

	// Controla se uma janela deve ser restaurada para o modo de tela inteira se ela foi encerrada no modo de tela inteira.
	"window.restoreFullscreen": false,

	// Controla como as janelas serão reabertas depois de serem iniciadas pela primeira vez. Esta configuração não tem efeito quando o aplicativo já está em execução.
	//  - preserve: Sempre reabrir todas as janelas. Se uma pasta ou um workspace for aberto (por exemplo, por meio da linha de comando), ele será aberto como uma nova janela, a menos que já tenha sido aberto. Os arquivos serão abertos em uma das janelas restauradas.
	//  - all: Reabrir todas as janelas a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - folders: Reabrir todas as janelas que tinham pastas ou workspaces abertos, a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - one: Reabrir a última janela ativa, a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - none: Nunca reabrir uma janela. A menos que uma pasta ou um workspace esteja aberto (por exemplo, por meio da linha de comando), uma janela vazia será exibida.
	"window.restoreWindows": "all",

	// Controla o título da janela com base no contexto atual, como o workspace aberto ou o editor ativo. As variáveis são substituídas com base no contexto:
	// - `${activeEditorShort}`: o nome do arquivo (por exemplo, myFile.txt).
	// - `${activeEditorMedium}`: o caminho do arquivo relativo à pasta do workspace (por exemplo, myFolder/myFileFolder/myFile.txt).
	// - `${activeEditorLong}`: o caminho completo do arquivo (por exemplo, /Users/Development/myFolder/myFileFolder/myFile.txt).
	// - `${activeFolderShort}`: o nome da pasta que contém o arquivo (por exemplo, myFileFolder).
	// - `${activeFolderMedium}`: o caminho da pasta que contém o arquivo, em relação à pasta do workspace (por exemplo, myFolder/myFileFolder).
	// - `${activeFolderLong}`: o caminho completo da pasta que contém o arquivo (por exemplo, /Users/Development/myFolder/myFileFolder).
	// - `${folderName}`: o nome da pasta do workspace que contém o arquivo (por exemplo, myFolder).
	// - `${folderPath}`: o caminho do arquivo da pasta do workspace que contém o arquivo (por exemplo, /Users/Development/myFolder).
	// - `${rootName}`: nome do espaço de trabalho com nome remoto opcional e indicador de espaço de trabalho, se aplicável (por exemplo myFolder, myRemoteFolder [SSH] ou myWorkspace (Workspace)).
	// - '${rootNameShort}': nome abreviado do workspace sem sufixos (por exemplo, myFolder, myRemoteFolder ou myWorkspace).
	// - `${rootPath}`: caminho do arquivo do workspace ou da pasta aberto (por exemplo, /Users/Development/myWorkspace).
	// - "${profileName}": nome do perfil no qual o espaço de trabalho está aberto (por exemplo, Ciência de Dados (Perfil)). Ignorado se o perfil padrão for usado.
	// - `${appName}`: por exemplo, VS Code.
	// - `${remoteName}`: por exemplo, SSH
	// - `${dirty}`: um indicador para quando o editor ativo tem alterações não salvas.
	// - `${focusedView}`: o nome da exibição que está destacada no momento.
	// - "${activeRepositoryName}": o nome do repositório ativo (por exemplo, vscode).
	// - "${activeRepositoryBranchName}": o nome do branch ativo no repositório ativo (por exemplo, principal).
	// - `${separator}`: um separador condicional ("-") que só é mostrado quando circundado por variáveis com valores ou texto estático.
	"window.title": "${activeEditorShort}${separator}${rootName}${separator}${profileName}",

	// Ajuste a aparência da barra de título da janela para ser nativa do Sistema Operacional ou personalizada. No Linux e no Windows, essa configuração também afeta a aparência do aplicativo e do menu de contexto. As alterações exigem uma reinicialização completa para serem aplicadas.
	"window.titleBarStyle": "custom",

	// Separador usado por `window.title`.
	"window.titleSeparator": " — ",

	// Ajuste o nível de zoom padrão de todas as janelas. Cada incremento acima de `0` (por exemplo, `1`) ou abaixo (por exemplo, `-1`) representa o zoom de `20%` maior ou menor. Você também pode inserir decimais para ajustar o nível de zoom com uma granularidade mais fina. Confira `window.zoomPerWindow` para configurar se os comandos ''Ampliar'' e ''Reduzir'' aplicam o nível de zoom a todas as janelas ou apenas à janela ativa.
	"window.zoomLevel": 0,

	// Controla se os comandos “Zoom In” e “Zoom Out” aplicam o nível de zoom a todas as janelas ou apenas à janela ativa. Veja `window.zoomLevel` para configurar um nível de zoom padrão para todas as janelas.
	"window.zoomPerWindow": true,

	// Configure [padrões glob](https://aka.ms/vscode-glob-patterns) de associações de arquivo para linguagens (por exemplo, '"*.extension": "html"'). Os padrões corresponderão ao caminho absoluto de um arquivo se contiverem um separador de caminho e corresponderão ao nome do arquivo caso contrário. Eles têm precedência sobre as associações padrão dos idiomas instalados.
	"files.associations": {},

	// Quando ativado, o editor tentará adivinhar a codificação do conjunto de caracteres ao abrir os arquivos. Essa configuração também pode ser configurada por idioma. Observe que essa configuração não é respeitada pela pesquisa de texto. Apenas `files.encoding` é respeitado.
	"files.autoGuessEncoding": false,

	// Controles [salvamento automático](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) dos editores que têm alterações não salvas.
	//  - off: Um editor com alterações nunca é salvo automaticamente.
	//  - afterDelay: Um editor com alterações é salvo automaticamente após a configuração do `files.autoSaveDelay`.
	//  - onFocusChange: Um editor com alterações é salvo automaticamente quando o editor perde o foco.
	//  - onWindowChange: Um editor com alterações é salvo automaticamente quando a janela perde o foco.
	"files.autoSave": "off",

	// Controla o atraso em milissegundos após o qual um editor com alterações não salvas é salvo automaticamente. Só se aplica quando `files.autoSave` está definido como` afterDelay `.
	"files.autoSaveDelay": 1000,

	// Quando habilitado, limitará o [salvamento automático](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) dos editores a arquivos que não tenham erros relatados no momento em que o salvamento automático for disparado. Aplica-se apenas quando `files.autoSave` está habilitado.
	"files.autoSaveWhenNoErrors": false,

	// Quando habilitado, limitará o [salvamento automático](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) dos editores aos arquivos que estão dentro do workspace aberto. Aplica-se apenas quando `files.autoSave` está habilitado.
	"files.autoSaveWorkspaceFilesOnly": false,

	// O identificador de idioma padrão foi atribuído aos novos arquivos. Se configurado para `${activeEditorLanguage}`, usará a ID de idioma do editor de texto atualmente ativo, se houver.
	"files.defaultLanguage": "",

	// O Caminho padrão para caixas de diálogo de arquivo, substituindo o caminho inicial do usuário. Usado apenas na ausência de um caminho específico do contexto, como arquivo ou pasta aberto mais recentemente.
	"files.dialog.defaultPath": "",

	// Move arquivos/pastas para a lixeira do sistema operacional (lixeira no Windows) ao excluir. Desabilitar isso excluirá arquivos/pastas permanentemente.
	"files.enableTrash": true,

	// A codificação de conjunto de caracteres padrão a ser usada ao ler e gravar arquivos. Essa configuração também pode ser definida por linguagem.
	//  - utf8: UTF-8
	//  - utf8bom: UTF-8 with BOM
	//  - utf16le: UTF-16 LE
	//  - utf16be: UTF-16 BE
	//  - windows1252: Western (Windows 1252)
	//  - iso88591: Western (ISO 8859-1)
	//  - iso88593: Western (ISO 8859-3)
	//  - iso885915: Western (ISO 8859-15)
	//  - macroman: Western (Mac Roman)
	//  - cp437: DOS (CP 437)
	//  - windows1256: Arabic (Windows 1256)
	//  - iso88596: Arabic (ISO 8859-6)
	//  - windows1257: Baltic (Windows 1257)
	//  - iso88594: Baltic (ISO 8859-4)
	//  - iso885914: Celtic (ISO 8859-14)
	//  - windows1250: Central European (Windows 1250)
	//  - iso88592: Central European (ISO 8859-2)
	//  - cp852: Central European (CP 852)
	//  - windows1251: Cyrillic (Windows 1251)
	//  - cp866: Cyrillic (CP 866)
	//  - iso88595: Cyrillic (ISO 8859-5)
	//  - koi8r: Cyrillic (KOI8-R)
	//  - koi8u: Cyrillic (KOI8-U)
	//  - iso885913: Estonian (ISO 8859-13)
	//  - windows1253: Greek (Windows 1253)
	//  - iso88597: Greek (ISO 8859-7)
	//  - windows1255: Hebrew (Windows 1255)
	//  - iso88598: Hebrew (ISO 8859-8)
	//  - iso885910: Nordic (ISO 8859-10)
	//  - iso885916: Romanian (ISO 8859-16)
	//  - windows1254: Turkish (Windows 1254)
	//  - iso88599: Turkish (ISO 8859-9)
	//  - windows1258: Vietnamese (Windows 1258)
	//  - gbk: Simplified Chinese (GBK)
	//  - gb18030: Simplified Chinese (GB18030)
	//  - cp950: Traditional Chinese (Big5)
	//  - big5hkscs: Traditional Chinese (Big5-HKSCS)
	//  - shiftjis: Japanese (Shift JIS)
	//  - eucjp: Japanese (EUC-JP)
	//  - euckr: Korean (EUC-KR)
	//  - windows874: Thai (Windows 874)
	//  - iso885911: Latin/Thai (ISO 8859-11)
	//  - koi8ru: Cyrillic (KOI8-RU)
	//  - koi8t: Tajik (KOI8-T)
	//  - gb2312: Simplified Chinese (GB 2312)
	//  - cp865: Nordic DOS (CP 865)
	//  - cp850: Western European DOS (CP 850)
	"files.encoding": "utf8",

	// O caractere de fim de linha padrão.
	//  - \n: LF
	//  - \r\n: CRLF
	//  - auto: Usa o caractere de fim de linha específico do sistema operacional.
	"files.eol": "auto",

	// Configure [padrões glob](https://aka.ms/vscode-glob-patterns) para excluir arquivos e pastas. Por exemplo, o Explorador de Arquivos decide quais arquivos e pastas mostrar ou ocultar com base nessa configuração. Consulte a configuração "#search.exclude#" para definir as exclusões específicas da pesquisa. Consulte a configuração "#explorer.excludeGitIgnore#" para ignorar arquivos com base em seu ".gitignore".
	"files.exclude": {
		"**/.git": true,
		"**/.svn": true,
		"**/.hg": true,
		"**/CVS": true,
		"**/.DS_Store": true,
		"**/Thumbs.db": true
	},

	// [Hot Exit](https://aka.ms/vscode-hot-exit) controla se os arquivos não salvos são lembrados entre as sessões, permitindo que o prompt de salvamento ao sair do editor seja ignorado.
	//  - off: Desative a Hot Exit. Um prompt será mostrado ao tentar fechar uma janela com editores que têm alterações não salvas.
	//  - onExit: O Hot Exit será disparado quando a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, keybinding, menu). Todas as janelas sem pastas abertas serão restauradas na próxima inicialização. Uma lista de janelas com arquivos não salvos abertas anteriormente pode ser acessada em `Arquivo > Abrir Recente > Mais...`
	//  - onExitAndWindowClose: O Hot Exit será disparado quando a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, keybinding, menu) e também para qualquer janela com uma pasta aberta, independentemente de esta ser a última janela. Todas as janelas sem pastas abertas serão restauradas na próxima inicialização. Uma lista de janelas com arquivos não salvos abertas anteriormente pode ser acessada por meio de `Arquivo > Abrir Recente > Mais...`
	"files.hotExit": "onExit",

	// Quando habilitado, insira uma nova linha final no final do arquivo ao salvá-lo.
	"files.insertFinalNewline": false,

	// Tempo limite em milissegundos após o qual os participantes do arquivo para criar, renomear e excluir serão cancelados. Use `0` para desabilitar participantes.
	"files.participants.timeout": 60000,

	// Configure caminhos ou [padrões glob](https://aka.ms/vscode-glob-patterns) para impedir que sejam marcados como somente leitura se eles corresponderem como resultado da configuração "#files.readonlyInclude#". Os padrões glob são sempre avaliados em relação ao caminho da pasta do workspace, a menos que sejam caminhos absolutos. Arquivos de provedores de sistema de arquivos somente leitura sempre serão somente leitura independentemente dessa configuração.
	"files.readonlyExclude": {},

	// Marca os arquivos como somente leitura quando suas permissões de arquivo indicam isso. Isso pode ser substituído por meio das configurações "#files.readonlyInclude#" e "#files.readonlyExclude#".
	"files.readonlyFromPermissions": false,

	// Configure caminhos ou [padrões glob](https://aka.ms/vscode-glob-patterns) para marcar como somente leitura. Os padrões glob são sempre avaliados em relação ao caminho da pasta do workspace, a menos que sejam caminhos absolutos. Você pode excluir caminhos correspondentes por meio da configuração "#files.readonlyExclude#". Arquivos de provedores de sistema de arquivos somente leitura sempre serão somente leitura independentemente dessa configuração.
	"files.readonlyInclude": {},

	// Controla se os arquivos que fizeram parte de uma refatoração são salvos automaticamente
	"files.refactoring.autoSave": true,

	// Restaurar a pilha de desfazer quando um arquivo for reaberto.
	"files.restoreUndoStack": true,

	// Um conflito de salvamento pode ocorrer quando um arquivo é salvo em um disco que foi alterado por outro programa nesse tempo. Para evitar a perda de dados, o usuário é solicitado a comparar as alterações no editor com a versão no disco. Essa configuração só deverá ser alterada se você encontrar frequentemente erros de conflito de salvamento e poderá resultar em perda de dados se usada sem cuidado.
	//  - askUser: Recusará salvar e pedirá a resolução do conflito de salvamento manualmente.
	//  - overwriteFileOnDisk: Resolverá o conflito de salvamento ao substituir o arquivo no disco pelas alterações no editor.
	"files.saveConflictResolution": "askUser",

	// Habilita a caixa de diálogo de arquivo simples para abrir e salvar arquivos e pastas. A caixa de diálogo de arquivo simples substitui a caixa de diálogo de arquivo do sistema quando habilitada.
	"files.simpleDialog.enable": false,

	// Quando habilitado, cortará todas as novas linhas após a última linha final no final do arquivo ao salvá-lo.
	"files.trimFinalNewlines": false,

	// Quando habilitado, cortará o espaço em branco à direita ao salvar um arquivo.
	"files.trimTrailingWhitespace": false,

	// When enabled, trailing whitespace will be removed from multiline strings and regexes will be removed on save or when executing 'editor.action.trimTrailingWhitespace'. This can cause whitespace to not be trimmed from lines when there isn't up-to-date token information.
	"files.trimTrailingWhitespaceInRegexAndStrings": true,

	// Configure caminhos ou [padrões glob](https://aka.ms/vscode-glob-patterns) a serem excluídos da observação de arquivos. Os caminhos podem ser relativos à pasta observada ou absolutos. Os padrões glob são correspondentes em relação à pasta observada. Quando você perceber o processo de observador de arquivos consumindo muita CPU, certifique-se de excluir pastas grandes que são de menor interesse (como pastas de saída de build).
	"files.watcherExclude": {
		"**/.git/objects/**": true,
		"**/.git/subtree-cache/**": true,
		"**/node_modules/*/**": true,
		"**/.hg/store/**": true
	},

	// Configure caminhos extras para observar as alterações no workspace. Por padrão, todas as pastas do workspace serão inspecionadas recursivamente, exceto as pastas que são links simbólicos. Você pode adicionar explicitamente caminhos absolutos ou relativos para suportar pastas de inspeção que são links simbólicos. Os caminhos relativos serão resolvidos para um caminho absoluto que usa o workspace aberto no momento.
	"files.watcherInclude": [],

	// Controla o tamanho da fonte (em pixels) do teclado do modo screencast.
	"screencastMode.fontSize": 56,

	// Opções para personalizar a sobreposição do teclado no modo screencast.
	"screencastMode.keyboardOptions": {
		"showKeys": true,
		"showKeybindings": true,
		"showCommands": true,
		"showCommandGroups": false,
		"showSingleEditorCursorMoves": true
	},

	// Controla o tempo (em milissegundos) em que a sobreposição do teclado é mostrada no modo screencast.
	"screencastMode.keyboardOverlayTimeout": 800,

	// Controla a cor em hexa (#RGB, #RGBA, #RRGGBB ou #RRGGBBAA) do indicador do mouse no modo screencast.
	"screencastMode.mouseIndicatorColor": "#FF0000",

	// Controla o tamanho (em pixels) do indicador do mouse no modo screencast.
	"screencastMode.mouseIndicatorSize": 20,

	// Controla o deslocamento vertical da cobertura do modo screencast da parte inferior como um percentual da altura do workbench.
	"screencastMode.verticalOffset": 20,

	// Controla se a ativação do modo Zen também centraliza o layout.
	"zenMode.centerLayout": true,

	// Controla se a ativação do modo Zen também coloca o workbench no modo de tela inteira.
	"zenMode.fullScreen": true,

	// Controla se ativar o modo Zen também oculta a barra de atividade na parte esquerda ou direita do workbench.
	"zenMode.hideActivityBar": true,

	// Controla se a ativação do modo Zen também oculta os números de linha do editor.
	"zenMode.hideLineNumbers": true,

	// Controla se a ativação do modo Zen também oculta a barra de status na parte inferior do workbench.
	"zenMode.hideStatusBar": true,

	// Controla se uma janela deverá ser restaurada para o Modo Zen se ela tiver sido encerrada no Modo Zen.
	"zenMode.restore": true,

	// Controla se a ativação do Modo Zen deve mostrar várias guias do editor, uma única guia do editor ou ocultar completamente a área de título do editor.
	//  - multiple: Cada editor é exibido como uma guia na área de título do editor.
	//  - single: O editor ativo é exibido como uma única guia grande na área de título do editor.
	//  - none: A área de título do editor não é exibida.
	"zenMode.showTabs": "multiple",

	// Controla se as notificações no modo Não incomodar devem ser habilitadas no Modo Zen. Se verdadeiro, apenas as notificações de erro serão exibidas.
	"zenMode.silentNotifications": true,

	// Controla se o Explorador deverá revelar e selecionar arquivos automaticamente ao abri-los.
	//  - true: Os arquivos serão revelados e selecionados.
	//  - false: Os arquivos não serão revelados e selecionados.
	//  - focusNoScroll: Os arquivos não serão rolados no modo de exibição, mas ainda terão foco.
	"explorer.autoReveal": true,

	// Configure caminhos ou [padrões glob](https://aka.ms/vscode-glob-patterns) para impedir que arquivos e pastas sejam revelados e selecionados no Explorador quando eles são abertos. Os padrões glob são sempre avaliados em relação ao caminho da pasta do workspace, a menos que sejam caminhos absolutos.
	"explorer.autoRevealExclude": {
		"**/node_modules": true,
		"**/bower_components": true
	},

	// Controla se o Explorador deverá renderizar pastas em um formato compacto. Nesse formato, as pastas filho únicas serão compactadas em um elemento de árvore combinado. Isso é útil para estruturas de pacote Java, por exemplo.
	"explorer.compactFolders": true,

	// Controla se o Explorador deverá solicitar confirmação ao excluir um arquivo por meio da lixeira.
	"explorer.confirmDelete": true,

	// Controla se o Explorador deverá solicitar confirmação para mover arquivos e pastas por meio de arrastar e soltar.
	"explorer.confirmDragAndDrop": true,

	// Controla se o Explorer deve solicitar confirmação ao colar arquivos e pastas nativos.
	"explorer.confirmPasteNative": true,

	// Controla se o gerenciador deve solicitar confirmação ao desfazer.
	//  - verbose: O Explorer solicitará antes de todas as operações de desfazer.
	//  - default: O Explorer solicitará antes de operações de desfazer destrutivas.
	//  - light: O Explorer não solicitará antes de desfazer operações quando o foco for focalizado.
	"explorer.confirmUndo": "default",

	// O caractere de separação de caminho usado ao copiar caminhos de arquivo relativos.
	//  - /: Use barra como caractere de separação de caminho.
	//  - \: Use a barra invertida como caractere de separação de caminho.
	//  - auto: Usa o caractere de separação de caminho específico do sistema operacional.
	"explorer.copyRelativePathSeparator": "auto",

	// Controla se as decorações de arquivo devem usar selos.
	"explorer.decorations.badges": true,

	// Controla se as decorações de arquivo devem usar cores.
	"explorer.decorations.colors": true,

	// Controla se o Explorador deverá permitir a movimentação de arquivos e pastas por meio de arrastar e soltar. Essa configuração só afeta arrastar e soltar de dentro do Explorador.
	"explorer.enableDragAndDrop": true,

	// Controla se o gerenciador deve dar suporte à desfazer operações de arquivo e pasta.
	"explorer.enableUndo": true,

	// Controla se as entradas em .gitignore devem ser analisadas e excluídas do explorador. Igual a `files.exclude`.
	"explorer.excludeGitIgnore": false,

	// Controla se o explorador deve expandir espaços de trabalho multi-raiz contendo apenas uma pasta durante a inicialização
	"explorer.expandSingleFolderWorkspaces": true,

	// Controla se o aninhamento de arquivos está habilitado no explorador. O aninhamento de arquivos permite que os arquivos relacionados em um diretório sejam agrupados visualmente em um único arquivo pai.
	"explorer.fileNesting.enabled": false,

	// Controla se os ninhos de arquivos são expandidos automaticamente. `explorer.fileNesting.enabled` deve ser definido para que isso tenha efeito.
	"explorer.fileNesting.expand": true,

	// Controla o aninhamento de arquivos no explorer. `explorer.fileNesting.enabled` deve ser definido para que isso tenha efeito. Cada __Item__ representa um padrão pai e pode conter um único caractere `*` que corresponde a qualquer cadeia de caracteres. Cada __Value__ representa uma lista separada por vírgulas dos padrões filho que devem ser mostrados aninhados em um determinado pai. Padrões filho podem conter vários tokens especiais:
	// - `${capture}`: Corresponde ao valor resolvido do `*` do padrão pai
	// - `${basename}`: Corresponde ao nome base do arquivo pai, o `arquivo` em `file.ts`
	// - `${extname}`: Corresponde à extensão do arquivo pai, o `ts` em `file.ts`
	// - `${dirname}`: Corresponde ao nome do diretório do arquivo pai, o `src` in `src/file.ts`
	// - `*`: Corresponde a qualquer cadeia de caracteres, só pode ser usado uma vez por padrão filho
	"explorer.fileNesting.patterns": {
		"*.ts": "${capture}.js",
		"*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
		"*.jsx": "${capture}.js",
		"*.tsx": "${capture}.ts",
		"tsconfig.json": "tsconfig.*.json",
		"package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb"
	},

	// Controla qual estratégia de nomenclatura usar ao dar um novo nome a um item duplicado do Explorer na colagem.
	//  - simple: Acrescenta a palavra "cópia" no final do nome duplicado, potencialmente seguido por um número.
	//  - smart: Adiciona um número ao final do nome duplicado. Se algum número já fizer parte do nome, ele tentará aumentar esse número.
	//  - disabled: Desabilita a nomenclatura incremental. Se existirem dois arquivos com o mesmo nome, você será solicitado a substituir o arquivo existente.
	"explorer.incrementalNaming": "simple",

	// O número mínimo de slots de editor pré-alocados no painel Abrir Editores. Se definido como 0, o painel Abrir Editores será redimensionado dinamicamente com base no número de editores.
	"explorer.openEditors.minVisible": 0,

	// Controla a ordem de classificação dos editores no painel Editores Abertos.
	//  - editorOrder: Os editores são ordenados na mesma ordem em que as guias do editor são mostradas.
	//  - alphabetical: Os editores são ordenados alfabeticamente pelo nome da guia dentro de cada grupo de editores.
	//  - fullPath: Os editores são ordenados em ordem alfabética por caminho completo dentro de cada grupo de editores.
	"explorer.openEditors.sortOrder": "editorOrder",

	// O número máximo inicial de editores mostrados no painel Abrir Editores. Exceder esse limite mostrará uma barra de rolagem e permitirá redimensionar o painel para exibir mais itens.
	"explorer.openEditors.visible": 9,

	// Controla a classificação baseada em propriedade de arquivos e pastas no Explorador. Quando '#explorer.fileNesting.enabled#' estiver habilitado, também controlará a classificação de arquivos aninhados.
	//  - default: Os arquivos e as pastas são classificados por nomes. As pastas são exibidas antes dos arquivos.
	//  - mixed: Os arquivos e as pastas são classificados por nomes. Os arquivos estão entrelaçados com as pastas.
	//  - filesFirst: Os arquivos e as pastas são classificados por nomes. Os arquivos são exibidos antes das pastas.
	//  - type: Os arquivos e as pastas são agrupados por tipo de extensão, e em seguida, classificados pelos nomes. As pastas são exibidas antes dos arquivos.
	//  - modified: Os arquivos e as pastas são classificados pela data da última modificação, em ordem decrescente. As pastas são exibidas antes dos arquivos.
	//  - foldersNestsFiles: Arquivos e pastas são classificados por seus nomes. As pastas são exibidas antes dos arquivos. Arquivos com filhos aninhados são exibidos antes de outros arquivos.
	"explorer.sortOrder": "default",

	// Controla a classificação lexicográfica de nomes de arquivos e de pastas no Explorer.
	//  - default: Nomes em maiúsculas e minúsculas são misturados.
	//  - upper: Os nomes em maiúsculas são agrupados antes dos nomes em minúsculas.
	//  - lower: Os nomes em minúsculas são agrupados antes dos nomes em maiúsculas.
	//  - unicode: Os nomes são classificados em ordem Unicode.
	"explorer.sortOrderLexicographicOptions": "default",

	// The number of days (if enabled) to keep unused workspace cache data. Beyond this limit, cached workspace data may be removed.
	"java.configuration.workspaceCacheLimit": 90,

	// This setting is deprecated, please use 'java.jdt.ls.java.home' instead.
	// Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server.
	// On Windows, backslashes must be escaped, i.e.
	// "java.home":"C:\\Program Files\\Java\\jdk-17.0_3"
	"java.home": null,

	// [Experimental] Specify whether to enable Android project importing. When set to `auto`, the Android support will be enabled in Visual Studio Code - Insiders.
	// 
	// **Note:** Only works for Android Gradle Plugin `3.2.0` or higher.
	"java.jdt.ls.androidSupport.enabled": "auto",

	// Specifies the folder path to the JDK (17 or more recent) used to launch the Java Language Server. This setting will replace the Java extension's embedded JRE to start the Java Language Server. 
	// 
	// On Windows, backslashes must be escaped, i.e.
	// "java.jdt.ls.java.home":"C:\\Program Files\\Java\\jdk-17.0_3"
	"java.jdt.ls.java.home": null,

	// Whether to load lombok processors from project classpath
	"java.jdt.ls.lombokSupport.enabled": true,

	// Specify whether to automatically add Protobuf output source directories to the classpath.
	// 
	// **Note:** Only works for Gradle `com.google.protobuf` plugin `0.8.4` or higher.
	"java.jdt.ls.protobufSupport.enabled": true,

	// Specifies extra VM arguments used to launch the Java Language Server. Eg. use `-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable` to optimize memory usage with the parallel garbage collector
	"java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable",

	// The launch mode for the Java extension
	//  - Standard: Provides full features such as intellisense, refactoring, building, Maven/Gradle support etc.
	//  - LightWeight: Starts a syntax server with lower start-up cost. Only provides syntax features such as outline, navigation, javadoc, syntax errors.
	//  - Hybrid: Provides full features with better responsiveness. It starts a standard language server and a secondary syntax server. The syntax server provides syntax features until the standard server is ready.
	"java.server.launchMode": "Hybrid",

	// [Experimental] Specify whether to share indexes between different workspaces. When set to `auto`, shared indexes will be enabled in Visual Studio Code - Insiders.
	"java.sharedIndexes.enabled": "auto",

	// Specifies a common index location for all workspaces. See default values as follows:
	//  
	// Windows: First use `"$APPDATA\\.jdt\\index"`, or `"~\\.jdt\\index"` if it does not exist
	//  
	// macOS: `"~/Library/Caches/.jdt/index"`
	//  
	// Linux: First use `"$XDG_CACHE_HOME/.jdt/index"`, or `"~/.cache/.jdt/index"` if it does not exist
	"java.sharedIndexes.location": "",

	// Traces the communication between VS Code and the Java language server.
	"java.trace.server": "off",

	// Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).
	"redhat.telemetry.enabled": null,

	// Controla o posicionamento do actionbar nas linhas do modo de exibição de pesquisa.
	//  - auto: Posicione o actionBar à direita quando o modo de exibição de pesquisa for estreito e imediatamente após o conteúdo quando o modo de exibição de pesquisa for largo.
	//  - right: Sempre posicione o actionbar à direita.
	"search.actionsPosition": "right",

	// Controla se os resultados da pesquisa serão recolhidos ou expandidos.
	//  - auto: Arquivos com menos de 10 resultados são expandidos. Outros são recolhidos.
	//  - alwaysCollapse
	//  - alwaysExpand
	"search.collapseResults": "alwaysExpand",

	// Controla se as decorações do arquivo de pesquisa devem usar emblemas.
	"search.decorations.badges": true,

	// Controla se as decorações do arquivo de pesquisa devem usar cores.
	"search.decorations.colors": true,

	// Controla o modo de exibição de resultados de pesquisa padrão.
	//  - tree: Mostra os resultados da pesquisa como uma árvore.
	//  - list: Mostra os resultados da pesquisa como uma lista.
	"search.defaultViewMode": "list",

	// Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `files.exclude` setting.
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true,
		"**/*.code-search": true
	},

	// Mostrar resultados de conteúdo avançado do editor de blocos de anotações para blocos de anotações fechados. Atualize os resultados da sua pesquisa após alterar essa configuração.
	"search.experimental.closedNotebookRichContentResults": false,

	// Controla se a última entrada digitada da Pesquisa Rápida deverá ser restaurada ao ser aberta na próxima vez.
	"search.experimental.quickAccess.preserveInput": false,

	// Controla se os ciclos de links devem ser seguidos durante a pesquisa.
	"search.followSymlinks": true,

	// Controla se o modo de exibição de pesquisa deve ler ou modificar a área de transferência de localização compartilhada no macOS.
	"search.globalFindClipboard": false,

	// Essa configuração foi preterida. Em vez disso, você pode arrastar o ícone de pesquisa para um novo local.
	// Controla se a pesquisa será mostrada como um modo de exibição na barra lateral ou como um painel na área do painel para obter mais espaço horizontal.
	"search.location": "sidebar",

	// O cache de pesquisa é mantido no host de extensão que nunca é desligado. Portanto, essa configuração não é mais necessária.
	// Quando habilitado, o processo de searchService será mantido ativo em vez de ser desligado após uma hora de inatividade. Isso manterá o cache de pesquisa de arquivo na memória.
	"search.maintainFileSearchCache": false,

	// Controla o número máximo de resultados da pesquisa, pode ser definido como `nulo` (vazio) para retornar resultados ilimitados.
	"search.maxResults": 20000,

	// Controla onde ocorrerão as novas operações “Pesquisar: Localizar em Arquivos” e “Localizar na Pasta”: no modo de exibição de pesquisas ou em um editor de pesquisas.
	//  - view: Pesquisar na exibição de pesquisa, seja no painel ou nas barras laterais.
	//  - reuseEditor: Pesquisar em um editor de pesquisa existente se houver algum. Caso contrário, pesquisar em um novo editor de pesquisa.
	//  - newEditor: Pesquisar em um novo editor de pesquisa.
	"search.mode": "view",

	// Controla a ordem de classificação do histórico do editor ao abrir rapidamente ao filtrar.
	//  - default: As entradas do histórico são classificadas por relevância com base no valor do filtro usado. As entradas mais relevantes aparecem primeiro.
	//  - recency: As entradas do histórico são classificadas por recência. As entradas abertas mais recentemente aparecem primeiro.
	"search.quickOpen.history.filterSortOrder": "default",

	// Se deseja incluir os resultados de arquivos abertos recentemente nos resultados do arquivo para Abertura Rápida.
	"search.quickOpen.includeHistory": true,

	// Se deseja incluir os resultados de uma pesquisa de símbolo global nos resultados do arquivo para Abertura Rápida.
	"search.quickOpen.includeSymbols": false,

	// O número padrão de linhas de contexto circundantes a serem usadas ao criar Editores de Pesquisas. Se estiver usando `search. searchEditor.reusePriorSearchConfiguration`, isso poderá ser definido como `null` (vazio) para usar a configuração do Editor de Pesquisas anterior.
	"search.searchEditor.defaultNumberOfContextLines": 1,

	// Configure o efeito de clicar duas vezes em um resultado em um editor de pesquisa.
	//  - selectWord: Clicar duas vezes seleciona a palavra sob o cursor.
	//  - goToLocation: Clicar duas vezes abre o resultado no grupo de editores ativo.
	//  - openLocationToSide: Clicar duas vezes abre o resultado no grupo de editores ao lado, criando um caso ainda não exista.
	"search.searchEditor.doubleClickBehaviour": "goToLocation",

	// Quando esta opção estiver habilitada, os novos Editores de Pesquisa reutilizarão as inclusões, as exclusões e os sinalizadores do Editor de Pesquisa já aberto.
	"search.searchEditor.reusePriorSearchConfiguration": false,

	// Configure effect of single-clicking a result in a search editor.
	//  - default: Single-clicking does nothing.
	//  - peekDefinition: Single-clicking opens a Peek Definition window.
	"search.searchEditor.singleClickBehaviour": "default",

	// Pesquisar todos os arquivos enquanto você digita.
	"search.searchOnType": true,

	// Quando `search.searchOnType#` está habilitado, controla o tempo limite em milissegundos entre a digitação de um caractere e o início da pesquisa. Não tem efeito quando `#search.searchOnType` está desabilitado.
	"search.searchOnTypeDebouncePeriod": 300,

	// Atualize a consulta de pesquisa para o texto selecionado do editor ao focar na exibição de pesquisa. Isso acontece ao clicar ou ao disparar o comando `workbench.views.search.focus`.
	"search.seedOnFocus": false,

	// Habilitar a pesquisa de propagação da palavra mais próxima ao cursor quando o editor ativo não tiver nenhuma seleção.
	"search.seedWithNearestWord": false,

	// Controla se os números de linha devem ser mostrados para os resultados da pesquisa.
	"search.showLineNumbers": false,

	// Pesquisar sem diferenciar maiúsculas de minúsculas se o padrão for todo em minúsculas, caso contrário, pesquisar diferenciando maiúsculas de minúsculas.
	"search.smartCase": false,

	// Controla a ordem de classificação dos resultados da pesquisa.
	//  - default: Os resultados são classificados por nomes de pastas e arquivos, em ordem alfabética.
	//  - fileNames: Os resultados são classificados por nomes de arquivo ignorando a ordem da pasta, em ordem alfabética.
	//  - type: Os resultados são classificados por extensões de arquivo, em ordem alfabética.
	//  - modified: Os resultados são classificados pela data da última modificação do arquivo, em ordem descendente.
	//  - countDescending: Os resultados são classificados por contagem por arquivo, em ordem descendente.
	//  - countAscending: Os resultados são classificados por contagem por arquivo, em ordem ascendente.
	"search.sortOrder": "default",

	// Controla se o arquivo gitignore global deve ser usado (por exemplo, de `$HOME/.config/git/ignore`) ao procurar por arquivos. Requer que `search.useIgnoreFiles` esteja habilitado.
	"search.useGlobalIgnoreFiles": false,

	// Controla se os arquivos `.gitignore` e `.ignore` devem ser usados ao pesquisar arquivos.
	"search.useIgnoreFiles": true,

	// Controla se os arquivos `.gitignore` e `.ignore` devem ser utilizados nos diretórios pai ao procurar por arquivos. Exige que `search.useIgnoreFiles` esteja habilitado.
	"search.useParentIgnoreFiles": false,

	// Preterido. O PCRE2 será usado automaticamente ao usar os recursos regex que só têm suporte do PCRE2.
	// Se o mecanismo de regex do PCRE2 deve ser usado na pesquisa de texto. Isso permite o uso de alguns recursos de regex avançados, como referências inversas e de lookahead. No entanto, nem todos os recursos PCRE2 são compatíveis, somente recursos compatíveis com o JavaScript.
	"search.usePCRE2": false,

	// Controla se é necessário abrir a Visualização de Substituição ao selecionar ou substituir uma correspondência.
	"search.useReplacePreview": true,

	// Preterido. Considere "search.usePCRE2" para obter suporte do recurso regex avançado.
	// Essa configuração foi preterida e agora retorna ao "search.usePCRE2".
	"search.useRipgrep": true,

	// Esta configuração foi preterida. Use 'update.mode'.
	// Configure o recebimento de atualizações automáticas. Exige uma reinicialização após a alteração. As atualizações são obtidas de um serviço online da Microsoft.
	"update.channel": "default",

	// Configure o recebimento de atualizações automáticas. Exige uma reinicialização após a alteração. As atualizações são obtidas de um serviço online da Microsoft.
	//  - none: Desabilitar atualizações.
	//  - manual: Desabilitar as verificações automáticas de atualização em segundo plano. As atualizações estarão disponíveis se você verificar as atualizações manualmente.
	//  - start: Verificar se há atualizações somente na inicialização. Desabilitar as verificações automáticas de atualização em segundo plano.
	//  - default: Habilitar verificações de atualização automática. O código verificará se há atualizações automaticamente e periodicamente.
	"update.mode": "default",

	// Mostrar Notas sobre a Versão após uma atualização. As Notas sobre a Versão são obtidas de um serviço online da Microsoft.
	"update.showReleaseNotes": true,

	// Controla se o carregamento experimental de certificados CA do sistema operacional deve ser habilitado. Isso usa uma abordagem mais geral do que a implementação padrão.
	"http.experimental.systemCertificatesV2": false,

	// A configuração de proxy a ser usada. Se não estiver definida, será herdada das variáveis de ambiente `http_proxy` e `https_proxy`.
	"http.proxy": "",

	// O valor a ser enviado como o cabeçalho `Proxy-Authorization` para cada solicitação de rede.
	"http.proxyAuthorization": null,

	// Substitui o nome do serviço de entidade de segurança para autenticação Kerberos pelo proxy HTTP. Um padrão baseado no nome do host do proxy é usado quando não está definido.
	"http.proxyKerberosServicePrincipal": "",

	// Controla se o certificado do servidor proxy deve ser verificado na lista de ACs fornecidas.
	"http.proxyStrictSSL": true,

	// Usar o suporte a proxy para extensões.
	//  - off: Desabilitar o suporte a proxy para extensões.
	//  - on: Habilitar o suporte a proxy para extensões.
	//  - fallback: Habilita o suporte ao proxy para extensões, retorna para as opções de solicitação quando nenhum proxy for encontrado.
	//  - override: Habilitar o suporte a proxy para extensões, substituir opções de solicitação.
	"http.proxySupport": "override",

	// Controla se os certificados de AC devem ser carregados do SO. (No Windows e no macOS, é necessário recarregar a janela depois de desativar esta opção.)
	"http.systemCertificates": true,

	// Controla a lógica de expedição para pressionamentos de tecla para usar `code` (recomendado) ou `keyCode`.
	"keyboard.dispatch": "code",

	// Habilita os botões do touchbar do macOS no teclado se disponível.
	"keyboard.touchbar.enabled": true,

	// Um conjunto de identificadores das entradas na barra de toque que não devem aparecer (por exemplo `workbench.action.navigateBack`).
	"keyboard.touchbar.ignored": [],

	// Controla se o thread de comentário deve recolher quando o thread é resolvido.
	"comments.collapseOnResolve": true,

	// Controla se o widget de comentários rola ou se expande.
	"comments.maxHeight": true,

	// Esta configuração foi preterida em favor de 'comments.openView'.
	// Controla quando o painel de comentários deve ser aberto.
	"comments.openPanel": "openOnSessionStartWithComments",

	// Controla quando o painel de comentários deve ser aberto.
	//  - never: A exibição de comentários nunca será aberta.
	//  - file: A exibição de comentários será aberta quando um arquivo com comentários estiver ativo.
	//  - firstFile: Se a exibição de comentários ainda não tiver sido aberta durante esta sessão, ela será aberta pela primeira vez durante uma sessão em que um arquivo com comentários estiver ativo.
	//  - firstFileUnresolved: Se a exibição de comentários ainda não tiver sido aberta durante essa sessão e o comentário não for resolvido, ela será aberta pela primeira vez durante uma sessão em que um arquivo com comentários estiver ativo.
	"comments.openView": "firstFile",

	// Determina se o tempo relativo será usado nos carimbos de data/hora de comentários (por exemplo, '1 dia atrás').
	"comments.useRelativeTime": true,

	// Controla a visibilidade da barra de comentários e dos threads de comentários em editores que têm comentários e intervalos de comentários. Os comentários ainda estão acessíveis por meio do modo de exibição Comentários e farão com que os comentários sejam ativados da mesma maneira que a execução do comando "Comentários: Alternar Comentários do Editor" alterna os comentários.
	"comments.visible": true,

	// Permitir a configuração de pontos de interrupção em qualquer arquivo.
	"debug.allowBreakpointsEverywhere": false,

	// Mostrar automaticamente valores para variáveis que são resolvidas lentamente pelo depurador, como getters.
	"debug.autoExpandLazyVariables": false,

	// No final de uma sessão de depuração, todas as guias somente leitura associadas a essa sessão serão fechadas
	"debug.closeReadonlyTabsOnEnd": false,

	// Controla se é necessário confirmar quando a janela fecha se houver sessões de depuração ativas.
	//  - never: Nunca confirmar.
	//  - always: Sempre confirmar se há sessões de depuração.
	"debug.confirmOnExit": "never",

	// Controla se as sugestões devem ser aceitas ao entrar no console de depuração. Enter também é usado para avaliar o que quer que seja digitado no console de depuração.
	"debug.console.acceptSuggestionOnEnter": "off",

	// Controla se o Console de Depuração deverá ser fechado automaticamente quando a sessão de depuração terminar.
	"debug.console.closeOnEnd": false,

	// Controla se o Console de Depuração deverá recolher linhas idênticas e mostrar várias ocorrências com um selo.
	"debug.console.collapseIdenticalLines": true,

	// Controla a família de fontes no Console de Depuração.
	"debug.console.fontFamily": "default",

	// Controla o tamanho da fonte em pixels no Console de Depuração.
	"debug.console.fontSize": 12,

	// Controla se o Console de Depuração deverá sugerir uma entrada digitada anteriormente.
	"debug.console.historySuggestions": true,

	// Controla a altura da linha em pixels no Console de Depuração. Use 0 para computar a altura da linha do tamanho da fonte.
	"debug.console.lineHeight": 0,

	// Controla se as linhas deverão ser encapsuladas no Console de Depuração.
	"debug.console.wordWrap": true,

	// Mostrar Código-Fonte no Modo de Exibição de Desmontagem.
	"debug.disassemblyView.showSourceCode": true,

	// Cor da Barra de status quando o depurador está ativo.
	"debug.enableStatusBarColor": true,

	// Controla se o editor deve estar focado quando o depurador for interrompido.
	"debug.focusEditorOnBreak": true,

	// Controla se a janela do workbench deve ser com foco quando o depurador é interrompido.
	"debug.focusWindowOnBreak": true,

	// Controls the action to perform when clicking the editor gutter with the middle mouse button.
	//  - logpoint: Add Logpoint.
	//  - conditionalBreakpoint: Add Conditional Breakpoint.
	//  - triggeredBreakpoint: Add Triggered Breakpoint.
	//  - none: Don't perform any action.
	"debug.gutterMiddleClickAction": "logpoint",

	// Oculta o controle ''Iniciar Depuração'' na barra de título da exibição ''Executar e Depurar'' enquanto a depuração estiver ativa. Relevante somente quando `debug.toolBarLocation` não estiver `docked`.
	"debug.hideLauncherWhileDebugging": false,

	// Mostrar valores de variáveis embutidos no editor durante a depuração.
	//  - on: Sempre mostrar os valores de variáveis embutidos no editor durante a depuração.
	//  - off: Nunca mostrar os valores de variáveis embutidos no editor durante a depuração.
	//  - auto: Mostrar os valores de variáveis embutidos no editor durante a depuração quando a linguagem dá suporte para locais de valor embutido.
	"debug.inlineValues": "auto",

	// Controla quando o Console de Depuração interno deverá ser aberto.
	"debug.internalConsoleOptions": "openOnFirstSessionStart",

	// Controla o que fazer quando forem encontrados erros após a execução de um preLaunchTask.
	//  - debugAnyway: Ignorar erros de tarefa e iniciar a depuração.
	//  - showErrors: Mostrar o modo de exibição Problemas e não iniciar a depuração.
	//  - prompt: Solicitar ao usuário.
	//  - abort: Cancelar depuração.
	"debug.onTaskErrors": "prompt",

	// Controla quando o modo de exibição de depuração deve ser aberto.
	"debug.openDebug": "openOnDebugBreak",

	// Abrir automaticamente a exibição do explorador no final de uma sessão de depuração.
	"debug.openExplorerOnEnd": false,

	// Controla quais editores devem ser salvos antes do início de uma sessão de depuração.
	//  - allEditorsInActiveGroup: Salvar todos os editores no grupo ativo antes de iniciar uma sessão de depuração.
	//  - nonUntitledEditorsInActiveGroup: Salvar todos os editores no grupo ativo, exceto os sem título, antes de iniciar uma sessão de depuração.
	//  - none: Não salvar nenhum editor antes de iniciar uma sessão de depuração.
	"debug.saveBeforeStart": "allEditorsInActiveGroup",

	// Controla se os pontos de interrupção devem ser mostrados na régua de visão geral.
	"debug.showBreakpointsInOverviewRuler": false,

	// Controla se as decorações candidatas de pontos de interrupção embutidas devem ser mostradas no editor durante a depuração.
	"debug.showInlineBreakpointCandidates": true,

	// Controla quando a Barra de status de depuração deverá estar visível.
	//  - never: Nunca mostrar a depuração na Barra de status
	//  - always: Sempre mostrar a depuração na Barra de status
	//  - onFirstSessionStart: Mostrar depuração na Barra de status somente após o início da depuração pela primeira vez
	"debug.showInStatusBar": "onFirstSessionStart",

	// Controla se as subsessões de depuração são mostradas na barra de ferramentas de depuração. Quando essa configuração é false, o comando de interrupção em uma subsessão também interromperá a sessão pai.
	"debug.showSubSessionsInToolBar": false,

	// Antes de iniciar uma nova sessão de depuração em um terminal integrado ou externo, limpe o terminal.
	"debug.terminal.clearBeforeReusing": false,

	// Controla o local da barra de ferramentas de depuração. Pode ser "flutuante" em todas as visualizações, "encaixado" na visualização de depuração, "CommandCenter" (requer "#window.commandCenter#") ou "oculto".
	//  - floating: Mostrar barra de ferramentas de depuração em todas as exibições.
	//  - docked: Mostrar barra de ferramentas de depuração somente em exibições de depuração.
	//  - commandCenter: `(Experimental)` Mostrar barra de ferramentas de depuração no centro de comandos.
	//  - hidden: Não mostrar barra de ferramentas de depuração.
	"debug.toolBarLocation": "floating",

	// Configuração de inicialização de depuração global. Deve ser usada como uma alternativa para 'launch.json' compartilhado entre workspaces.
	"launch": {
		"configurations": [],
		"compounds": []
	},

	// Habilitar/desabilitar o fechamento automático de marcas HTML.
	"html.autoClosingTags": true,

	// Habilitar/desabilitar a criação automática de aspas para atribuição de atributos HTML. O tipo de aspas pode ser configurado por '#html.completion.attributeDefaultValue#'.
	"html.autoCreateQuotes": true,

	// Controla o valor padrão dos atributos quando a conclusão é aceita.
	//  - doublequotes: O valor do atributo é definido como "".
	//  - singlequotes: O valor do atributo é definido como ''.
	//  - empty: O valor do atributo não está definido.
	"html.completion.attributeDefaultValue": "doublequotes",

	// Uma lista de caminhos de arquivo relativos apontando para arquivos JSON após o [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).
	// 
	// O VS Code carrega dados personalizados na inicialização para aprimorar o suporte a HTML para as marcas HTML personalizadas, atributos e valores de atributo que você especifica nos arquivos JSON.
	// 
	// Os caminhos do arquivo são relativos ao espaço de trabalho e somente as configurações da pasta do espaço de trabalho são consideradas.
	"html.customData": [],

	// Lista de marcas, separadas por vírgulas, nas quais o conteúdo não deve ser reformatado. `null` usa a marca `pre` como padrão.
	"html.format.contentUnformatted": "pre,code,textarea",

	// Habilitar/desabilitar o formatador HTML padrão.
	"html.format.enable": true,

	// Lista de marcas, separadas por vírgulas, que devem ter uma nova linha extra antes delas. `null` usa `"head, body, /html"` como padrão.
	"html.format.extraLiners": "head, body, /html",

	// Formatar e recuar `{{#foo}}` e `{{/foo}}`.
	"html.format.indentHandlebars": false,

	// Recuar as seções `<head>` e `<body>`.
	"html.format.indentInnerHtml": false,

	// Número máximo de quebras de linha a serem preservadas em uma parte. Use `null` para ilimitado.
	"html.format.maxPreserveNewLines": null,

	// Controla se quebras de linha existentes antes de elementos devem ser preservadas. Só funciona antes de elementos, não dentro de marcas ou para texto.
	"html.format.preserveNewLines": true,

	// Honrar as marcas de linguagem de modelagem django, erb, handlebars e php.
	"html.format.templating": false,

	// Lista de marcas, separadas por vírgulas, que não devem ser reformatadas. `null` usa como padrão todas as marcas listadas em https://www.w3.org/TR/html5/dom.html#phrasing-content.
	"html.format.unformatted": "wbr",

	// Manter o conteúdo de texto junto entre esta cadeia de caracteres.
	"html.format.unformattedContentDelimiter": "",

	// Quebrar linha dos atributos.
	//  - auto: Quebrar linha dos atributos somente quando o comprimento da linha for excedido.
	//  - force: Quebrar linha de todos os atributos, exceto do primeiro.
	//  - force-aligned: Quebrar linha de todos os atributos, exceto do primeiro, e manter alinhado.
	//  - force-expand-multiline: Quebrar linha de todos os atributos.
	//  - aligned-multiple: Quebrar linha quando o comprimento dela for excedido, alinhar os atributos verticalmente.
	//  - preserve: Preservar a disposição dos atributos.
	//  - preserve-aligned: Preservar quebra de linha dos atributos, mas alinhar.
	"html.format.wrapAttributes": "auto",

	// Recue atributos encapsulados para depois de N caracteres. Use `null` para usar o tamanho de recuo padrão. Ignorado se `html.format.wrapAttributes` estiver definido como ''aligned''.
	"html.format.wrapAttributesIndentSize": null,

	// Quantidade máxima de caracteres por linha (0 = desabilitar).
	"html.format.wrapLineLength": 120,

	// Mostrar a marca e a documentação de atributo durante a focalização.
	"html.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização.
	"html.hover.references": true,

	// Preterido e substituído por `editor.linkedEditing`
	// Habilitar/desabilitar cursor de espelhamento na marca HTML correspondente.
	"html.mirrorCursorOnMatchingTag": false,

	// Controla se o suporte à linguagem HTML interna sugere marcas, propriedades e valores do HTML5.
	"html.suggest.html5": true,

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem HTML.
	"html.trace.server": "off",

	// Controla se o suporte à linguagem HTML interna valida scripts incorporados.
	"html.validate.scripts": true,

	// Controla se o suporte à linguagem HTML interna valida estilos incorporados.
	"html.validate.styles": true,

	// A configuração `json.colorDecorators.enable` foi preterida em favor de `editor.colorDecorators`.
	// Habilita ou desabilita os decoradores de cor
	"json.colorDecorators.enable": true,

	// Habilitar/desabilitar o formatador JSON padrão
	"json.format.enable": true,

	// Mantenha todas as novas linhas existentes ao formatar.
	"json.format.keepLines": false,

	// O número máximo computado de símbolos de estrutura de tópicos e regiões de dobragem (limitados por motivos de desempenho).
	"json.maxItemsComputed": 5000,

	// Quando habilitados, os esquemas JSON podem ser buscados em locais http e https.
	"json.schemaDownload.enable": true,

	// Associar os esquemas aos arquivos JSON no projeto atual.
	"json.schemas": [],

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem JSON.
	"json.trace.server": "off",

	// Habilitar/desabilitar a validação JSON.
	"json.validate.enable": true,

	// Define onde os arquivos copiados criados por soltar ou colar devem ser criados. Este é um mapa de globs que correspondem no documento Markdown aos destinos.
	// 
	// Os destinos podem usar as variáveis a seguir:
	// 
	// - `${documentDirName}` — Caminho absoluto do diretório pai do documento Markdown, por exemplo, `/Users/me/myProject/docs`.
	// - `${documentRelativeDirName}` — Caminho relativo do diretório pai do documento Markdown, por exemplo `docs`. Isso será o mesmo que `${documentDirName}` se o arquivo não fizer parte de um workspace.
	// - `${documentFileName}` — O nome de arquivo completo do documento Markdown, por exemplo, `README.md`.
	// - `${documentBaseName}` — O nome base do documento Markdown, por exemplo, `README`.
	// - `${documentExtName}` — A extensão do documento Markdown, por exemplo, `md`.
	// - `${documentFilePath}` — Caminho absoluto do documento Markdown, por exemplo, `/Users/me/myProject/docs/README.md`.
	// - `${documentRelativeFilePath}` — Caminho relativo do documento Markdown, por exemplo, `docs/README.md`. Isso será o mesmo que `${documentFilePath}` se o arquivo não fizer parte de um workspace.
	// - `${documentWorkspaceFolder}` — A pasta de workspace do documento Markdown, por exemplo, `/Users/me/myProject`. Isso será o mesmo que `${documentDirName}` se o arquivo não fizer parte de um workspace.
	// - `${fileName}` — O nome do arquivo descartado, por exemplo, `image.png`.
	// - `${fileExtName}` — A extensão do arquivo descartado, por exemplo, `png`.
	"markdown.copyFiles.destination": {},

	// Controla se os arquivos criados por soltar ou colar devem substituir os arquivos existentes.
	//  - nameIncrementally: Se já existir um arquivo com o mesmo nome, acrescente um número ao nome do arquivo, por exemplo: `image.png` torna-se `image-1.png`.
	//  - overwrite: Se já existir um arquivo com o mesmo nome, substitua-o.
	"markdown.copyFiles.overwriteBehavior": "nameIncrementally",

	// Controla se os arquivos fora do workspace que são soltos em um editor Markdown devem ser copiados para o workspace.
	// 
	// Use `markdown.copyFiles.destination` para configurar onde os arquivos descartados copiados devem ser criados
	//  - mediaFiles: Tente copiar arquivos externos de imagem e vídeo para o workspace.
	//  - never: Não copie arquivos externos para o workspace.
	"markdown.editor.drop.copyIntoWorkspace": "mediaFiles",

	// Habilite a opção de soltar arquivos em um Markdown editor ao pressionar a tecla Shift. Requer habilitar `editor.dropIntoEditor.enabled`.
	//  - always: Always insert Markdown links.
	//  - smart: Smartly create Markdown links by default when not dropping into a code block or other special element. Use the drop widget to switch between pasting as plain text or as Markdown links.
	//  - never: Never create Markdown links.
	"markdown.editor.drop.enabled": "smart",

	// Snippet usado ao adicionar áudio ao Markdown. Esse snippet pode usar as seguintes variáveis:
	// - `${src}` — O caminho resolvido do arquivo de  áudio.
	// - `${title}` — O título usado para o áudio. Um espaço reservado de snippet será criado automaticamente para esta variável.
	"markdown.editor.filePaste.audioSnippet": "<audio controls src=\"${src}\" title=\"${title}\"></audio>",

	// Controla se os arquivos fora do workspace que são colados em um editor Markdown devem ser copiados para o workspace.
	// 
	// Use `markdown.copyFiles.destination` para configurar onde os arquivos copiados devem ser criados.
	//  - mediaFiles: Tente copiar arquivos externos de imagem e vídeo para o workspace.
	//  - never: Não copie arquivos externos para o workspace.
	"markdown.editor.filePaste.copyIntoWorkspace": "mediaFiles",

	// Ative a colagem de arquivos em um editor Markdown para criar links Markdown. Requer ativar `editor.pasteAs.enabled`.
	//  - always: Always insert Markdown links.
	//  - smart: Smartly create Markdown links by default when not pasting into a code block or other special element. Use the paste widget to switch between pasting as plain text or as Markdown links.
	//  - never: Never create Markdown links.
	"markdown.editor.filePaste.enabled": "smart",

	// Snippet usado ao adicionar vídeos ao Markdown. Esse snippet pode usar as seguintes variáveis:
	// - “${src}” — O caminho resolvido do arquivo de vídeo.
	// - `${title}` — O título usado para o vídeo. Um espaço reservado de snippet será criado automaticamente para esta variável.
	"markdown.editor.filePaste.videoSnippet": "<video controls src=\"${src}\" title=\"${title}\"></video>",

	// Controla se os links Markdown são criados quando os URLs são colados em um editor Markdown. Requer a habilitação de `editor.pasteAs.enabled`.
	//  - always: Sempre inserir links Markdown.
	//  - smart: Crie links Markdown de forma inteligente por padrão quando não estiver colando em um bloco de código ou outro elemento especial. Use o widget de colagem para alternar entre colar como texto sem formatação ou como links markdown.
	//  - smartWithSelection: Crie links Markdown de forma inteligente por padrão quando você seleciona o texto e não cola em um bloco de código ou outro elemento especial. Use o widget colar para alternar entre colar como texto simples ou como links Markdown.
	//  - never: Nunca crie links Markdown.
	"markdown.editor.pasteUrlAsFormattedLink.enabled": "smartWithSelection",

	// Controla se os links nos arquivos Markdown devem ser abertos.
	//  - currentGroup: Abrir links no grupo do editor ativo.
	//  - beside: Abrir links ao lado do editor ativo.
	"markdown.links.openLocation": "currentGroup",

	// Habilitar o realce de ocorrências de link no documento atual.
	"markdown.occurrencesHighlight.enabled": false,

	// Controla se extensões de arquivo (por exemplo `.md`) são adicionadas ou não para links em arquivos Markdown. Essa configuração é usada quando caminhos de arquivo são adicionados por ferramentas como conclusão de caminho ou renomeação de arquivo.
	//  - auto: Para caminhos existentes, tente manter o estilo de extensão de arquivo. Para novos caminhos, adicione extensões de arquivo.
	//  - includeExtension: Prefira incluir a extensão do arquivo. Por exemplo, conclusões de caminho para um arquivo chamado `file.md` irão inserir `file.md`.
	//  - removeExtension: Prefira remover a extensão do arquivo. Por exemplo, conclusões de caminho para um arquivo chamado `file.md` irão inserir `file` sem o `.md`.
	"markdown.preferredMdPathExtensionStyle": "auto",

	// Define como as quebras de linha são renderizadas na visualização de Markdown. Defini-lo como `true` cria um `<br>` para novas linhas dentro de parágrafos.
	"markdown.preview.breaks": false,

	// Clique duas vezes na visualização Markdown para alternar para o editor.
	"markdown.preview.doubleClickToSwitchToEditor": true,

	// Controla a família de fontes usada na visualização de Markdown.
	"markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",

	// Controla o tamanho da fonte em pixels usado na visualização de Markdown.
	"markdown.preview.fontSize": 14,

	// Controla a altura da linha usada na visualização de Markdown. Este número é relativo ao tamanho da fonte.
	"markdown.preview.lineHeight": 1.6,

	// Conversão de texto do tipo URL para links na visualização de Markdown.
	"markdown.preview.linkify": true,

	// Marcar a seleção do editor atual na visualização de Markdown.
	"markdown.preview.markEditorSelection": true,

	// Controla como os links para outros arquivos Markdown na visualização de Markdown devem ser abertos.
	//  - inPreview: Tentar abrir links na visualização de Markdown.
	//  - inEditor: Tentar abrir links no editor.
	"markdown.preview.openMarkdownLinks": "inPreview",

	// Quando uma visualização de Markdown for rolada, atualizar a exibição do editor.
	"markdown.preview.scrollEditorWithPreview": true,

	// Quando um Markdown editor for rolado, atualizar a exibição da visualização.
	"markdown.preview.scrollPreviewWithEditor": true,

	// Habilitar algumas substituições com neutralidade de linguagem e o aperfeiçoamento de citações na visualização de Markdown.
	"markdown.preview.typographer": false,

	// Controla o nível de registros em log do servidor de linguagem Markdown.
	"markdown.server.log": "off",

	// Uma lista de URLs ou caminhos locais para folhas de estilos CSS que serão usados na visualização do Markdown. Os caminhos relativos são interpretados em relação à pasta aberta no Explorer. Se não houver pastas abertas, eles serão interpretados em relação à localização do arquivo Markdown. Todos os '\' precisam ser escritos como '\\'.
	"markdown.styles": [],

	// Habilitar sugestões de caminho ao escrever links em arquivos Markdown.
	"markdown.suggest.paths.enabled": true,

	// Habilite sugestões para cabeçalhos em outros arquivos Markdown no workspace atual. Aceitar uma dessas sugestões insere o caminho completo para o cabeçalho nesse arquivo, por exemplo: `[texto do link](/caminho/para/arquivo.md#cabeçalho)`.
	//  - never: Desativar as sugestões de cabeçalho do espaço de trabalho.
	//  - onDoubleHash: Habilite as sugestões de cabeçalho do workspace após digitar `#` em um caminho, por exemplo: `[texto do link](#`.
	//  - onSingleOrDoubleHash: Habilite as sugestões de cabeçalho do workspace depois de digitar `#` ou `#` em um caminho, por exemplo: `[texto do link](#` ou `[texto do link](#`.
	"markdown.suggest.paths.includeWorkspaceHeaderCompletions": "onDoubleHash",

	// Habilitar o registro em log da depuração para a extensão de Markdown.
	"markdown.trace.extension": "off",

	// Traça a comunicação entre o VS Code e o servidor de linguagem Markdown.
	"markdown.trace.server": "off",

	// Tente atualizar links em arquivos Markdown quando um arquivo for renomeado/movido no workspace. Use `markdown.updateLinksOnFileMove.include` para configurar quais arquivos disparam atualizações de links.
	//  - prompt: Avisar sobre cada movimentação de arquivo.
	//  - always: Sempre atualize os links automaticamente.
	//  - never: Nunca tente atualizar o link e não avisar.
	"markdown.updateLinksOnFileMove.enabled": "never",

	// Habilitar links de atualização quando um diretório for movido ou renomeado no workspace.
	"markdown.updateLinksOnFileMove.enableForDirectories": true,

	// Padrões glob que especificam quais arquivos disparam atualizações automáticas de link. Consulte `markdown.updateLinksOnFileMove.enabled` para obter detalhes sobre esse recurso.
	"markdown.updateLinksOnFileMove.include": [
		"**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
		"**/*.{jpg,jpe,jpeg,png,bmp,gif,ico,webp,avif,tiff,svg,mp4}"
	],

	// Validar definições duplicadas no arquivo atual.
	"markdown.validate.duplicateLinkDefinitions.enabled": "warning",

	// Habilitar todos os relatórios de erros em arquivos Markdown.
	"markdown.validate.enabled": false,

	// Valide links para outros arquivos em arquivos Markdown, por exemplo, `[link](/path/to/file.md)`. Isso verifica se os arquivos de destino existem. Requer a ativação de `markdown.validate.enabled`.
	"markdown.validate.fileLinks.enabled": "warning",

	// Valide a parte do fragmento de links para cabeçalhos em outros arquivos em arquivos Markdown, por exemplo: `[link](/path/to/file.md#header)`. Herda o valor de configuração de `markdown.validate.fragmentLinks.enabled` por padrão.
	"markdown.validate.fileLinks.markdownFragmentLinks": "inherit",

	// Valide links de fragmentos para cabeçalhos no arquivo Markdown atual, por exemplo: `[link](#header)`. Requer ativar `markdown.validate.enabled`.
	"markdown.validate.fragmentLinks.enabled": "warning",

	// Configure links que não devem ser validados. Por exemplo, adicionar `/about` não validaria o link `[about](/about)`, enquanto o glob `/assets/**/*.svg` permitiria que você pule a validação de qualquer link para arquivos `.svg` no diretório `assets`.
	"markdown.validate.ignoredLinks": [],

	// Valide links de referência em arquivos Markdown, por exemplo: `[link][ref]`. Requer ativar `markdown.validate.enabled`.
	"markdown.validate.referenceLinks.enabled": "warning",

	// Valide as definições de link que não são usadas no arquivo atual.
	"markdown.validate.unusedLinkDefinitions.enabled": "hint",

	// Controla se as sugestões de linguagem do PHP internas estão habilitadas. O suporte sugere variáveis e globais do PHP.
	"php.suggest.basic": true,

	// Habilitar/desabilitar a validação interna do PHP.
	"php.validate.enable": true,

	// Aponta para o executável do PHP.
	"php.validate.executablePath": null,

	// Se o linter é executado ao salvar ou no tipo.
	"php.validate.run": "onSave",

	// Please use 'java.import.generatesMetadataFilesAtProjectRoot' to control whether to generate the project metadata files at the project root. And use 'files.exclude' to control whether to hide the project metadata files from the file explorer.
	// Controls whether to exclude extension-generated project settings files (.project, .classpath, .factorypath, .settings/) from the file explorer.
	"java.configuration.checkProjectSettingsExclusions": false,

	// Specifies how modifications on build files update the Java classpath/configuration
	"java.configuration.updateBuildConfiguration": "interactive",

	// Configure glob patterns for excluding folders. Use `!` to negate patterns to allow subfolders imports. You have to include a parent directory. The order is important.
	"java.import.exclusions": [
		"**/node_modules/**",
		"**/.metadata/**",
		"**/archetype-resources/**",
		"**/META-INF/maven/**"
	],

	// Specify whether the project metadata files(.project, .classpath, .factorypath, .settings/) will be generated at the project root. Click [HERE](command:_java.metadataFilesGeneration) to learn how to change the setting to make it take effect.
	"java.import.generatesMetadataFilesAtProjectRoot": false,

	// [Experimental] Specifies how to select build configuration files to import. 
	// Note: Currently, `Gradle` projects cannot be partially imported.
	//  - manual: Manually select the build configuration files.
	//  - automatic: Let extension automatically scan and select the build configuration files.
	"java.import.projectSelection": "automatic",

	// Project encoding settings
	//  - ignore: Ignore project encoding settings
	//  - warning: Show warning if a project has no explicit encoding set
	//  - setDefault: Set the default workspace encoding settings
	"java.project.encoding": "ignore",

	// Enable/disable the server-mode switch information, when Java projects import is skipped on startup.
	"java.project.importHint": true,

	// Specifies whether to import the Java projects, when opening the folder in Hybrid mode for the first time.
	"java.project.importOnFirstTimeStartup": "automatic",

	// Excludes files and folders from being refreshed by the Java Language Server, which can improve the overall performance. For example, ["node_modules","\.git"] will exclude all files and folders named `node_modules` or `.git`. Pattern expressions must be compatible with `java.util.regex.Pattern`. Defaults to ["node_modules","\.git"].
	"java.project.resourceFilters": [
		"node_modules",
		"\\.git"
	],

	// Automatically show build status on startup.
	"java.showBuildStatusOnStart.enabled": "notification",

	// Habilitar/desabilitar o fechamento automático de marcas JSX.
	"javascript.autoClosingTags": true,

	// Habilitar/desabilitar o formatador padrão do JavaScript.
	"javascript.format.enable": true,

	// Define o tratamento de espaço após um delimitador de vírgula.
	"javascript.format.insertSpaceAfterCommaDelimiter": true,

	// Define o tratamento de espaço após a palavra-chave do construtor.
	"javascript.format.insertSpaceAfterConstructor": false,

	// Define o tratamento de espaço após a palavra-chave de função para funções anônimas.
	"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.
	"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Define o tratamento de espaço após abrir e antes de fechar chaves vazias.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

	// Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

	// Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

	// Define o tratamento de espaço após um ponto e vírgula em uma instrução for.
	"javascript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Define o tratamento de espaço após um operador binário.
	"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Define o tratamento de espaço antes dos parênteses do argumento de função.
	"javascript.format.insertSpaceBeforeFunctionParenthesis": false,

	// Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Define se uma chave de abertura é colocada em uma nova linha para funções.
	"javascript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Define a manipulação de ponto e vírgulas opcionais.
	//  - ignore: Não inserir nem remover pontos e vírgulas.
	//  - insert: Inserir pontos e vírgulas nos finais da instrução.
	//  - remove: Remover sinais de ponto e vírgula desnecessários.
	"javascript.format.semicolons": "ignore",

	// Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.checkJs`.
	// Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"javascript.implicitProjectConfig.checkJs": false,

	// Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.experimentalDecorators`.
	// Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"javascript.implicitProjectConfig.experimentalDecorators": false,

	// Habilitar/desabilitar dicas embutidas para valores de membro em declarações de enumeração:
	// ''''typescript
	// 
	// enum MyValue {
	//  A /* = 0 */;
	// 	B /* = 1 */;
	// }
	// 
	//  ```
	"javascript.inlayHints.enumMemberValues.enabled": false,

	// Habilitar/desabilitar dicas embutidas para tipos de retorno implícitos em assinaturas de função:
	// '''função typescript
	// 
	// foo() /* :number */ { return
	//  Date.now();} 
	// 
	// 
	//  ```
	"javascript.inlayHints.functionLikeReturnTypes.enabled": false,

	// Habilitar/desabilitar dicas embutidas para nomes de parâmetro:
	// '''typescript
	// 
	// parseInt(/* str: */ '123', /* radix: */ 8)
	// 
	// '''
	//  - none: Desabilite as dicas de nome de parâmetro.
	//  - literals: Habilite dicas de nome de parâmetro apenas para argumentos literais.
	//  - all: Habilite dicas de nome de parâmetro para argumentos literais e não literais.
	"javascript.inlayHints.parameterNames.enabled": "none",

	// Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.
	"javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

	// Habilitar/desabilitar dicas embutidas para tipos de parâmetro implícitos:
	// '''typescript
	// 
	// el.addEventListener('click', e /* :MouseEvent */ =>...)
	// 
	//  ```
	"javascript.inlayHints.parameterTypes.enabled": false,

	// Habilitar/desabilitar dicas embutidas para tipos implícitos em declarações de propriedade:
	// '''classe typescript
	// 
	// Foo {
	//  prop /* :number */ = Date.now();}
	// 
	// 
	//  ```
	"javascript.inlayHints.propertyDeclarationTypes.enabled": false,

	// Habilitar/desabilitar dicas embutidas para tipos de variáveis implícitas:
	// '''typescript
	// 
	// const foo /* :number */ = Date.now();
	// 
	//  ```
	"javascript.inlayHints.variableTypes.enabled": false,

	// Suprime dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo.
	"javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

	// Especifique padrões globais de arquivos a serem excluídos das importações automáticas. Os caminhos relativos são resolvidos em relação à raiz do espaço de trabalho. Os padrões são avaliados usando a semântica tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).
	"javascript.preferences.autoImportFileExcludePatterns": [],

	// Estilo de caminho preferencial para importações automáticas.
	//  - shortest: Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.
	//  - relative: Prefere um caminho relativo para o local do arquivo importado.
	//  - non-relative: Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.
	//  - project-relative: Prefere usar uma importação não relativa somente se o caminho da importação relativa sai do pacote ou do diretório do projeto.
	"javascript.preferences.importModuleSpecifier": "shortest",

	// Terminação de caminho preferencial para importações automáticas.
	//  - auto: Usar as configurações do projeto para selecionar um padrão.
	//  - minimal: Encurtar `./component/index.js` para `./component`.
	//  - index: Encurtar `./component/index.js` para `./component/index`.
	//  - js: Não encurtar as terminações de caminho; incluem a extensão '.js' ou '.ts'.
	"javascript.preferences.importModuleSpecifierEnding": "auto",

	// Estilo preferido para conclusões de atributos JSX.
	//  - auto: Insira `={}` ou `=""` após os nomes dos atributos com base no tipo de prop. Consulte `javascript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.
	//  - braces: Insira `= {} `após os nomes dos atributos.
	//  - none: Insira apenas nomes de atributos.
	"javascript.preferences.jsxAttributeCompletionStyle": "auto",

	// Estilo de citação preferencial a ser usado para Correções Rápidas.
	//  - auto: Inferir o tipo de cotação do código existente
	//  - single: Sempre usar aspas simples: `'`
	//  - double: Sempre usar aspas duplas: `"`
	"javascript.preferences.quoteStyle": "auto",

	// Quando estiver em uma marca JSX, tente renomear a marca correspondente em vez de renomear o símbolo. Requer o uso do TypeScript 5.1+ no espaço de trabalho.
	"javascript.preferences.renameMatchingJsxTags": true,

	// A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'
	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação.
	"javascript.preferences.renameShorthandProperties": true,

	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação.
	"javascript.preferences.useAliasesForRenames": true,

	// Faz com que Ir para a Definição evite arquivos de declaração de tipo sempre que possível, disparando Ir para a Definição de Origem em vez disso. Isso permite que Ir para a Definição de Origem seja acionado com o gesto do mouse.
	"javascript.preferGoToSourceDefinition": false,

	// Habilitar/desabilitar CodeLens de referências em arquivos JavaScript.
	"javascript.referencesCodeLens.enabled": false,

	// Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos JavaScript.
	"javascript.referencesCodeLens.showOnAllFunctions": false,

	// Habilitar/desabilitar sugestões de importação automática.
	"javascript.suggest.autoImports": true,

	// Habilitar/desabilitar preenchimentos de snippet para membros de classe.
	"javascript.suggest.classMemberSnippets.enabled": true,

	// Concluir funções com assinaturas de parâmetro.
	"javascript.suggest.completeFunctionCalls": false,

	// Habilitar/desabilitar sugestão para concluir comentários JSDoc.
	"javascript.suggest.completeJSDocs": true,

	// Habilitar/desabilitar sugestões de preenchimento automático.
	"javascript.suggest.enabled": true,

	// Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Requer que verificações de nulo estrito sejam habilitadas.
	"javascript.suggest.includeAutomaticOptionalChainCompletions": true,

	// Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial.
	"javascript.suggest.includeCompletionsForImportStatements": true,

	// Habilitar/desabilitar a geração de anotações '@returns' para modelos JSDoc.
	"javascript.suggest.jsdoc.generateReturns": true,

	// Habilitar/desabilitar incluindo nomes exclusivos do arquivo em sugestões do JavaScript. Observe que as sugestões de nome sempre são desabilitadas no código do JavaScript que é verificado semanticamente usando `@ts-check` ou `checkJs`.
	"javascript.suggest.names": true,

	// Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.
	"javascript.suggest.paths": true,

	// Habilitar/desabilitar o diagnóstico de sugestão para arquivos JavaScript no editor.
	"javascript.suggestionActions.enabled": true,

	// Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.
	//  - prompt: Avisar em cada renomeação.
	//  - always: Sempre atualizar caminhos automaticamente.
	//  - never: Nunca renomear caminhos e não avisar.
	"javascript.updateImportsOnFileMove.enabled": "prompt",

	// Habilitar/desabilitar a validação do JavaScript.
	"javascript.validate.enable": true,

	// Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.checkJs": false,

	// Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.experimentalDecorators": false,

	// Define o sistema do módulo do programa. Ver mais: https://www.typescriptlang.org/tsconfig#module.
	"js/ts.implicitProjectConfig.module": "ESNext",

	// Habilitar/desabilitar os [tipos de função estritos](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.strictFunctionTypes": true,

	// Habilitar/desabilitar as [verificações nulas estritas](https://www.typescriptlang.org/tsconfig#strictNullChecks) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.strictNullChecks": true,

	// Defina a versão da linguagem JavaScript de destino para JavaScript emitido e inclua as declarações de biblioteca. Veja mais: https://www.typescriptlang.org/tsconfig#target.
	"js/ts.implicitProjectConfig.target": "ES2020",

	// Habilitar/desabilitar o fechamento automático de marcas JSX.
	"typescript.autoClosingTags": true,

	// Verifique se o NPM está instalado para [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
	"typescript.check.npmIsInstalled": true,

	// Desabilita [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). A aquisição automática de tipos busca pacotes `@types` do NPM para melhorar o IntelliSense para bibliotecas externas.
	"typescript.disableAutomaticTypeAcquisition": false,

	// Permite solicitar que os usuários usem a versão do TypeScript configurada no workspace para IntelliSense.
	"typescript.enablePromptUseWorkspaceTsdk": false,

	// Habilitar/desabilitar a aquisição de pacote na Web.
	"typescript.experimental.tsserver.web.typeAcquisition.enabled": false,

	// Habilitar/desabilitar o formatador do TypeScript padrão.
	"typescript.format.enable": true,

	// Recuar cláusulas de caso em instruções alternadas. Requer o uso do TypeScript 5.1+ no espaço de trabalho.
	"typescript.format.indentSwitchCase": true,

	// Define o tratamento de espaço após um delimitador de vírgula.
	"typescript.format.insertSpaceAfterCommaDelimiter": true,

	// Define o tratamento de espaço após a palavra-chave do construtor.
	"typescript.format.insertSpaceAfterConstructor": false,

	// Define o tratamento de espaço após a palavra-chave de função para funções anônimas.
	"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.
	"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Define o tratamento de espaço após abrir e antes de fechar chaves vazias.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

	// Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

	// Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

	// Define o tratamento de espaço após um ponto e vírgula em uma instrução for.
	"typescript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Define o tratamento de espaços após declarações de tipo no TypeScript.
	"typescript.format.insertSpaceAfterTypeAssertion": false,

	// Define o tratamento de espaço após um operador binário.
	"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Define o tratamento de espaço antes dos parênteses do argumento de função.
	"typescript.format.insertSpaceBeforeFunctionParenthesis": false,

	// Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.
	"typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Define se uma chave de abertura é colocada em uma nova linha para funções.
	"typescript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Define a manipulação de ponto e vírgulas opcionais.
	//  - ignore: Não inserir nem remover pontos e vírgulas.
	//  - insert: Inserir pontos e vírgulas nos finais da instrução.
	//  - remove: Remover sinais de ponto e vírgula desnecessários.
	"typescript.format.semicolons": "ignore",

	// Habilitar/desabilitar CodeLens de implementações. Este CodeLens mostra os implementadores de uma interface.
	"typescript.implementationsCodeLens.enabled": false,

	// Habilitar/desabilitar implementações do CodeLens em métodos de interface.
	"typescript.implementationsCodeLens.showOnInterfaceMethods": false,

	// Habilitar/desabilitar dicas embutidas para valores de membro em declarações de enumeração:
	// ''''typescript
	// 
	// enum MyValue {
	//  A /* = 0 */;
	// 	B /* = 1 */;
	// }
	// 
	//  ```
	"typescript.inlayHints.enumMemberValues.enabled": false,

	// Habilitar/desabilitar dicas embutidas para tipos de retorno implícitos em assinaturas de função:
	// '''função typescript
	// 
	// foo() /* :number */ { return
	//  Date.now();} 
	// 
	// 
	//  ```
	"typescript.inlayHints.functionLikeReturnTypes.enabled": false,

	// Habilitar/desabilitar dicas embutidas para nomes de parâmetro:
	// '''typescript
	// 
	// parseInt(/* str: */ '123', /* radix: */ 8)
	// 
	// '''
	//  - none: Desabilite as dicas de nome de parâmetro.
	//  - literals: Habilite dicas de nome de parâmetro apenas para argumentos literais.
	//  - all: Habilite dicas de nome de parâmetro para argumentos literais e não literais.
	"typescript.inlayHints.parameterNames.enabled": "none",

	// Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.
	"typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

	// Habilitar/desabilitar dicas embutidas para tipos de parâmetro implícitos:
	// '''typescript
	// 
	// el.addEventListener('click', e /* :MouseEvent */ =>...)
	// 
	//  ```
	"typescript.inlayHints.parameterTypes.enabled": false,

	// Habilitar/desabilitar dicas embutidas para tipos implícitos em declarações de propriedade:
	// '''classe typescript
	// 
	// Foo {
	//  prop /* :number */ = Date.now();}
	// 
	// 
	//  ```
	"typescript.inlayHints.propertyDeclarationTypes.enabled": false,

	// Habilitar/desabilitar dicas embutidas para tipos de variáveis implícitas:
	// '''typescript
	// 
	// const foo /* :number */ = Date.now();
	// 
	//  ```
	"typescript.inlayHints.variableTypes.enabled": false,

	// Suprime dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo.
	"typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

	// Define a localidade usada para relatar erros de JavaScript e TypeScript. O padrão é usar a localidade do VS Code.
	//  - auto: Usar o idioma de exibição configurado do VS Code
	//  - de: Deutsch
	//  - es: español
	//  - en: English
	//  - fr: français
	//  - it: italiano
	//  - ja: 日本語
	//  - ko: 한국어
	//  - ru: русский
	//  - zh-CN: 中文(简体)
	//  - zh-TW: 中文(繁體)
	"typescript.locale": "auto",

	// Especifica o caminho para o NPM executável para [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
	"typescript.npm": "",

	// Especifique padrões globais de arquivos a serem excluídos das importações automáticas. Os caminhos relativos são resolvidos em relação à raiz do espaço de trabalho. Os padrões são avaliados usando a semântica tsconfig.json [`exclude`](https://www.typescriptlang.org/tsconfig#exclude).
	"typescript.preferences.autoImportFileExcludePatterns": [],

	// Estilo de caminho preferencial para importações automáticas.
	//  - shortest: Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.
	//  - relative: Prefere um caminho relativo para o local do arquivo importado.
	//  - non-relative: Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.
	//  - project-relative: Prefere usar uma importação não relativa somente se o caminho da importação relativa sai do pacote ou do diretório do projeto.
	"typescript.preferences.importModuleSpecifier": "shortest",

	// Terminação de caminho preferencial para importações automáticas.
	//  - auto: Usar as configurações do projeto para selecionar um padrão.
	//  - minimal: Encurtar `./component/index.js` para `./component`.
	//  - index: Encurtar `./component/index.js` para `./component/index`.
	//  - js: Não encurtar as terminações de caminho; incluem a extensão '.js' ou '.ts'.
	"typescript.preferences.importModuleSpecifierEnding": "auto",

	// Habilitar/desabilitar a pesquisa de dependências `package.json` para importações automáticas disponíveis.
	//  - auto: Pesquisar dependências com base no impacto de desempenho estimado.
	//  - on: Sempre pesquisar dependências.
	//  - off: Nunca pesquisar dependências.
	"typescript.preferences.includePackageJsonAutoImports": "auto",

	// Estilo preferido para conclusões de atributos JSX.
	//  - auto: Insira `={}` ou `=""` após os nomes dos atributos com base no tipo de prop. Consulte `typescript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.
	//  - braces: Insira `= {} `após os nomes dos atributos.
	//  - none: Insira apenas nomes de atributos.
	"typescript.preferences.jsxAttributeCompletionStyle": "auto",

	// Inclua a palavra-chave "type" em importações automáticas sempre que possível. Requer o uso de TypeScript 5.3+ no espaço de trabalho.
	"typescript.preferences.preferTypeOnlyAutoImports": false,

	// Estilo de citação preferencial a ser usado para Correções Rápidas.
	//  - auto: Inferir o tipo de cotação do código existente
	//  - single: Sempre usar aspas simples: `'`
	//  - double: Sempre usar aspas duplas: `"`
	"typescript.preferences.quoteStyle": "auto",

	// Quando estiver em uma marca JSX, tente renomear a marca correspondente em vez de renomear o símbolo. Requer o uso do TypeScript 5.1+ no espaço de trabalho.
	"typescript.preferences.renameMatchingJsxTags": true,

	// A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'
	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação.
	"typescript.preferences.renameShorthandProperties": true,

	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação.
	"typescript.preferences.useAliasesForRenames": true,

	// Faz com que Ir para a Definição evite arquivos de declaração de tipo sempre que possível, disparando Ir para a Definição de Origem em vez disso. Isso permite que Ir para a Definição de Origem seja acionado com o gesto do mouse.
	"typescript.preferGoToSourceDefinition": false,

	// Habilitar/desabilitar CodeLens de referências em arquivos TypeScript.
	"typescript.referencesCodeLens.enabled": false,

	// Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos TypeScript.
	"typescript.referencesCodeLens.showOnAllFunctions": false,

	// Relatar verificações de estilo como avisos.
	"typescript.reportStyleChecksAsWarnings": true,

	// Habilitar/desabilitar sugestões de importação automática.
	"typescript.suggest.autoImports": true,

	// Habilitar/desabilitar preenchimentos de snippet para membros de classe.
	"typescript.suggest.classMemberSnippets.enabled": true,

	// Concluir funções com assinaturas de parâmetro.
	"typescript.suggest.completeFunctionCalls": false,

	// Habilitar/desabilitar sugestão para concluir comentários JSDoc.
	"typescript.suggest.completeJSDocs": true,

	// Habilitar/desabilitar sugestões de preenchimento automático.
	"typescript.suggest.enabled": true,

	// Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Requer que verificações de nulo estrito sejam habilitadas.
	"typescript.suggest.includeAutomaticOptionalChainCompletions": true,

	// Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial.
	"typescript.suggest.includeCompletionsForImportStatements": true,

	// Habilitar/desabilitar a geração de anotações '@returns' para modelos JSDoc.
	"typescript.suggest.jsdoc.generateReturns": true,

	// Habilite/desabilite conclusões de snippet para métodos em literais de objeto.
	"typescript.suggest.objectLiteralMethodSnippets.enabled": true,

	// Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.
	"typescript.suggest.paths": true,

	// Habilitar/desabilitar diagnóstico de sugestão para arquivos TypeScript no editor.
	"typescript.suggestionActions.enabled": true,

	// Habilitar/desabilitar pesquisas ocasionais que nos ajudam a melhorar o suporte a JavaScript e TypeScript do VS Code.
	"typescript.surveys.enabled": true,

	// Controla a detecção automática de tarefas tsc.
	//  - on: Criar tarefas de build e de inspeção.
	//  - off: Desabilitar este recurso.
	//  - build: Criar apenas tarefas de compilação de execução única.
	//  - watch: Criar apenas tarefas de compilação e inspeção.
	"typescript.tsc.autoDetect": "on",

	// Especifica o caminho da pasta para os arquivos tsserver e `lib*.d.ts` em uma instalação do TypeScript a ser usada para IntelliSense, por exemplo: `./node_modules/typescript/lib`.
	// 
	// – Quando especificado como uma configuração de usuário, a versão do TypeScript de `typescript.tsdk` substitui automaticamente a versão interna do TypeScript.
	// – Quando especificado como uma configuração de workspace, `typescript.tsdk` permite mudar para o uso da versão do workspace do TypeScript para IntelliSense com o comando `TypeScript: Select TypeScript version`.
	// 
	// Confira a [documentação do TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) para obter mais detalhes sobre o gerenciamento de versões do TypeScript.
	"typescript.tsdk": "",

	// Habilita o rastreamento do desempenho do servidor TS em um diretório. Esses arquivos de rastreamento podem ser usados para diagnosticar problemas de desempenho do Servidor TS. O log pode conter caminhos de arquivo, código-fonte e outras informações possivelmente confidenciais do projeto.
	"typescript.tsserver.enableTracing": false,

	// (Experimental) Habilita o relatório de erros amplo do projeto.
	"typescript.tsserver.experimental.enableProjectDiagnostics": false,

	// Habilita o registro em log do TS Server em um arquivo. Esse log pode ser usado para diagnosticar problemas do TS Server. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
	"typescript.tsserver.log": "off",

	// A quantidade máxima de memória (em MB) a ser alocada para o processo do servidor do TypeScript. Para usar um limite de memória maior que 4 GB, use '#typescript.tsserver.nodePath#' para executar o Servidor TS com uma instalação personalizada do Node.
	"typescript.tsserver.maxTsServerMemory": 3072,

	// Execute o Servidor TS em uma instalação de Nó personalizada. Isso pode ser um caminho para um executável de Nó ou 'nó' se você quiser que o VS Code detecte uma instalação de Nó.
	"typescript.tsserver.nodePath": "",

	// Caminhos adicionais para descobrir os plugins do Serviço de Linguagem TypeScript.
	"typescript.tsserver.pluginPaths": [],

	// Essa configuração foi preterida e substituída por `typescript.tsserver.useSyntaxServer`.
	// Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente às operações relacionadas à sintaxe, como calcular a dobragem ou computar os símbolos de documentos.
	"typescript.tsserver.useSeparateSyntaxServer": true,

	// Controla se TypeScript inicia um servidor dedicado para lidar mais rapidamente com as operações relacionadas à sintaxe, como o dobramento de código de computação.
	//  - always: Use um servidor de sintaxe mais leve para lidar com todas as operações do IntelliSense. Este servidor de sintaxe só pode fornecer IntelliSense para arquivos abertos.
	//  - never: Não use um servidor de sintaxe dedicado. Use um único servidor para lidar com todas as operações do IntelliSense.
	//  - auto: Gere um servidor completo e um servidor mais leve dedicado às operações de sintaxe. O servidor de sintaxe é usado para acelerar as operações de sintaxe e fornecer IntelliSense durante o carregamento de projetos.
	"typescript.tsserver.useSyntaxServer": "auto",

	// Configurar as estratégias de monitoramento que devem ser usadas para manter o controle de arquivos e diretórios.
	"typescript.tsserver.watchOptions": {},

	// Habilitar/desabilitar o IntelliSense de todo o projeto na Web. Requer que o VS Code esteja sendo executado em um contexto confiável.
	"typescript.tsserver.web.projectWideIntellisense.enabled": true,

	// Suprime erros semânticos. Isso é necessário ao usar pacotes externos, pois eles não podem ser incluídos e analisados na web.
	"typescript.tsserver.web.projectWideIntellisense.suppressSemanticErrors": true,

	// Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.
	//  - prompt: Avisar em cada renomeação.
	//  - always: Sempre atualizar caminhos automaticamente.
	//  - never: Nunca renomear caminhos e não avisar.
	"typescript.updateImportsOnFileMove.enabled": "prompt",

	// Habilitar/desabilitar a validação do TypeScript.
	"typescript.validate.enable": true,

	// Exclui símbolos provenientes de arquivos de biblioteca nos resultados Ir para Símbolo no Espaço de Trabalho. Requer o uso de TypeScript 5.3+ no espaço de trabalho.
	"typescript.workspaceSymbols.excludeLibrarySymbols": true,

	// Controla quais arquivos são pesquisados por [ir para o símbolo no workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).
	//  - allOpenProjects: Pesquise símbolos em todos os projetos JavaScript ou TypeScript abertos.
	//  - currentProject: Somente pesquisar símbolos no projeto JavaScript ou TypeScript atual.
	"typescript.workspaceSymbols.scope": "allOpenProjects",

	// Sempre revele o teste executado quando `testing.followRunningTest` estiver ativado. Se esta configuração estiver desativada, apenas os testes com falha serão revelados.
	"testing.alwaysRevealTestOnStateChange": false,

	// Configura quando a exibição de espiada de erros será aberta automaticamente.
	//  - failureAnywhere: Abrir a exibição automaticamente independentemente do local da falha.
	//  - failureInVisibleDocument: Abrir a exibição automaticamente quando um teste falhar em um documento visível.
	//  - never: Nunca abre automaticamente.
	"testing.automaticallyOpenPeekView": "failureInVisibleDocument",

	// Controla se a exibição de espiada será aberta automaticamente durante o modo de execução contínua.
	"testing.automaticallyOpenPeekViewDuringAutoRun": false,

	// O tempo de espera, em milissegundos, depois que um teste é marcado como desatualizado até que uma nova execução seja iniciada.
	"testing.autoRun.delay": 1000,

	// Controla o selo de contagem no ícone Teste na Barra de atividades.
	//  - failed: Mostrar o número de testes com falha
	//  - off: Desabilitar o selo de contagem de testes
	//  - passed: Mostrar o número de testes aprovados
	//  - skipped: Mostrar o número de testes ignorados
	"testing.countBadge": "failed",

	// Configura as cores usadas para porcentagens nas barras de cobertura de teste.
	"testing.coverageBarThresholds": {
		"red": 0,
		"yellow": 60,
		"green": 90
	},

	// Controla a ação a ser executada ao clicar com o botão esquerdo em uma decoração de teste na medianiz.
	//  - run: Execute o teste.
	//  - debug: Depure o teste.
	//  - runWithCoverage: Execute o teste com cobertura.
	//  - contextMenu: Abra o menu de contexto para mais opções.
	"testing.defaultGutterClickAction": "run",

	// Configura qual porcentagem é exibida por padrão para cobertura de teste.
	//  - totalCoverage: Um cálculo da cobertura combinada de instrução, função e ramificação.
	//  - statement: A cobertura da instrução.
	//  - minimum: O mínimo de cobertura de instrução, função e ramificação.
	"testing.displayedCoveragePercent": "totalCoverage",

	// Controla se o teste em execução deverá ser seguido na exibição do Explorador de Teste.
	"testing.followRunningTest": true,

	// Controla se as decorações de teste são mostradas na calha do editor.
	"testing.gutterEnabled": true,

	// Controla quando a exibição de teste deve ser aberta.
	//  - neverOpen: Nunca abrir automaticamente o modo de exibição de teste
	//  - openOnTestStart: Abrir o modo de exibição de teste quando os testes forem iniciados
	//  - openOnTestFailure: Abrir a exibição de resultado do teste em qualquer falha de teste
	//  - openExplorerOnTestStart: Abrir o explorador de testes quando os testes iniciarem
	"testing.openTesting": "openOnTestStart",

	// Controle se todos os editores sujos foram salvos antes de executar um teste.
	"testing.saveBeforeTest": true,

	// Controla se as mensagens de todas as execuções de teste devem ser exibidas.
	"testing.showAllMessages": false,

	// Se a cobertura de teste deve estar inoperante na exibição do Explorador de Arquivos.
	"testing.showCoverageInExplorer": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"css.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"css.completion.triggerPropertyValueCompletion": true,

	// Uma lista de caminhos de arquivo relativos apontando para arquivos JSON após o [formato de dados personalizado](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).
	// 
	// O VS Code carrega dados personalizados na inicialização para aprimorar seu suporte CSS para propriedades personalizadas CSS (variáveis), em regras, pseudoclasses e pseudoelementos especificados nos arquivos JSON.
	// 
	// Os caminhos do arquivo são relativos ao workspace e somente as configurações da pasta do espaço de trabalho são consideradas.
	"css.customData": [],

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"css.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador CSS padrão.
	"css.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `css.format.preserveNewLines` estiver habilitado.
	"css.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"css.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"css.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"css.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"css.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de propriedade e valor em focos do CSS.
	"css.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do CSS.
	"css.hover.references": true,

	// Número de parâmetros inválido.
	"css.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"css.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"css.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"css.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"css.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"css.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"css.lint.fontFaceProperties": "warning",

	// As cores hexadecimais devem consistir em 3, 4, 6 ou 8 números hexadecimais.
	"css.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"css.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"css.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"css.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"css.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"css.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"css.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"css.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"css.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"css.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"css.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"css.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"css.lint.zeroUnits": "ignore",

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem CSS.
	"css.trace.server": "off",

	// Habilita ou desabilita todas as validações.
	"css.validate": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"less.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"less.completion.triggerPropertyValueCompletion": true,

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"less.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador LESS padrão.
	"less.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `less.format.preserveNewLines` estiver habilitado.
	"less.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"less.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"less.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"less.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"less.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de propriedade e valor em focos do LESS.
	"less.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do LESS.
	"less.hover.references": true,

	// Número de parâmetros inválido.
	"less.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"less.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"less.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"less.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"less.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"less.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"less.lint.fontFaceProperties": "warning",

	// As cores hexadecimais devem consistir em 3, 4, 6 ou 8 números hexadecimais.
	"less.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"less.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"less.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"less.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"less.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"less.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"less.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"less.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"less.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"less.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"less.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"less.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"less.lint.zeroUnits": "ignore",

	// Habilita ou desabilita todas as validações.
	"less.validate": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"scss.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"scss.completion.triggerPropertyValueCompletion": true,

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"scss.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador SCSS padrão.
	"scss.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `scss.format.preserveNewLines` estiver habilitado.
	"scss.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"scss.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"scss.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"scss.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"scss.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de propriedade e valor em focos do SCSS.
	"scss.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do SCSS.
	"scss.hover.references": true,

	// Número de parâmetros inválido.
	"scss.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"scss.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"scss.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"scss.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"scss.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"scss.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"scss.lint.fontFaceProperties": "warning",

	// As cores hexadecimais devem consistir em 3, 4, 6 ou 8 números hexadecimais.
	"scss.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"scss.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"scss.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"scss.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"scss.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"scss.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"scss.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"scss.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"scss.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"scss.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"scss.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"scss.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"scss.lint.zeroUnits": "ignore",

	// Habilita ou desabilita todas as validações.
	"scss.validate": true,

	// Quando habilitado, verifica automaticamente as extensões quanto a atualizações. Se uma extensão tiver uma atualização, ela será marcada como desatualizada no modo de exibição de Extensões. As atualizações são buscadas em um serviço online da Microsoft.
	"extensions.autoCheckUpdates": true,

	// Controla o comportamento de atualização automática das extensões. As atualizações são buscadas em um serviço online Microsoft.
	//  - true: Baixe e instale atualizações automaticamente para todas as extensões, exceto aquelas que são ignoradas.
	//  - onlyEnabledExtensions: Baixe e instale atualizações automaticamente apenas para extensões habilitadas, exceto se essas atualizações forem ignoradas. Extensões desabilitadas não são atualizadas automaticamente.
	//  - onlySelectedExtensions: Baixe e instale as atualizações automaticamente somente para extensões selecionadas.
	//  - false: As extensões não são atualizadas automaticamente.
	"extensions.autoUpdate": true,

	// Quando habilitados, os editores com detalhes de extensão são fechados automaticamente ao navegar para fora do modo de exibição de Extensões.
	"extensions.closeExtensionDetailsOnViewChange": false,

	// Quando uma extensão for listada aqui, um prompt de confirmação não será exibido quando essa extensão lidar com um URI.
	"extensions.confirmedUriHandlerExtensionIds": [],

	// Configure uma extensão a ser executada em um processo de host de extensão diferente.
	"extensions.experimental.affinity": {},

	// Quando habilitadas, as extensões que declararem o evento de ativação `onStartupFinished` serão ativadas após um tempo limite.
	"extensions.experimental.deferredStartupFinishedActivation": false,

	// When enabled, extensions can be searched for via Quick Access and report issues from there.
	"extensions.experimental.issueQuickAccess": true,

	// Quando habilitadas, as notificações para as recomendações de extensão não serão mostradas.
	"extensions.ignoreRecommendations": false,

	// Esta configuração foi preterida. Use a configuração extensions.ignoreRecommendations para controlar as notificações de recomendação. Use as ações de visibilidade da exibição de Extensões para ocultar a exibição Recomendado por padrão.
	// 
	"extensions.showRecommendationsOnlyOnDemand": false,

	// Ignora o suporte do espaço de trabalho não confiável de uma extensão. As extensões que usam 'true' sempre serão habilitadas. As extensões que usam 'limited' sempre serão habilitadas e a extensão ocultará a funcionalidade que exige confiança. As extensões que usam 'false' só serão habilitadas se o espaço de trabalho for confiável.
	"extensions.supportUntrustedWorkspaces": {},

	// Ignorar o suporte a espaços de trabalho virtuais de uma extensão.
	"extensions.supportVirtualWorkspaces": {},

	// Habilitar o host de extensão do web worker.
	//  - true: O Host de Extensão de Função sempre será iniciado.
	//  - false: O Host de Extensão de Função de Trabalho nunca será iniciado.
	//  - auto: O Host de Extensão de Função será iniciado quando uma extensão da web precisar dele.
	"extensions.webWorker": "auto",

	// Habilitar/desabilitar a capacidade de rolagem inteligente no modo de exibição de saída. A rolagem inteligente permite que você bloqueie a rolagem automaticamente ao clicar no modo de exibição de saída e desbloqueie ao clicar na última linha.
	"output.smartScroll.enabled": true,

	// Lista de extensões a serem ignoradas durante a sincronização. O identificador de uma extensão é sempre `${publisher}.${name}`. Por exemplo: `vscode.csharp`.
	"settingsSync.ignoredExtensions": [],

	// Configurar as configurações a serem ignoradas durante a sincronização.
	"settingsSync.ignoredSettings": [],

	// Sincronizar as associações de teclas para cada plataforma.
	"settingsSync.keybindingsPerPlatform": true,

	// A relative path to the workspace where stores the compiled output. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.
	"java.project.outputPath": "",

	// Configure glob patterns for referencing local libraries to a Java project.
	"java.project.referencedLibraries": [
		"lib/**/*.jar"
	],

	// Relative paths to the workspace where stores the source files. `Only` effective in the `WORKSPACE` scope. The setting will `NOT` affect Maven or Gradle project.
	"java.project.sourcePaths": [],

	// Specifies default mojo execution action when no associated metadata can be detected.
	"java.configuration.maven.defaultMojoExecutionAction": "ignore",

	// Path to Maven's global settings.xml
	"java.configuration.maven.globalSettings": null,

	// Path to Maven's lifecycle mappings xml
	"java.configuration.maven.lifecycleMappings": null,

	// Specifies severity if the plugin execution is not covered by Maven build lifecycle.
	"java.configuration.maven.notCoveredPluginExecutionSeverity": "warning",

	// Path to Maven's user settings.xml
	"java.configuration.maven.userSettings": null,

	// Enable/disable test classpath segregation. When enabled, this permits the usage of test resources within a Maven project as dependencies within the compile scope of other projects.
	"java.import.maven.disableTestClasspathFlag": false,

	// Enable/disable the Maven importer.
	"java.import.maven.enabled": true,

	// Enable/disable the Maven offline mode.
	"java.import.maven.offline.enabled": false,

	// Enable/disable download of Maven source artifacts as part of importing Maven projects.
	"java.maven.downloadSources": false,

	// Force update of Snapshots/Releases.
	"java.maven.updateSnapshots": false,

	// Enable/disable the annotation processing on Gradle projects and delegate Annotation Processing to JDT APT. Only works for Gradle 5.2 or higher.
	"java.import.gradle.annotationProcessing.enabled": true,

	// Arguments to pass to Gradle.
	"java.import.gradle.arguments": null,

	// Enable/disable the Gradle importer.
	"java.import.gradle.enabled": true,

	// Use Gradle from the specified local installation directory or GRADLE_HOME if the Gradle wrapper is missing or disabled and no 'java.import.gradle.version' is specified.
	"java.import.gradle.home": null,

	// The location to the JVM used to run the Gradle daemon.
	"java.import.gradle.java.home": null,

	// JVM arguments to pass to Gradle.
	"java.import.gradle.jvmArguments": null,

	// Enable/disable the Gradle offline mode.
	"java.import.gradle.offline.enabled": false,

	// Setting for GRADLE_USER_HOME.
	"java.import.gradle.user.home": null,

	// Use Gradle from the specific version if the Gradle wrapper is missing or disabled.
	"java.import.gradle.version": null,

	// Use Gradle from the 'gradle-wrapper.properties' file.
	"java.import.gradle.wrapper.enabled": true,

	// Defines allowed/disallowed SHA-256 checksums of Gradle Wrappers
	"java.imports.gradle.wrapper.checksums": [],

	// Enable/disable the 'auto build'
	"java.autobuild.enabled": true,

	// Specify how to enable the annotation-based null analysis.
	"java.compile.nullAnalysis.mode": "interactive",

	// Specify the Nonnull annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`
	"java.compile.nullAnalysis.nonnull": [
		"javax.annotation.Nonnull",
		"org.eclipse.jdt.annotation.NonNull",
		"org.springframework.lang.NonNull"
	],

	// Specify the NonNullByDefault annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`
	"java.compile.nullAnalysis.nonnullbydefault": [
		"javax.annotation.ParametersAreNonnullByDefault",
		"org.eclipse.jdt.annotation.NonNullByDefault",
		"org.springframework.lang.NonNullApi"
	],

	// Specify the Nullable annotation types to be used for null analysis. If more than one annotation is specified, then the topmost annotation will be used first if it exists in project dependencies. This setting will be ignored if `java.compile.nullAnalysis.mode` is set to `disabled`
	"java.compile.nullAnalysis.nullable": [
		"javax.annotation.Nullable",
		"org.eclipse.jdt.annotation.Nullable",
		"org.springframework.lang.Nullable"
	],

	// Specifies the severity of the message when the classpath is incomplete for a Java file
	"java.errors.incompleteClasspath.severity": "warning",

	// Max simultaneous project builds
	"java.maxConcurrentBuilds": 1,

	// Specifies the url or file path to the workspace Java settings. See [Setting Global Preferences](https://github.com/redhat-developer/vscode-java/wiki/Settings-Global-Preferences)
	"java.settings.url": null,

	// Automatically detect JDKs installed on local machine at startup. If you have specified the same JDK version in `java.configuration.runtimes`, the extension will use that version first.
	"java.configuration.detectJdksAtStart": true,

	// Map Java Execution Environments to local JDKs.
	"java.configuration.runtimes": [],

	// Includes the comments during code formatting.
	"java.format.comments.enabled": true,

	// Enable/disable default Java formatter
	"java.format.enabled": true,

	// Enable/disable automatic block formatting when typing `;`, `<enter>` or `}`
	"java.format.onType.enabled": true,

	// Optional formatter profile name from the Eclipse formatter settings.
	"java.format.settings.profile": null,

	// Specifies the url or file path to the [Eclipse formatter xml settings](https://github.com/redhat-developer/vscode-java/wiki/Formatter-settings).
	"java.format.settings.url": null,

	// Enable/disable chain completion support. Chain completions are only available when completions are invoked by the completions shortcut
	"java.completion.chain.enabled": false,

	// Enable/disable the collapse of overloaded methods in completion items. Overrides `java.completion.guessMethodArguments`.
	"java.completion.collapseCompletionItems": false,

	// Enable/disable code completion support
	"java.completion.enabled": true,

	// Defines a list of static members or types with static members. Content assist will propose those static members even if the import is missing.
	"java.completion.favoriteStaticMembers": [
		"org.junit.Assert.*",
		"org.junit.Assume.*",
		"org.junit.jupiter.api.Assertions.*",
		"org.junit.jupiter.api.Assumptions.*",
		"org.junit.jupiter.api.DynamicContainer.*",
		"org.junit.jupiter.api.DynamicTest.*",
		"org.mockito.Mockito.*",
		"org.mockito.ArgumentMatchers.*",
		"org.mockito.Answers.*"
	],

	// Defines the type filters. All types whose fully qualified name matches the selected filter strings will be ignored in content assist or quick fix proposals and when organizing imports. For example 'java.awt.*' will hide all types from the awt packages.
	"java.completion.filteredTypes": [
		"java.awt.*",
		"com.sun.*",
		"sun.*",
		"jdk.*",
		"org.graalvm.*",
		"io.micrometer.shaded.*"
	],

	// Specify how the arguments will be filled during completion.
	//  - auto: Use 'off' only when using Visual Studio Code - Insiders, other platform will defaults to 'insertBestGuessedArguments'.
	//  - off: Method arguments will not be inserted during completion.
	//  - insertParameterNames: The parameter names will be inserted during completion.
	//  - insertBestGuessedArguments: The best guessed arguments will be inserted during completion according to the code context.
	"java.completion.guessMethodArguments": "auto",

	// Defines the sorting order of import statements. A package or type name prefix (e.g. 'org.eclipse') is a valid entry. An import is always added to the most specific group. As a result, the empty string (e.g. '') can be used to group all other imports. Static imports are prefixed with a '#'
	"java.completion.importOrder": [
		"#",
		"java",
		"javax",
		"org",
		"com",
		""
	],

	// [Experimental] Enable/disable lazily resolving text edits for code completion.
	"java.completion.lazyResolveTextEdit.enabled": true,

	// Specify whether to match case for code completion.
	//  - firstLetter: Match case for the first letter when doing completion.
	//  - off: Do not match case when doing completion.
	"java.completion.matchCase": "firstLetter",

	// Maximum number of completion results (not including snippets).
	// `0` (the default value) disables the limit, all results are returned. In case of performance problems, consider setting a sensible limit.
	"java.completion.maxResults": 0,

	// Enable/disable postfix completion support. `editor.snippetSuggestions` can be used to customize how postfix snippets are sorted.
	"java.completion.postfix.enabled": true,

	// Enable/disable to show the description in signature help.
	"java.signatureHelp.description.enabled": false,

	// Enable/disable the signature help.
	"java.signatureHelp.enabled": true,

	// Controla se as células de código na janela interativa são recolhidas por padrão.
	"interactiveWindow.collapseCellInputCode": "fromEditor",

	// Quando as trilhas do notebook habilitadas contêm células de código.
	"notebook.breadcrumbs.showCodeCells": true,

	// Show available diagnostics for cell failures.
	"notebook.cellFailureDiagnostics": true,

	// Controla onde o indicador de foco será renderizado, ao longo das bordas de célula ou na medianiz esquerda.
	"notebook.cellFocusIndicator": "gutter",

	// Onde a barra de ferramentas da célula deve ser mostrada ou se deve ficar oculta.
	"notebook.cellToolbarLocation": {
		"default": "right"
	},

	// Se a barra de ferramentas da célula deve ser exibida ao passar o mouse ou clicar.
	"notebook.cellToolbarVisibility": "click",

	// Execute uma série de Ações de Código para um notebook ao salvar. As Ações de Código devem ser especificadas, o arquivo não deve ser salvo após o atraso e o editor não deve ser desligado. Exemplo: `"notebook.source.organizeImports": "explicit"`
	"notebook.codeActionsOnSave": {},

	// Controlar se o editor de cadernos deve ser renderizado de forma compacta. Por exemplo, quando ativado, ele irá diminuir a largura da margem esquerda.
	"notebook.compactView": true,

	// Controle se um prompt de confirmação é necessário para excluir uma célula em execução.
	"notebook.confirmDeleteRunningCell": true,

	// Controla se a ação das saídas deve ser renderizada na barra de ferramentas de saída.
	"notebook.consolidatedOutputButton": true,

	// Controla se as ações extras são mostradas em um menu suspenso próximo ao botão de execução.
	"notebook.consolidatedRunButton": false,

	// Se o editor de comparação de texto avançado deve ser usado para o notebook.
	"notebook.diff.enablePreview": true,

	// Ocultar as Diferenças de Metadados
	"notebook.diff.ignoreMetadata": false,

	// Ocultar as Diferenças de Saídas
	"notebook.diff.ignoreOutputs": false,

	// Se a régua de visão geral deve ser renderizada no editor de comparação para notebook.
	"notebook.diff.overviewRuler": false,

	// Lista de prioridades para tipos mime de saída
	"notebook.displayOrder": [],

	// Controle se o editor do bloco de anotações deve permitir a movimentação de células por meio de arrastar e soltar.
	"notebook.dragAndDropEnabled": true,

	// Configurações para editores de código usados em blocos de anotações. Isso pode ser usado para personalizar a maioria das configurações do editor.* configurações.
	"notebook.editorOptionsCustomizations": {},

	// Habilitar chat de célula experimental para blocos de anotações.
	"notebook.experimental.cellChat": false,

	// Habilita o salvamento incremental de blocos de anotações no ambiente remoto. Quando habilitado, somente as alterações no bloco de anotações são enviadas para o host da extensão, aprimorando o desempenho de grandes blocos de anotações e conexões de rede mais lentas.
	"notebook.experimental.remoteSave": false,

	// Habilite a exibição de variáveis do notebook experimental no painel de depuração.
	"notebook.experimental.variablesView": false,

	// Personalize o comportamento localizar widget para pesquisar em células do notebook. Quando a visualização de origem e marcação estiver habilitada, o Widget de Localização pesquisará o código-fonte ou a versão prévia com base no estado atual da célula.
	"notebook.find.scope": {
		"markupSource": true,
		"markupPreview": true,
		"codeSource": true,
		"codeOutput": true
	},

	// Formatar uma célula do bloco de anotações após a execução. Um formatador deve estar disponível.
	"notebook.formatOnCellExecution": false,

	// Formate um bloco de anotações ao salvar. Um formatador deve estar disponível, o arquivo não deve ser salvo após o atraso e o editor não deve estar sendo desligado.
	"notebook.formatOnSave.enabled": false,

	// Controlar se uma barra de ferramentas global deve ser renderizada dentro do editor de bloco de anotações.
	"notebook.globalToolbar": true,

	// Controle se as ações na barra de ferramentas do notebook devem renderizar o rótulo ou não.
	"notebook.globalToolbarShowLabel": "always",

	// Quando habilitada, a opção Ir para a Seleção Rápida de Símbolos exibirá símbolos de código completos do notebook, bem como cabeçalhos Markdown.
	"notebook.gotoSymbols.showAllSymbols": true,

	// Quando habilitado, insira uma nova linha final no final das células de código ao salvar um bloco de anotações.
	"notebook.insertFinalNewline": false,

	// Controlar onde as ações de inserção de célula devem aparecer.
	//  - betweenCells: Uma barra de ferramentas que aparece ao passar o mouse entre as células.
	//  - notebookToolbar: A barra de ferramentas na parte superior do editor de bloco de anotações.
	//  - both: Ambas as barras de ferramentas.
	//  - hidden: As ações de inserção não aparecem em nenhum lugar.
	"notebook.insertToolbarLocation": "both",

	// Controla a exibição de números de linha no editor de células.
	"notebook.lineNumbers": "off",

	// Controla o tamanho da fonte em pixels da marcação renderizada em notebooks. Quando definido como `0`, 120% de `editor.fontSize` é usado.
	"notebook.markup.fontSize": 0,

	// Quando habilitado, o cursor pode navegar para a célula seguinte/anterior quando o cursor atual no editor de célula está na primeira/última linha.
	"notebook.navigation.allowNavigateToSurroundingCells": true,

	// Quando habilitada, a estrutura de tópicos do notebook mostra as células do código.
	"notebook.outline.showCodeCells": false,

	// When enabled, notebook outline shows code cell symbols. Relies on `notebook.outline.showCodeCells` being enabled.
	"notebook.outline.showCodeCellSymbols": true,

	// When enabled, notebook outline will show only markdown cells containing a header.
	"notebook.outline.showMarkdownHeadersOnly": true,

	// A família de fontes do texto de saída nas células do notebook. Quando definido como vazio, o `editor.fontFamily` é usado.
	"notebook.output.fontFamily": "",

	// Tamanho da fonte para o texto de saída nas células do notebook. Quando definido como 0, `editor.fontSize` é usado.
	"notebook.output.fontSize": 0,

	// Altura da linha do texto de saída nas células do notebook.
	//  - Quando definido como 0, a altura da linha do editor é usada.
	//  - Valores entre 0 e 8 serão usados como multiplicador com o tamanho da fonte.
	//  - Valores maiores ou iguais a 8 serão utilizados como valores efetivos.
	"notebook.output.lineHeight": 0,

	// Controle se os links de caminho de arquivo devem ser desabilitados na saída das células do notebook.
	"notebook.output.linkifyFilePaths": true,

	// Renderize inicialmente as saídas do notebook em uma região rolável quando for maior que o limite.
	"notebook.output.scrolling": false,

	// Controla quantas linhas de texto são exibidas em uma saída de texto. Se `notebook.output.scrolling` estiver ativado, essa configuração é usada para determinar a altura de rolagem da saída.
	"notebook.output.textLineLimit": 30,

	// Controla se as linhas na saída devem ser encapsuladas.
	"notebook.output.wordWrap": false,

	// Experimental. Mantenha a célula focada estável enquanto as células vizinhas mudam de tamanho.
	//  - auto: Ancore a janela do visor na célula em foco dependendo do contexto, a menos que notebook.scrolling.revealCellBehavior esteja definido como none.
	//  - on: Sempre ancore o visor na célula em foco.
	//  - off: A célula em foco pode mudar conforme as células são redimensionadas.
	"notebook.scrolling.experimental.anchorToFocusedCell": "auto",

	// Até onde rolar ao revelar a próxima célula ao executar notebook.cell.executeAndSelectBelow.
	//  - fullCell: Role para revelar totalmente a próxima célula.
	//  - firstLine: Role para revelar a primeira linha da próxima célula.
	//  - none: Não role.
	"notebook.scrolling.revealNextCellOnExecute": "fullCell",

	// Especifica se a barra de status da célula deve ser mostrada.
	//  - hidden: A barra de Status da célula está sempre oculta.
	//  - visible: A barra de Status da célula está sempre visível.
	//  - visibleAfterExecute: A barra de Status da célula fica oculta até que a célula tenha sido executada. Em seguida, fica visível para exibir o status de execução.
	"notebook.showCellStatusBar": "visible",

	// Controla quando a seta dobrável do cabeçalho Markdown é exibida.
	//  - always: Os controles de dobragem estão sempre visíveis.
	//  - never: Nunca mostre os controles dobráveis e reduza o tamanho da calha.
	//  - mouseover: Os controles de dobragem são visíveis somente no mouseover.
	"notebook.showFoldingControls": "mouseover",

	// Experimental. Controle se os cabeçalhos de Rolagem Autoadesiva do bloco de anotações devem ser renderizados no editor de notebook.
	"notebook.stickyScroll.enabled": false,

	// Controle se as linhas adesivas aninhadas parecem empilhadas planas ou recuadas.
	//  - flat: As linhas adesivas aninhadas aparecem planas.
	//  - indented: As linhas adesivas aninhadas aparecem recuadas.
	"notebook.stickyScroll.mode": "indented",

	// Se deve ser usada uma pilha desfazer/refazer separada para cada célula.
	"notebook.undoRedoPerCell": true,

	// Role automaticamente a janela interativa para mostrar a saída da última instrução executada. Se esse valor for falso, a janela só rolará se a última célula já tiver sido rolada.
	"interactiveWindow.alwaysScrollOnNewCell": true,

	// Prompt to save the interactive window when it is closed. Only new interactive windows will be affected by this setting change.
	"interactiveWindow.promptToSaveOnClose": false,

	// Quando ativados, os renderizadores lentos são perfilados automaticamente
	"application.experimental.rendererProfiling": false,

	// Controla o tempo limite em segundos antes de abrir mão da resolução do ambiente do shell quando o aplicativo ainda não tenha sido iniciado a partir de um terminal. Confira nossa [documentation](https://go.microsoft.com/fwlink/?linkid=2149667) para obter mais informações.
	"application.shellEnvironmentResolutionTimeout": 10,

	// Quando habilitados, os direitos disponíveis para a conta serão mostrados no menu de contas.
	"workbench.accounts.experimental.showEntitlements": false,

	// When enabled, the chat panel welcome view will be shown.
	"workbench.chat.experimental.showWelcomeView": false,

	// Whether to generate the 'final' modifer for code actions that create new declarations.
	//  - none: Do not generate final modifier.
	//  - fields: Generate 'final' modifier only for new field declarations.
	//  - variables: Generate 'final' modifier only for new variable declarations.
	//  - all: Generate 'final' modifier for all new declarations.
	"java.codeGeneration.addFinalForNewDeclaration": "none",

	// Generate method comments when generating the methods.
	"java.codeGeneration.generateComments": false,

	// Use 'instanceof' to compare types when generating the hashCode and equals methods.
	"java.codeGeneration.hashCodeEquals.useInstanceof": false,

	// Use Objects.hash and Objects.equals when generating the hashCode and equals methods. This setting only applies to Java 7 and higher.
	"java.codeGeneration.hashCodeEquals.useJava7Objects": false,

	// Specifies the insertion location of the code generated by source actions.
	//  - afterCursor: Insert the generated code after the member where the cursor is located.
	//  - beforeCursor: Insert the generated code before the member where the cursor is located.
	//  - lastMember: Insert the generated code as the last member of the target type.
	"java.codeGeneration.insertionLocation": "afterCursor",

	// The code style for generating the toString method.
	//  - STRING_CONCATENATION: String concatenation
	//  - STRING_BUILDER: StringBuilder/StringBuffer
	//  - STRING_BUILDER_CHAINED: StringBuilder/StringBuffer - chained call
	//  - STRING_FORMAT: String.format/MessageFormat
	"java.codeGeneration.toString.codeStyle": "STRING_CONCATENATION",

	// Limit number of items in arrays/collections/maps to list, if 0 then list all.
	"java.codeGeneration.toString.limitElements": 0,

	// List contents of arrays instead of using native toString().
	"java.codeGeneration.toString.listArrayContents": true,

	// Skip null values when generating the toString method.
	"java.codeGeneration.toString.skipNullValues": false,

	// The template for generating the toString method.
	"java.codeGeneration.toString.template": "${object.className} [${member.name()}=${member.value}, ${otherMembers}]",

	// Use blocks in 'if' statements when generating the methods.
	"java.codeGeneration.useBlocks": false,

	// Defines the `smart semicolon` detection. Defaults to `false`.
	"java.edit.smartSemicolonDetection.enabled": false,

	// Specifies the file header comment for new Java file. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).
	"java.templates.fileHeader": [],

	// Specifies the type comment for new Java type. Supports configuring multi-line comments with an array of strings, and using ${variable} to reference the [predefined variables](command:_java.templateVariables).
	"java.templates.typeComment": [],

	// Habilite as tarefas automáticas - observe que as tarefas não serão executadas em um workspace não confiável.
	//  - on: Sempre
	//  - off: Nunca
	"task.allowAutomaticTasks": "on",

	// Controla a habilitação de `provideTasks` para toda a extensão do provedor de tarefas. Se o comando Tasks: Run Task estiver lento, desabilitar a detecção automática para provedores de tarefas poderá ajudar. As extensões individuais também podem fornecer configurações que desabilitam a detecção automática.
	"task.autoDetect": "on",

	// Configura se é necessário mostrar o aviso de correspondência de problema ao executar uma tarefa. Defina como `true` para não receber avisos ou use um dicionário de tipos de tarefa para desligar o aviso somente para tipos de tarefa específicos.
	"task.problemMatchers.neverPrompt": false,

	// Controla se é necessário mostrar os detalhes da tarefa que tem um detalhe nas seleções rápidas de tarefa, como Executar Tarefa.
	"task.quickOpen.detail": true,

	// Controla o número de itens recentes rastreados na caixa de diálogo de abertura rápida da tarefa.
	"task.quickOpen.history": 30,

	// Faz com que as tarefas: executem o comando Task para usar o comportamento mais lento "show all" em vez do seletor de nível dois mais rápido, no qual as tarefas são agrupadas pelo provedor.
	"task.quickOpen.showAll": false,

	// Controla se a seleção rápida de tarefa é ignorada quando há apenas uma tarefa para seleção.
	"task.quickOpen.skip": false,

	// Ao recarregar a janela, reconecte-se às tarefas que têm correspondentes de problemas.
	"task.reconnection": true,

	// Salve todos os editores sujos antes de executar uma tarefa.
	//  - always: Sempre salva todos os editores antes de executar.
	//  - never: Nunca salva editores antes de executar.
	//  - prompt: Avisa se os editores devem ser salvos antes de serem executados.
	"task.saveBeforeRun": "always",

	// Configura se um aviso é mostrado quando um provedor está lento
	"task.slowProviderWarning": true,

	// Habilite o log detalhado para tarefas.
	"task.verboseLogging": false,

	// Ao abrir um arquivo do Explorador em um terminal, determinará que tipo de terminal será iniciado
	//  - integrated: Use o terminal integrado do VS Code.
	//  - external: Use o terminal externo configurado.
	//  - both: Use os outros dois juntos.
	"terminal.explorerKind": "integrated",

	// Personaliza qual terminal deve ser executado no Linux.
	"terminal.external.linuxExec": "xterm",

	// Personaliza qual aplicativo de terminal será executado no macOS.
	"terminal.external.osxExec": "Terminal.app",

	// Personaliza qual terminal deve ser executado no Windows.
	"terminal.external.windowsExec": "C:\\Windows\\System32\\cmd.exe",

	// Ao abrir um repositório da exibição de Repositórios de Controle do Código-Fonte em um terminal, determina qual tipo de terminal será iniciado
	//  - integrated: Use o terminal integrado do VS Code.
	//  - external: Use o terminal externo configurado.
	//  - both: Use os outros dois juntos.
	"terminal.sourceControlRepositoriesKind": "integrated",

	// Concentre na exibição acessível do terminal quando um comando for executado.
	"terminal.integrated.accessibleViewFocusOnCommandExecution": false,

	// Preserve a posição do cursor na reabertura da exibição acessível do terminal em vez de configurá-la na parte inferior do buffer.
	"terminal.integrated.accessibleViewPreserveCursorPosition": false,

	// Se deve ou não permitir combinações de teclas de acordes no terminal. Observe que quando isso for verdadeiro e o pressionamento de tecla resultar em um acorde, ele será ignorado `terminal.integrated.commandsToSkipShell`, definir isso como falso é particularmente útil quando você deseja que ctrl+k vá para o seu shell (não VS Code).
	"terminal.integrated.allowChords": true,

	// Se desejar permitir que mnemônicos da barra de menus (por exemplo, Alt+F) disparem a abertura da barra de menus. Observe que isso fará com que todos os pressionamentos de tecla Alt ignorem o shell quando verdadeiro. Isso não faz nada no macOS.
	"terminal.integrated.allowMnemonics": false,

	// Se ativado, alt/option + click reposicionará o cursor do prompt para baixo do mouse quando `editor.multiCursorModifier` estiver definido como `'alt'` (o valor padrão). Isso pode não funcionar de forma confiável dependendo do seu shell.
	"terminal.integrated.altClickMovesCursor": true,

	// O perfil de terminal a ser usado no Linux para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationProfile.linux": null,

	// O perfil de terminal a ser usado no macOS para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationProfile.osx": null,

	// O perfil de terminal a ser usado para uso de terminal relacionado à automação, como tarefas e depuração. Essa configuração será ignorada no momento se `terminal.integrated.automationShell.windows` (agora preterido) estiver definido.
	"terminal.integrated.automationProfile.windows": null,

	// Um conjunto de mensagens que, quando encontradas no terminal, serão respondidas automaticamente. Desde que a mensagem seja específica o suficiente, isso pode ajudar a automatizar respostas comuns.
	// 
	// Observações:
	// 
	// - Use `"Terminate batch job (Y/N)": "Y\r"` para responder automaticamente ao prompt de encerramento do trabalho em lote no Windows.
	// - A mensagem inclui sequências de escape para que a resposta não aconteça com texto estilizado.
	// - Cada resposta só pode acontecer uma vez a cada segundo.
	// - Use `"\r"` na resposta para representar a tecla Enter.
	// - Para cancelar a definição de uma tecla padrão, defina o valor como nulo.
	//  - Reinicie o VS Code se novas não se aplicarem.
	"terminal.integrated.autoReplies": {},

	// O número de milissegundos para mostrar a campainha dentro de uma guia de terminal quando disparada.
	"terminal.integrated.bellDuration": 1000,

	// Um conjunto de IDs de comando cujas combinações de teclas não serão enviadas ao shell, mas sempre tratadas pelo VS Code. Isso permite que as combinações de teclas que normalmente seriam consumidas pelo shell atuem da mesma forma que quando o terminal não está focado, por exemplo, `Ctrl+P` para iniciar a Abertura Rápida
	// 
	// &nbsp;
	// 
	// Muitos comandos são ignorados por padrão. Para substituir um padrão e passar a combinação de teclas desse comando para o shell, adicione o comando prefixado com o caractere `-`. Por exemplo, adicione `-workbench.action.quickOpen` para permitir que`Ctrl+P` alcance o shell.
	// 
	// &nbsp;
	// 
	// A seguinte lista de comandos padrão ignorados é truncada quando exibida em Editor de Configurações. Para ver a lista completa, [abrir as configurações padrão JSON](command:workbench.action.openRawDefaultSettings 'Abrir Configurações Padrão (JSON)') e pesquise o primeiro comando na lista abaixo.
	// 
	// &nbsp;
	// 
	// Comandos Padrão Ignorados:
	// 
	// - editor.action.accessibilityHelp
	// - editor.action.toggleTabFocusMode
	// - notification.acceptPrimaryAction
	// - notifications.hideList
	// - notifications.hideToasts
	// - runCommands
	// - workbench.action.closeQuickOpen
	// - workbench.action.debug.continue
	// - workbench.action.debug.pause
	// - workbench.action.debug.restart
	// - workbench.action.debug.run
	// - workbench.action.debug.start
	// - workbench.action.debug.stepInto
	// - workbench.action.debug.stepOut
	// - workbench.action.debug.stepOver
	// - workbench.action.debug.stop
	// - workbench.action.firstEditorInGroup
	// - workbench.action.focusActiveEditorGroup
	// - workbench.action.focusEighthEditorGroup
	// - workbench.action.focusFifthEditorGroup
	// - workbench.action.focusFirstEditorGroup
	// - workbench.action.focusFourthEditorGroup
	// - workbench.action.focusLastEditorGroup
	// - workbench.action.focusNextPart
	// - workbench.action.focusPreviousPart
	// - workbench.action.focusSecondEditorGroup
	// - workbench.action.focusSeventhEditorGroup
	// - workbench.action.focusSixthEditorGroup
	// - workbench.action.focusThirdEditorGroup
	// - workbench.action.lastEditorInGroup
	// - workbench.action.navigateDown
	// - workbench.action.navigateLeft
	// - workbench.action.navigateRight
	// - workbench.action.navigateUp
	// - workbench.action.nextEditor
	// - workbench.action.nextEditorInGroup
	// - workbench.action.nextPanelView
	// - workbench.action.nextSideBarView
	// - workbench.action.openNextRecentlyUsedEditor
	// - workbench.action.openNextRecentlyUsedEditorInGroup
	// - workbench.action.openPreviousRecentlyUsedEditor
	// - workbench.action.openPreviousRecentlyUsedEditorInGroup
	// - workbench.action.previousEditor
	// - workbench.action.previousEditorInGroup
	// - workbench.action.previousPanelView
	// - workbench.action.previousSideBarView
	// - workbench.action.quickOpen
	// - workbench.action.quickOpenLeastRecentlyUsedEditor
	// - workbench.action.quickOpenLeastRecentlyUsedEditorInGroup
	// - workbench.action.quickOpenPreviousEditor
	// - workbench.action.quickOpenPreviousRecentlyUsedEditor
	// - workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup
	// - workbench.action.quickOpenView
	// - workbench.action.showCommands
	// - workbench.action.tasks.build
	// - workbench.action.tasks.reRunTask
	// - workbench.action.tasks.restartTask
	// - workbench.action.tasks.runTask
	// - workbench.action.tasks.showLog
	// - workbench.action.tasks.showTasks
	// - workbench.action.tasks.terminate
	// - workbench.action.tasks.test
	// - workbench.action.terminal.acceptSelectedSuggestion
	// - workbench.action.terminal.chat.cancel
	// - workbench.action.terminal.chat.close
	// - workbench.action.terminal.chat.discard
	// - workbench.action.terminal.chat.feedbackHelpful
	// - workbench.action.terminal.chat.feedbackReportIssue
	// - workbench.action.terminal.chat.feedbackUnhelpful
	// - workbench.action.terminal.chat.insertCommand
	// - workbench.action.terminal.chat.makeRequest
	// - workbench.action.terminal.chat.runCommand
	// - workbench.action.terminal.chat.start
	// - workbench.action.terminal.chat.viewInChat
	// - workbench.action.terminal.clear
	// - workbench.action.terminal.clearSelection
	// - workbench.action.terminal.copyAndClearSelection
	// - workbench.action.terminal.copyLastCommand
	// - workbench.action.terminal.copyLastCommandAndLastCommandOutput
	// - workbench.action.terminal.copyLastCommandOutput
	// - workbench.action.terminal.copySelection
	// - workbench.action.terminal.copySelectionAsHtml
	// - workbench.action.terminal.deleteToLineStart
	// - workbench.action.terminal.deleteWordLeft
	// - workbench.action.terminal.deleteWordRight
	// - workbench.action.terminal.findNext
	// - workbench.action.terminal.findPrevious
	// - workbench.action.terminal.focus
	// - workbench.action.terminal.focusAccessibleBuffer
	// - workbench.action.terminal.focusAtIndex1
	// - workbench.action.terminal.focusAtIndex2
	// - workbench.action.terminal.focusAtIndex3
	// - workbench.action.terminal.focusAtIndex4
	// - workbench.action.terminal.focusAtIndex5
	// - workbench.action.terminal.focusAtIndex6
	// - workbench.action.terminal.focusAtIndex7
	// - workbench.action.terminal.focusAtIndex8
	// - workbench.action.terminal.focusAtIndex9
	// - workbench.action.terminal.focusFind
	// - workbench.action.terminal.focusHover
	// - workbench.action.terminal.focusNext
	// - workbench.action.terminal.focusNextPane
	// - workbench.action.terminal.focusPrevious
	// - workbench.action.terminal.focusPreviousPane
	// - workbench.action.terminal.goToRecentDirectory
	// - workbench.action.terminal.hideFind
	// - workbench.action.terminal.hideSuggestWidget
	// - workbench.action.terminal.kill
	// - workbench.action.terminal.killEditor
	// - workbench.action.terminal.moveToEditor
	// - workbench.action.terminal.moveToLineEnd
	// - workbench.action.terminal.moveToLineStart
	// - workbench.action.terminal.moveToTerminalPanel
	// - workbench.action.terminal.new
	// - workbench.action.terminal.newInActiveWorkspace
	// - workbench.action.terminal.paste
	// - workbench.action.terminal.pasteSelection
	// - workbench.action.terminal.resizePaneDown
	// - workbench.action.terminal.resizePaneLeft
	// - workbench.action.terminal.resizePaneRight
	// - workbench.action.terminal.resizePaneUp
	// - workbench.action.terminal.runActiveFile
	// - workbench.action.terminal.runRecentCommand
	// - workbench.action.terminal.runSelectedText
	// - workbench.action.terminal.scrollDown
	// - workbench.action.terminal.scrollDownPage
	// - workbench.action.terminal.scrollToBottom
	// - workbench.action.terminal.scrollToNextCommand
	// - workbench.action.terminal.scrollToPreviousCommand
	// - workbench.action.terminal.scrollToTop
	// - workbench.action.terminal.scrollUp
	// - workbench.action.terminal.scrollUpPage
	// - workbench.action.terminal.selectAll
	// - workbench.action.terminal.selectNextPageSuggestion
	// - workbench.action.terminal.selectNextSuggestion
	// - workbench.action.terminal.selectPrevPageSuggestion
	// - workbench.action.terminal.selectPrevSuggestion
	// - workbench.action.terminal.selectToNextCommand
	// - workbench.action.terminal.selectToNextLine
	// - workbench.action.terminal.selectToPreviousCommand
	// - workbench.action.terminal.selectToPreviousLine
	// - workbench.action.terminal.sendSequence
	// - workbench.action.terminal.sizeToContentWidth
	// - workbench.action.terminal.split
	// - workbench.action.terminal.splitInActiveWorkspace
	// - workbench.action.terminal.toggleFindCaseSensitive
	// - workbench.action.terminal.toggleFindRegex
	// - workbench.action.terminal.toggleFindWholeWord
	// - workbench.action.terminal.toggleTerminal
	// - workbench.action.toggleFullScreen
	// - workbench.action.toggleMaximizedPanel
	// - workbench.action.togglePanel
	"terminal.integrated.commandsToSkipShell": [
		"github.copilot.terminal.suggestCommand"
	],

	// Controla se é necessário confirmar quando a janela fecha se houver sessões de terminal ativas.
	//  - never: Nunca confirme.
	//  - always: Sempre confirme se existem terminais.
	//  - hasChildProcesses: Confirme se há terminais com processos filhos.
	"terminal.integrated.confirmOnExit": "never",

	// Controla se os terminais de eliminação devem ser confirmados quando eles têm processos filhos. Quando definido como editor, os terminais na área do editor serão marcados como alterados quando tiverem processos filhos. Observe que a detecção de processos filho pode não funcionar bem para shells como o Git Bash, que não executam seus processos como processos filhos do shell.
	//  - never: Nunca confirme.
	//  - editor: Confirme se o terminal está no editor.
	//  - panel: Confirme se o terminal está no painel.
	//  - always: Confirme se o terminal está no editor ou no painel.
	"terminal.integrated.confirmOnKill": "editor",

	// Controla se o texto selecionado no terminal será copiado na área de transferência.
	"terminal.integrated.copyOnSelection": false,

	// Controla se o cursor de terminal pisca.
	"terminal.integrated.cursorBlinking": false,

	// Controla o estilo do cursor do terminal quando o terminal está focalizado.
	"terminal.integrated.cursorStyle": "block",

	// Controla o estilo do cursor do terminal quando o terminal não está destacado.
	"terminal.integrated.cursorStyleInactive": "outline",

	// Controla a largura do cursor quando `terminal.integrated.cursorStyle` é definido como `line`.
	"terminal.integrated.cursorWidth": 1,

	// Se deseja desenhar glifos personalizados para elemento de bloco e caracteres de desenho de caixa em vez de usar a fonte, que normalmente resulta em melhor renderização com linhas contínuas. Observe que isso não funciona quando `terminal.integrated.gpuAcceleration` está desabilitado.
	"terminal.integrated.customGlyphs": true,

	// Um caminho de início explícito em que o terminal será iniciado. Ele será usado como o diretório de trabalho atual (cwd) para o processo de shell. Isso poderá ser particularmente útil em configurações de workspace se o diretório raiz não for um cwd conveniente.
	"terminal.integrated.cwd": "",

	// Controla onde os terminais recém-criados aparecerão.
	//  - editor: Criar terminais no editor
	//  - view: Criar terminais na exibição do terminal
	"terminal.integrated.defaultLocation": "view",

	// O perfil de terminal padrão no Linux.
	"terminal.integrated.defaultProfile.linux": null,

	// O perfil de terminal padrão no macOS.
	//  - null: Detectar o padrão automaticamente
	//  - bash: $(terminal-bash) bash
	// - path: /bin/bash
	// - args: ['-l']
	//  - csh: $(terminal) csh
	// - path: /bin/csh
	//  - dash: $(terminal) dash
	// - path: /bin/dash
	//  - ksh: $(terminal) ksh
	// - path: /bin/ksh
	//  - sh: $(terminal) sh
	// - path: /bin/sh
	//  - tcsh: $(terminal) tcsh
	// - path: /bin/tcsh
	//  - zsh: $(terminal) zsh
	// - path: /bin/zsh
	// - args: ['-l']
	//  - Terminal de Depuração de JavaScript: $($(debug)) Terminal de Depuração de JavaScript
	// - extensionIdentifier: ms-vscode.js-debug
	"terminal.integrated.defaultProfile.osx": null,

	// O perfil de terminal padrão no Windows.
	"terminal.integrated.defaultProfile.windows": null,

	// Controla se a variável de ambiente `$LANG` deve ser detectada e definida como uma opção compatível com UTF-8, pois o terminal do VS Code só dá suporte a dados codificados em UTF-8 provenientes de shell.
	//  - auto: Definir a variável de ambiente `$LANG` se a variável existente não existir ou se não terminar em `'.UTF-8 '`.
	//  - off: Não definir a variável de ambiente `$LANG`.
	//  - on: Sempre definir a variável de ambiente `$LANG`.
	"terminal.integrated.detectLocale": "auto",

	// Controla se o texto em negrito no terminal sempre usará a variante de cor ANSI "brilhante".
	"terminal.integrated.drawBoldTextInBrightColors": true,

	// Esse recurso agora está preterido. Alternativamente, use as configurações `terminal.integrated.enableVisualBell` e `accessibility.signals.terminalBell`.
	// 
	"terminal.integrated.enableBell": false,

	// Se deve habilitar links de arquivos em terminais. Os links podem ser lentos ao trabalhar em uma unidade de rede, principalmente porque cada link de arquivo é verificado no sistema de arquivos. Alterar isso terá efeito apenas em novos terminais.
	//  - off: Sempre desativado.
	//  - on: Sempre ativado.
	//  - notRemote: Habilite somente quando não estiver em um workspace remoto.
	"terminal.integrated.enableFileLinks": "on",

	// Habilita o suporte de imagem no terminal, isso só funcionará quando `terminal.integrated.gpuAcceleration` estiver habilitado. Tanto o protocolo de imagem inline do sixel quanto o iTerm são suportados no Linux e no macOS, o suporte do Windows acenderá automaticamente quando o ConPTY passar pelas sequências. No momento, as imagens não serão restauradas entre recarregamentos/reconexões de janelas.
	"terminal.integrated.enableImages": false,

	// Controla se uma caixa de diálogo de aviso deve ser exibida ao colar várias linhas no terminal.
	//  - auto: Habilite o aviso, mas não o mostre quando:
	// 
	// - O modo de colagem entre colchetes está habilitado (o shell dá suporte nativamente a colagem de várias linhas)
	// - A colagem é tratada pela linha de leitura do shell (no caso de pwsh)
	//  - always: Sempre mostre o aviso se o texto contiver uma nova linha.
	//  - never: Nunca mostre o aviso.
	"terminal.integrated.enableMultiLinePasteWarning": "auto",

	// Persistir sessões/histórico de terminal para o espaço de trabalho em recarregamentos de janela.
	"terminal.integrated.enablePersistentSessions": true,

	// Controla se a campainha visual do terminal está habilitada. A opção aparece ao lado do nome do terminal.
	"terminal.integrated.enableVisualBell": false,

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no Linux. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.linux": {},

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no macOS. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.osx": {},

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no Windows. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.windows": {},

	// Se deseja exibir o indicador de alterações de ambiente em cada terminal, o que explica se as extensões foram aplicadas, ou se você deseja fazer alterações no ambiente do terminal.
	//  - off: Desabilitar o indicador.
	//  - on: Habilitar o indicador.
	//  - warnonly: Somente mostrar o indicador de aviso quando o ambiente de um terminal estiver 'obsoleto', e não o indicador de informações que mostra que um terminal teve seu ambiente modificado por uma extensão.
	"terminal.integrated.environmentChangesIndicator": "warnonly",

	// Se os terminais devem ser reiniciados automaticamente se as extensões quiserem contribuir com o ambiente e ainda não tiverem interagido com eles.
	"terminal.integrated.environmentChangesRelaunch": true,

	// Whether to enable the upcoming experimental inline terminal chat UI.
	"terminal.integrated.experimentalInlineChat": false,

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"terminal.integrated.fastScrollSensitivity": 5,

	// Controla se o terminal, buffer acessível ou nenhum deles será destacado após a execução de `Terminal: Executar Texto Selecionado no Terminal Ativo foi executado.
	//  - terminal: Sempre destacar o terminal.
	//  - accessible-buffer: Sempre focar o buffer acessível.
	//  - none: Não fazer nada.
	"terminal.integrated.focusAfterRun": "none",

	// Controla a família de fontes do terminal. O padrão é o valor de `editor.fontFamily`.
	"terminal.integrated.fontFamily": "",

	// Controla o tamanho da fonte em pixels do terminal.
	"terminal.integrated.fontSize": 12,

	// A espessura da fonte a ser usada no terminal para texto sem negrito. Aceita palavras-chave "normal" e "negrito" ou números entre 1 e 1000.
	"terminal.integrated.fontWeight": "normal",

	// A espessura da fonte a ser usada no terminal para texto em negrito. Aceita palavras-chave "normal" e "negrito" ou números entre 1 e 1000.
	"terminal.integrated.fontWeightBold": "bold",

	// Controla se o terminal aproveitará a GPU para fazer a renderização.
	//  - auto: Permitir que o VS Code detecte qual renderizador fornecerá a melhor experiência.
	//  - on: Habilitar a aceleração da GPU no terminal.
	//  - off: Desabilite a aceleração de GPU no terminal. O terminal será renderizado muito mais lentamente quando a aceleração de GPU estiver desativada, mas deverá funcionar de forma confiável em todos os sistemas.
	//  - canvas: Use o renderizador de tela de fallback do terminal que usa um contexto 2d em vez de webgl, que pode ter um desempenho melhor em alguns sistemas. Observe que alguns recursos são limitados no renderizador de tela, como a seleção opaca.
	"terminal.integrated.gpuAcceleration": "auto",

	// Se deseja ocultar a exibição do terminal na inicialização, evite a criação de um terminal quando não houver sessões persistentes.
	//  - never: Nunca ocultar a exibição do terminal na inicialização.
	//  - whenEmpty: Apenas ocultar o terminal quando não houver sessões persistentes restauradas.
	//  - always: Sempre ocultar o terminal, mesmo quando houver sessões persistentes restauradas.
	"terminal.integrated.hideOnStartup": "never",

	// Controla se o terminal ignorará o modo de colagem entre colchetes, mesmo que o terminal seja colocado no modo, omitindo as sequências `\x1b[200~` e `\x1b[201~` ao colar. Isso é útil quando o shell não está respeitando o modo que pode acontecer em subshells, por exemplo.
	"terminal.integrated.ignoreBracketedPasteMode": false,

	// Um conjunto de nomes de processos a serem ignorados ao usar a configuração `terminal.integrated.confirmOnKill`.
	"terminal.integrated.ignoreProcessNames": [
		"starship",
		"oh-my-posh",
		"bash",
		"zsh"
	],

	// Se os novos shells devem herdar seu ambiente do código VS, o que pode gerar um shell de entrada para garantir que $PATH e outras variáveis de desenvolvimento sejam inicializadas. Isso não tem efeito no Windows.
	"terminal.integrated.inheritEnv": true,

	// Controla o espaçamento entre letras do terminal. Esse é um valor inteiro que representa o número de pixels adicionais a serem adicionados entre os caracteres.
	"terminal.integrated.letterSpacing": 0,

	// Controla a altura da linha do terminal. Este número é multiplicado pelo tamanho da fonte do terminal para obter a altura real da linha em pixels.
	"terminal.integrated.lineHeight": 1,

	// Quando o eco local deve ser ativado. Isso irá substituir `terminal.integrated.localEchoLatencyThreshold`
	//  - on: Sempre habilitado
	//  - off: Sempre desabilitado
	//  - auto: Habilitado somente para workspaces remotos
	"terminal.integrated.localEchoEnabled": "auto",

	// O eco local será desativado quando qualquer um desses nomes de programa for encontrado no título do terminal.
	"terminal.integrated.localEchoExcludePrograms": [
		"vim",
		"vi",
		"nano",
		"tmux"
	],

	// Duração do atraso da rede, em milissegundos, em que as edições locais serão ecoadas no terminal sem esperar pela confirmação do servidor. Se for '0', o eco local estará sempre ativado, e se for '-1', ele será desabilitado.
	"terminal.integrated.localEchoLatencyThreshold": 30,

	// Estilo do terminal de texto ecoado localmente; um estilo da fonte ou uma cor RGB.
	"terminal.integrated.localEchoStyle": "dim",

	// Controla se a seleção deve ser forçada ao usar Option + clique no macOS. Isso forçará uma seleção regular (linha) e removerá a permissão de uso do modo de seleção de coluna. Isso permite copiar e colar usando a seleção de terminal normal, por exemplo, quando o modo de mouse está habilitado no tmux.
	"terminal.integrated.macOptionClickForcesSelection": false,

	// Controla se a chave de opção deve ser tratada como a chave de meta no terminal no macOS.
	"terminal.integrated.macOptionIsMeta": false,

	// Quando definido, a cor de primeiro plano de cada célula será alterada para tentar atender à taxa de contraste especificada. Observe que isso não se aplica a caracteres `powerline` por #146406. Valores de exemplo:
	// 
	// - 1: não faça nada e use as cores padrão do tema.
	// - 4.5: [Conformidade com WCAG AA (mínimo)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).
	// - 7: [Conformidade WCAG AAA (melhorado)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).
	// - 21: branco no preto ou preto no branco.
	"terminal.integrated.minimumContrastRatio": 4.5,

	// Um multiplicador a ser usado no `deltaY` dos eventos de rolagem do mouse.
	"terminal.integrated.mouseWheelScrollSensitivity": 1,

	// Amplie a fonte do terminal ao usar a roda do mouse e segurar “Cmd”.
	"terminal.integrated.mouseWheelZoom": false,

	// Quando o processo do terminal deve ser desligado (por exemplo, na janela ou no fechamento do aplicativo), isso determina quando o conteúdo/histórico da sessão anterior do terminal deve ser restaurado e os processos devem ser recriados quando o espaço de trabalho for aberto da próxima vez.
	// 
	// Advertências:
	// 
	// - A restauração do diretório de trabalho do processo atual depende se ele é suportado pelo shell.
	// - O tempo para continuar na sessão durante o desligamento é limitado, portanto, pode ser interrompido ao usar conexões remotas de alta latência.
	//  - onExit: Reativa os processos depois que a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, associação de teclas, menu).
	//  - onExitAndWindowClose: Reativa os processos depois que a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, associação de teclas, menu) ou quando a janela for fechada.
	//  - never: Nunca restaure os buffers do terminal nem recrie o processo.
	"terminal.integrated.persistentSessionReviveProcess": "onExit",

	// Controla a quantidade máxima de linhas que serão restauradas ao se reconectar a uma sessão de terminal persistente. Aumentar isso irá restaurar mais linhas de scrollback ao custo de mais memória e aumentará o tempo que leva para se conectar aos terminais na inicialização. Esta configuração requer uma reinicialização para ter efeito e deve ser definida para um valor menor ou igual a `terminal.integrated.scrollback`.
	"terminal.integrated.persistentSessionScrollback": 100,

	// Um conjunto de personalizações de perfil de terminal Linux que permite adicionar, remover ou alterar como os terminais são iniciados. Os perfis são feitos de um caminho obrigatório, argumentos opcionais e outras opções de apresentação.
	// 
	// Para substituir um perfil existente, use seu nome de perfil como chave, por exemplo:
	// 
	// ```json
	// "terminal.integrated.profile.linux": {
	//   "bash": null
	// }
	// ```
	// 
	// [Leia mais sobre a configuração de perfis](https://code.visualstudio.com/docs/terminal/profiles).
	"terminal.integrated.profiles.linux": {
		"bash": {
			"path": "bash",
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh"
		},
		"fish": {
			"path": "fish"
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		}
	},

	// Um conjunto de personalizações de perfil de terminal Mac que permite adicionar, remover ou alterar como os terminais são iniciados. Os perfis são feitos de um caminho obrigatório, argumentos opcionais e outras opções de apresentação.
	// 
	// Para substituir um perfil existente, use seu nome de perfil como chave, por exemplo:
	// 
	// ```json
	// "terminal.integrated.profile.osx": {
	//   "bash": null
	// }
	// ```
	// 
	// [Leia mais sobre a configuração de perfis](https://code.visualstudio.com/docs/terminal/profiles).
	"terminal.integrated.profiles.osx": {
		"bash": {
			"path": "bash",
			"args": [
				"-l"
			],
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh",
			"args": [
				"-l"
			]
		},
		"fish": {
			"path": "fish",
			"args": [
				"-l"
			]
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		}
	},

	// Um conjunto de personalizações de perfil de terminal Windows que permite adicionar, remover ou alterar como os terminais são iniciados. Os perfis são feitos de um caminho obrigatório, argumentos opcionais e outras opções de apresentação.
	// 
	// Para substituir um perfil existente, use seu nome de perfil como chave, por exemplo:
	// 
	// ```json
	// "terminal.integrated.profile.windows": {
	//   "bash": null
	// }
	// ```
	// 
	// [Leia mais sobre a configuração de perfis](https://code.visualstudio.com/docs/terminal/profiles).
	"terminal.integrated.profiles.windows": {
		"PowerShell": {
			"source": "PowerShell",
			"icon": "terminal-powershell"
		},
		"Command Prompt": {
			"path": [
				"${env:windir}\\Sysnative\\cmd.exe",
				"${env:windir}\\System32\\cmd.exe"
			],
			"args": [],
			"icon": "terminal-cmd"
		},
		"Git Bash": {
			"source": "Git Bash"
		}
	},

	// Whether to rescale glyphs horizontally that are a single cell wide but have glyphs that would overlap following cell(s). This typically happens for ambiguous width characters (eg. the roman numeral characters U+2160+) which aren't featured in monospace fonts. Emoji glyphs are never rescaled.
	"terminal.integrated.rescaleOverlappingGlyphs": false,

	// Controla como o terminal reage ao clicar com o botão direito do mouse.
	//  - default: Mostrar o menu de contexto.
	//  - copyPaste: Copiar quando houver uma seleção, caso contrário, colar.
	//  - paste: Colar ao clicar com o botão direito do mouse.
	//  - selectWord: Selecionar a palavra sob o cursor e mostrar o menu de contexto.
	//  - nothing: Não faça nada e passe o evento para o terminal.
	"terminal.integrated.rightClickBehavior": "selectWord",

	// Controla o número máximo de linhas que o terminal mantém em seu buffer. Pré-alocamos memória com base nesse valor para garantir uma experiência tranquila. Assim, à medida que o valor aumenta, a quantidade de memória também aumentará.
	"terminal.integrated.scrollback": 1000,

	// Envia a maioria das combinações de teclas para o terminal em vez do workbench, substituindo `terminal.integrated.commandsToSkipShell`, que pode ser usado alternativamente para ajuste fino.
	"terminal.integrated.sendKeybindingsToShell": false,

	// Quando a integração do shell está habilitada, adiciona uma decoração para cada comando.
	//  - both: Mostrar decorações na calha (esquerda) e régua de visão geral (direita)
	//  - gutter: Mostrar decorações de calha à esquerda do terminal
	//  - overviewRuler: Mostrar as decorações da régua de visão geral à direita do terminal
	//  - never: Não mostrar decorações
	"terminal.integrated.shellIntegration.decorationsEnabled": "both",

	// Determina se a integração do shell é ou não injetada automaticamente para oferecer suporte a recursos como rastreamento de comando aprimorado e detecção de diretório de trabalho atual. 
	// 
	// A integração do shell funciona injetando o shell com um script de inicialização. O script fornece uma visão do VS Code sobre o que está acontecendo no terminal.
	// 
	// Shells com suporte:
	// 
	// - Linux/macOS: bash, fish, pwsh, zsh
	//  - Windows: pwsh
	// 
	// Esta configuração se aplica somente quando os terminais são criados, portanto, você precisará reiniciar seus terminais para que ela entre em vigor.
	// 
	//  Observe que a injeção de script pode não funcionar se você tiver argumentos personalizados definidos no perfil do terminal, habilitou `editor.accessibilitySupport#`, tem um [bash complexo `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex-bash-promptcommand) ou outra configuração sem suporte. Para desabilitar as decorações, consulte `#terminal.integrated.shellIntegrations.decorationsEnabled`
	"terminal.integrated.shellIntegration.enabled": true,

	// Controla o número de comandos usados recentemente para manter no histórico de comandos do terminal. Defina como 0 para desabilitar o histórico de comandos do terminal.
	"terminal.integrated.shellIntegration.history": 100,

	// This is an experimental setting and may break the terminal! Use at your own risk.
	// Habilita sugestões de IntelliSense de terminal experimental para shells com suporte quando `terminal.integrated.shellIntegration.enabled` é definido como `true`. Se a integração do shell for instalada manualmente, `VSCODE_SUGGEST` precisará ser definido como `1` antes de chamar o script.
	"terminal.integrated.shellIntegration.suggestEnabled": false,

	// Controla se o alerta "O processo do terminal terminou com o código de saída" é mostrado quando o código de saída é diferente de zero.
	"terminal.integrated.showExitAlert": true,

	// Se deseja mostrar os focos para links na saída do terminal.
	"terminal.integrated.showLinkHover": true,

	// Controla se o terminal rolará usando uma animação.
	"terminal.integrated.smoothScrolling": false,

	// Controla o diretório de trabalho com o qual um terminal dividido começa.
	//  - workspaceRoot: Um novo terminal dividido usará a raiz do workspace como o diretório de trabalho. Em um workspace de várias raízes, uma escolha para qual pasta raiz usar é oferecida.
	//  - initial: Um novo terminal dividido usará o diretório de trabalho com o que o terminal pai começou.
	//  - inherited: No macOS e no Linux, um novo terminal dividido usará o diretório de trabalho do terminal pai. No Windows, ele se comporta do mesmo modo que o inicial.
	"terminal.integrated.splitCwd": "inherited",

	// Mostra o comando atual na parte superior do terminal.
	"terminal.integrated.stickyScroll.enabled": false,

	// Define o número máximo de linhas autoadesivas a serem mostradas. As linhas de rolagem autoadesiva nunca excederão 40% do visor, independentemente dessa configuração.
	"terminal.integrated.stickyScroll.maxLineCount": 5,

	// Um ID de cor de tema para associar aos ícones do terminal por padrão.
	"terminal.integrated.tabs.defaultColor": null,

	// Um ID de codicon para associar aos ícones do terminal por padrão.
	//  - add: $(add)
	//  - plus: $(plus)
	//  - gist-new: $(gist-new)
	//  - repo-create: $(repo-create)
	//  - lightbulb: $(lightbulb)
	//  - light-bulb: $(light-bulb)
	//  - repo: $(repo)
	//  - repo-delete: $(repo-delete)
	//  - gist-fork: $(gist-fork)
	//  - repo-forked: $(repo-forked)
	//  - git-pull-request: $(git-pull-request)
	//  - git-pull-request-abandoned: $(git-pull-request-abandoned)
	//  - record-keys: $(record-keys)
	//  - keyboard: $(keyboard)
	//  - tag: $(tag)
	//  - git-pull-request-label: $(git-pull-request-label)
	//  - tag-add: $(tag-add)
	//  - tag-remove: $(tag-remove)
	//  - person: $(person)
	//  - person-follow: $(person-follow)
	//  - person-outline: $(person-outline)
	//  - person-filled: $(person-filled)
	//  - git-branch: $(git-branch)
	//  - git-branch-create: $(git-branch-create)
	//  - git-branch-delete: $(git-branch-delete)
	//  - source-control: $(source-control)
	//  - mirror: $(mirror)
	//  - mirror-public: $(mirror-public)
	//  - star: $(star)
	//  - star-add: $(star-add)
	//  - star-delete: $(star-delete)
	//  - star-empty: $(star-empty)
	//  - comment: $(comment)
	//  - comment-add: $(comment-add)
	//  - alert: $(alert)
	//  - warning: $(warning)
	//  - search: $(search)
	//  - search-save: $(search-save)
	//  - log-out: $(log-out)
	//  - sign-out: $(sign-out)
	//  - log-in: $(log-in)
	//  - sign-in: $(sign-in)
	//  - eye: $(eye)
	//  - eye-unwatch: $(eye-unwatch)
	//  - eye-watch: $(eye-watch)
	//  - circle-filled: $(circle-filled)
	//  - primitive-dot: $(primitive-dot)
	//  - close-dirty: $(close-dirty)
	//  - debug-breakpoint: $(debug-breakpoint)
	//  - debug-breakpoint-disabled: $(debug-breakpoint-disabled)
	//  - debug-hint: $(debug-hint)
	//  - terminal-decoration-success: $(terminal-decoration-success)
	//  - primitive-square: $(primitive-square)
	//  - edit: $(edit)
	//  - pencil: $(pencil)
	//  - info: $(info)
	//  - issue-opened: $(issue-opened)
	//  - gist-private: $(gist-private)
	//  - git-fork-private: $(git-fork-private)
	//  - lock: $(lock)
	//  - mirror-private: $(mirror-private)
	//  - close: $(close)
	//  - remove-close: $(remove-close)
	//  - x: $(x)
	//  - repo-sync: $(repo-sync)
	//  - sync: $(sync)
	//  - clone: $(clone)
	//  - desktop-download: $(desktop-download)
	//  - beaker: $(beaker)
	//  - microscope: $(microscope)
	//  - vm: $(vm)
	//  - device-desktop: $(device-desktop)
	//  - file: $(file)
	//  - file-text: $(file-text)
	//  - more: $(more)
	//  - ellipsis: $(ellipsis)
	//  - kebab-horizontal: $(kebab-horizontal)
	//  - mail-reply: $(mail-reply)
	//  - reply: $(reply)
	//  - organization: $(organization)
	//  - organization-filled: $(organization-filled)
	//  - organization-outline: $(organization-outline)
	//  - new-file: $(new-file)
	//  - file-add: $(file-add)
	//  - new-folder: $(new-folder)
	//  - file-directory-create: $(file-directory-create)
	//  - trash: $(trash)
	//  - trashcan: $(trashcan)
	//  - history: $(history)
	//  - clock: $(clock)
	//  - folder: $(folder)
	//  - file-directory: $(file-directory)
	//  - symbol-folder: $(symbol-folder)
	//  - logo-github: $(logo-github)
	//  - mark-github: $(mark-github)
	//  - github: $(github)
	//  - terminal: $(terminal)
	//  - console: $(console)
	//  - repl: $(repl)
	//  - zap: $(zap)
	//  - symbol-event: $(symbol-event)
	//  - error: $(error)
	//  - stop: $(stop)
	//  - variable: $(variable)
	//  - symbol-variable: $(symbol-variable)
	//  - array: $(array)
	//  - symbol-array: $(symbol-array)
	//  - symbol-module: $(symbol-module)
	//  - symbol-package: $(symbol-package)
	//  - symbol-namespace: $(symbol-namespace)
	//  - symbol-object: $(symbol-object)
	//  - symbol-method: $(symbol-method)
	//  - symbol-function: $(symbol-function)
	//  - symbol-constructor: $(symbol-constructor)
	//  - symbol-boolean: $(symbol-boolean)
	//  - symbol-null: $(symbol-null)
	//  - symbol-numeric: $(symbol-numeric)
	//  - symbol-number: $(symbol-number)
	//  - symbol-structure: $(symbol-structure)
	//  - symbol-struct: $(symbol-struct)
	//  - symbol-parameter: $(symbol-parameter)
	//  - symbol-type-parameter: $(symbol-type-parameter)
	//  - symbol-key: $(symbol-key)
	//  - symbol-text: $(symbol-text)
	//  - symbol-reference: $(symbol-reference)
	//  - go-to-file: $(go-to-file)
	//  - symbol-enum: $(symbol-enum)
	//  - symbol-value: $(symbol-value)
	//  - symbol-ruler: $(symbol-ruler)
	//  - symbol-unit: $(symbol-unit)
	//  - activate-breakpoints: $(activate-breakpoints)
	//  - archive: $(archive)
	//  - arrow-both: $(arrow-both)
	//  - arrow-down: $(arrow-down)
	//  - arrow-left: $(arrow-left)
	//  - arrow-right: $(arrow-right)
	//  - arrow-small-down: $(arrow-small-down)
	//  - arrow-small-left: $(arrow-small-left)
	//  - arrow-small-right: $(arrow-small-right)
	//  - arrow-small-up: $(arrow-small-up)
	//  - arrow-up: $(arrow-up)
	//  - bell: $(bell)
	//  - bold: $(bold)
	//  - book: $(book)
	//  - bookmark: $(bookmark)
	//  - debug-breakpoint-conditional-unverified: $(debug-breakpoint-conditional-unverified)
	//  - debug-breakpoint-conditional: $(debug-breakpoint-conditional)
	//  - debug-breakpoint-conditional-disabled: $(debug-breakpoint-conditional-disabled)
	//  - debug-breakpoint-data-unverified: $(debug-breakpoint-data-unverified)
	//  - debug-breakpoint-data: $(debug-breakpoint-data)
	//  - debug-breakpoint-data-disabled: $(debug-breakpoint-data-disabled)
	//  - debug-breakpoint-log-unverified: $(debug-breakpoint-log-unverified)
	//  - debug-breakpoint-log: $(debug-breakpoint-log)
	//  - debug-breakpoint-log-disabled: $(debug-breakpoint-log-disabled)
	//  - briefcase: $(briefcase)
	//  - broadcast: $(broadcast)
	//  - browser: $(browser)
	//  - bug: $(bug)
	//  - calendar: $(calendar)
	//  - case-sensitive: $(case-sensitive)
	//  - check: $(check)
	//  - checklist: $(checklist)
	//  - chevron-down: $(chevron-down)
	//  - chevron-left: $(chevron-left)
	//  - chevron-right: $(chevron-right)
	//  - chevron-up: $(chevron-up)
	//  - chrome-close: $(chrome-close)
	//  - chrome-maximize: $(chrome-maximize)
	//  - chrome-minimize: $(chrome-minimize)
	//  - chrome-restore: $(chrome-restore)
	//  - circle-outline: $(circle-outline)
	//  - circle: $(circle)
	//  - debug-breakpoint-unverified: $(debug-breakpoint-unverified)
	//  - terminal-decoration-incomplete: $(terminal-decoration-incomplete)
	//  - circle-slash: $(circle-slash)
	//  - circuit-board: $(circuit-board)
	//  - clear-all: $(clear-all)
	//  - clippy: $(clippy)
	//  - close-all: $(close-all)
	//  - cloud-download: $(cloud-download)
	//  - cloud-upload: $(cloud-upload)
	//  - code: $(code)
	//  - collapse-all: $(collapse-all)
	//  - color-mode: $(color-mode)
	//  - comment-discussion: $(comment-discussion)
	//  - credit-card: $(credit-card)
	//  - dash: $(dash)
	//  - dashboard: $(dashboard)
	//  - database: $(database)
	//  - debug-continue: $(debug-continue)
	//  - debug-disconnect: $(debug-disconnect)
	//  - debug-pause: $(debug-pause)
	//  - debug-restart: $(debug-restart)
	//  - debug-start: $(debug-start)
	//  - debug-step-into: $(debug-step-into)
	//  - debug-step-out: $(debug-step-out)
	//  - debug-step-over: $(debug-step-over)
	//  - debug-stop: $(debug-stop)
	//  - debug: $(debug)
	//  - device-camera-video: $(device-camera-video)
	//  - device-camera: $(device-camera)
	//  - device-mobile: $(device-mobile)
	//  - diff-added: $(diff-added)
	//  - diff-ignored: $(diff-ignored)
	//  - diff-modified: $(diff-modified)
	//  - diff-removed: $(diff-removed)
	//  - diff-renamed: $(diff-renamed)
	//  - diff: $(diff)
	//  - diff-sidebyside: $(diff-sidebyside)
	//  - discard: $(discard)
	//  - editor-layout: $(editor-layout)
	//  - empty-window: $(empty-window)
	//  - exclude: $(exclude)
	//  - extensions: $(extensions)
	//  - eye-closed: $(eye-closed)
	//  - file-binary: $(file-binary)
	//  - file-code: $(file-code)
	//  - file-media: $(file-media)
	//  - file-pdf: $(file-pdf)
	//  - file-submodule: $(file-submodule)
	//  - file-symlink-directory: $(file-symlink-directory)
	//  - file-symlink-file: $(file-symlink-file)
	//  - file-zip: $(file-zip)
	//  - files: $(files)
	//  - filter: $(filter)
	//  - flame: $(flame)
	//  - fold-down: $(fold-down)
	//  - fold-up: $(fold-up)
	//  - fold: $(fold)
	//  - folder-active: $(folder-active)
	//  - folder-opened: $(folder-opened)
	//  - gear: $(gear)
	//  - gift: $(gift)
	//  - gist-secret: $(gist-secret)
	//  - gist: $(gist)
	//  - git-commit: $(git-commit)
	//  - git-compare: $(git-compare)
	//  - compare-changes: $(compare-changes)
	//  - git-merge: $(git-merge)
	//  - github-action: $(github-action)
	//  - github-alt: $(github-alt)
	//  - globe: $(globe)
	//  - grabber: $(grabber)
	//  - graph: $(graph)
	//  - gripper: $(gripper)
	//  - heart: $(heart)
	//  - home: $(home)
	//  - horizontal-rule: $(horizontal-rule)
	//  - hubot: $(hubot)
	//  - inbox: $(inbox)
	//  - issue-reopened: $(issue-reopened)
	//  - issues: $(issues)
	//  - italic: $(italic)
	//  - jersey: $(jersey)
	//  - json: $(json)
	//  - kebab-vertical: $(kebab-vertical)
	//  - key: $(key)
	//  - law: $(law)
	//  - lightbulb-autofix: $(lightbulb-autofix)
	//  - link-external: $(link-external)
	//  - link: $(link)
	//  - list-ordered: $(list-ordered)
	//  - list-unordered: $(list-unordered)
	//  - live-share: $(live-share)
	//  - loading: $(loading)
	//  - location: $(location)
	//  - mail-read: $(mail-read)
	//  - mail: $(mail)
	//  - markdown: $(markdown)
	//  - megaphone: $(megaphone)
	//  - mention: $(mention)
	//  - milestone: $(milestone)
	//  - git-pull-request-milestone: $(git-pull-request-milestone)
	//  - mortar-board: $(mortar-board)
	//  - move: $(move)
	//  - multiple-windows: $(multiple-windows)
	//  - mute: $(mute)
	//  - no-newline: $(no-newline)
	//  - note: $(note)
	//  - octoface: $(octoface)
	//  - open-preview: $(open-preview)
	//  - package: $(package)
	//  - paintcan: $(paintcan)
	//  - pin: $(pin)
	//  - play: $(play)
	//  - run: $(run)
	//  - plug: $(plug)
	//  - preserve-case: $(preserve-case)
	//  - preview: $(preview)
	//  - project: $(project)
	//  - pulse: $(pulse)
	//  - question: $(question)
	//  - quote: $(quote)
	//  - radio-tower: $(radio-tower)
	//  - reactions: $(reactions)
	//  - references: $(references)
	//  - refresh: $(refresh)
	//  - regex: $(regex)
	//  - remote-explorer: $(remote-explorer)
	//  - remote: $(remote)
	//  - remove: $(remove)
	//  - replace-all: $(replace-all)
	//  - replace: $(replace)
	//  - repo-clone: $(repo-clone)
	//  - repo-force-push: $(repo-force-push)
	//  - repo-pull: $(repo-pull)
	//  - repo-push: $(repo-push)
	//  - report: $(report)
	//  - request-changes: $(request-changes)
	//  - rocket: $(rocket)
	//  - root-folder-opened: $(root-folder-opened)
	//  - root-folder: $(root-folder)
	//  - rss: $(rss)
	//  - ruby: $(ruby)
	//  - save-all: $(save-all)
	//  - save-as: $(save-as)
	//  - save: $(save)
	//  - screen-full: $(screen-full)
	//  - screen-normal: $(screen-normal)
	//  - search-stop: $(search-stop)
	//  - server: $(server)
	//  - settings-gear: $(settings-gear)
	//  - settings: $(settings)
	//  - shield: $(shield)
	//  - smiley: $(smiley)
	//  - sort-precedence: $(sort-precedence)
	//  - split-horizontal: $(split-horizontal)
	//  - split-vertical: $(split-vertical)
	//  - squirrel: $(squirrel)
	//  - star-full: $(star-full)
	//  - star-half: $(star-half)
	//  - symbol-class: $(symbol-class)
	//  - symbol-color: $(symbol-color)
	//  - symbol-constant: $(symbol-constant)
	//  - symbol-enum-member: $(symbol-enum-member)
	//  - symbol-field: $(symbol-field)
	//  - symbol-file: $(symbol-file)
	//  - symbol-interface: $(symbol-interface)
	//  - symbol-keyword: $(symbol-keyword)
	//  - symbol-misc: $(symbol-misc)
	//  - symbol-operator: $(symbol-operator)
	//  - symbol-property: $(symbol-property)
	//  - wrench: $(wrench)
	//  - wrench-subaction: $(wrench-subaction)
	//  - symbol-snippet: $(symbol-snippet)
	//  - tasklist: $(tasklist)
	//  - telescope: $(telescope)
	//  - text-size: $(text-size)
	//  - three-bars: $(three-bars)
	//  - thumbsdown: $(thumbsdown)
	//  - thumbsup: $(thumbsup)
	//  - tools: $(tools)
	//  - triangle-down: $(triangle-down)
	//  - triangle-left: $(triangle-left)
	//  - triangle-right: $(triangle-right)
	//  - triangle-up: $(triangle-up)
	//  - twitter: $(twitter)
	//  - unfold: $(unfold)
	//  - unlock: $(unlock)
	//  - unmute: $(unmute)
	//  - unverified: $(unverified)
	//  - verified: $(verified)
	//  - versions: $(versions)
	//  - vm-active: $(vm-active)
	//  - vm-outline: $(vm-outline)
	//  - vm-running: $(vm-running)
	//  - watch: $(watch)
	//  - whitespace: $(whitespace)
	//  - whole-word: $(whole-word)
	//  - window: $(window)
	//  - word-wrap: $(word-wrap)
	//  - zoom-in: $(zoom-in)
	//  - zoom-out: $(zoom-out)
	//  - list-filter: $(list-filter)
	//  - list-flat: $(list-flat)
	//  - list-selection: $(list-selection)
	//  - selection: $(selection)
	//  - list-tree: $(list-tree)
	//  - debug-breakpoint-function-unverified: $(debug-breakpoint-function-unverified)
	//  - debug-breakpoint-function: $(debug-breakpoint-function)
	//  - debug-breakpoint-function-disabled: $(debug-breakpoint-function-disabled)
	//  - debug-stackframe-active: $(debug-stackframe-active)
	//  - circle-small-filled: $(circle-small-filled)
	//  - debug-stackframe-dot: $(debug-stackframe-dot)
	//  - terminal-decoration-mark: $(terminal-decoration-mark)
	//  - debug-stackframe: $(debug-stackframe)
	//  - debug-stackframe-focused: $(debug-stackframe-focused)
	//  - debug-breakpoint-unsupported: $(debug-breakpoint-unsupported)
	//  - symbol-string: $(symbol-string)
	//  - debug-reverse-continue: $(debug-reverse-continue)
	//  - debug-step-back: $(debug-step-back)
	//  - debug-restart-frame: $(debug-restart-frame)
	//  - debug-alt: $(debug-alt)
	//  - call-incoming: $(call-incoming)
	//  - call-outgoing: $(call-outgoing)
	//  - menu: $(menu)
	//  - expand-all: $(expand-all)
	//  - feedback: $(feedback)
	//  - git-pull-request-reviewer: $(git-pull-request-reviewer)
	//  - group-by-ref-type: $(group-by-ref-type)
	//  - ungroup-by-ref-type: $(ungroup-by-ref-type)
	//  - account: $(account)
	//  - git-pull-request-assignee: $(git-pull-request-assignee)
	//  - bell-dot: $(bell-dot)
	//  - debug-console: $(debug-console)
	//  - library: $(library)
	//  - output: $(output)
	//  - run-all: $(run-all)
	//  - sync-ignored: $(sync-ignored)
	//  - pinned: $(pinned)
	//  - github-inverted: $(github-inverted)
	//  - server-process: $(server-process)
	//  - server-environment: $(server-environment)
	//  - pass: $(pass)
	//  - issue-closed: $(issue-closed)
	//  - stop-circle: $(stop-circle)
	//  - play-circle: $(play-circle)
	//  - record: $(record)
	//  - debug-alt-small: $(debug-alt-small)
	//  - vm-connect: $(vm-connect)
	//  - cloud: $(cloud)
	//  - merge: $(merge)
	//  - export: $(export)
	//  - graph-left: $(graph-left)
	//  - magnet: $(magnet)
	//  - notebook: $(notebook)
	//  - redo: $(redo)
	//  - check-all: $(check-all)
	//  - pinned-dirty: $(pinned-dirty)
	//  - pass-filled: $(pass-filled)
	//  - circle-large-filled: $(circle-large-filled)
	//  - circle-large: $(circle-large)
	//  - circle-large-outline: $(circle-large-outline)
	//  - combine: $(combine)
	//  - gather: $(gather)
	//  - table: $(table)
	//  - variable-group: $(variable-group)
	//  - type-hierarchy: $(type-hierarchy)
	//  - type-hierarchy-sub: $(type-hierarchy-sub)
	//  - type-hierarchy-super: $(type-hierarchy-super)
	//  - git-pull-request-create: $(git-pull-request-create)
	//  - run-above: $(run-above)
	//  - run-below: $(run-below)
	//  - notebook-template: $(notebook-template)
	//  - debug-rerun: $(debug-rerun)
	//  - workspace-trusted: $(workspace-trusted)
	//  - workspace-untrusted: $(workspace-untrusted)
	//  - workspace-unknown: $(workspace-unknown)
	//  - terminal-cmd: $(terminal-cmd)
	//  - terminal-debian: $(terminal-debian)
	//  - terminal-linux: $(terminal-linux)
	//  - terminal-powershell: $(terminal-powershell)
	//  - terminal-tmux: $(terminal-tmux)
	//  - terminal-ubuntu: $(terminal-ubuntu)
	//  - terminal-bash: $(terminal-bash)
	//  - arrow-swap: $(arrow-swap)
	//  - copy: $(copy)
	//  - person-add: $(person-add)
	//  - filter-filled: $(filter-filled)
	//  - wand: $(wand)
	//  - debug-line-by-line: $(debug-line-by-line)
	//  - inspect: $(inspect)
	//  - layers: $(layers)
	//  - layers-dot: $(layers-dot)
	//  - layers-active: $(layers-active)
	//  - compass: $(compass)
	//  - compass-dot: $(compass-dot)
	//  - compass-active: $(compass-active)
	//  - azure: $(azure)
	//  - issue-draft: $(issue-draft)
	//  - git-pull-request-closed: $(git-pull-request-closed)
	//  - git-pull-request-draft: $(git-pull-request-draft)
	//  - debug-all: $(debug-all)
	//  - debug-coverage: $(debug-coverage)
	//  - run-errors: $(run-errors)
	//  - folder-library: $(folder-library)
	//  - debug-continue-small: $(debug-continue-small)
	//  - beaker-stop: $(beaker-stop)
	//  - graph-line: $(graph-line)
	//  - graph-scatter: $(graph-scatter)
	//  - pie-chart: $(pie-chart)
	//  - bracket: $(bracket)
	//  - bracket-dot: $(bracket-dot)
	//  - bracket-error: $(bracket-error)
	//  - lock-small: $(lock-small)
	//  - azure-devops: $(azure-devops)
	//  - verified-filled: $(verified-filled)
	//  - newline: $(newline)
	//  - layout: $(layout)
	//  - layout-activitybar-left: $(layout-activitybar-left)
	//  - layout-activitybar-right: $(layout-activitybar-right)
	//  - layout-panel-left: $(layout-panel-left)
	//  - layout-panel-center: $(layout-panel-center)
	//  - layout-panel-justify: $(layout-panel-justify)
	//  - layout-panel-right: $(layout-panel-right)
	//  - layout-panel: $(layout-panel)
	//  - layout-sidebar-left: $(layout-sidebar-left)
	//  - layout-sidebar-right: $(layout-sidebar-right)
	//  - layout-statusbar: $(layout-statusbar)
	//  - layout-menubar: $(layout-menubar)
	//  - layout-centered: $(layout-centered)
	//  - target: $(target)
	//  - indent: $(indent)
	//  - record-small: $(record-small)
	//  - error-small: $(error-small)
	//  - terminal-decoration-error: $(terminal-decoration-error)
	//  - arrow-circle-down: $(arrow-circle-down)
	//  - arrow-circle-left: $(arrow-circle-left)
	//  - arrow-circle-right: $(arrow-circle-right)
	//  - arrow-circle-up: $(arrow-circle-up)
	//  - layout-sidebar-right-off: $(layout-sidebar-right-off)
	//  - layout-panel-off: $(layout-panel-off)
	//  - layout-sidebar-left-off: $(layout-sidebar-left-off)
	//  - blank: $(blank)
	//  - heart-filled: $(heart-filled)
	//  - map: $(map)
	//  - map-horizontal: $(map-horizontal)
	//  - fold-horizontal: $(fold-horizontal)
	//  - map-filled: $(map-filled)
	//  - map-horizontal-filled: $(map-horizontal-filled)
	//  - fold-horizontal-filled: $(fold-horizontal-filled)
	//  - circle-small: $(circle-small)
	//  - bell-slash: $(bell-slash)
	//  - bell-slash-dot: $(bell-slash-dot)
	//  - comment-unresolved: $(comment-unresolved)
	//  - git-pull-request-go-to-changes: $(git-pull-request-go-to-changes)
	//  - git-pull-request-new-changes: $(git-pull-request-new-changes)
	//  - search-fuzzy: $(search-fuzzy)
	//  - comment-draft: $(comment-draft)
	//  - send: $(send)
	//  - sparkle: $(sparkle)
	//  - insert: $(insert)
	//  - mic: $(mic)
	//  - thumbsdown-filled: $(thumbsdown-filled)
	//  - thumbsup-filled: $(thumbsup-filled)
	//  - coffee: $(coffee)
	//  - snake: $(snake)
	//  - game: $(game)
	//  - vr: $(vr)
	//  - chip: $(chip)
	//  - piano: $(piano)
	//  - music: $(music)
	//  - mic-filled: $(mic-filled)
	//  - repo-fetch: $(repo-fetch)
	//  - copilot: $(copilot)
	//  - lightbulb-sparkle: $(lightbulb-sparkle)
	//  - robot: $(robot)
	//  - sparkle-filled: $(sparkle-filled)
	//  - diff-single: $(diff-single)
	//  - diff-multiple: $(diff-multiple)
	//  - surround-with: $(surround-with)
	//  - share: $(share)
	//  - git-stash: $(git-stash)
	//  - git-stash-apply: $(git-stash-apply)
	//  - git-stash-pop: $(git-stash-pop)
	//  - vscode: $(vscode)
	//  - vscode-insiders: $(vscode-insiders)
	//  - code-oss: $(code-oss)
	//  - run-coverage: $(run-coverage)
	//  - run-all-coverage: $(run-all-coverage)
	//  - coverage: $(coverage)
	//  - github-project: $(github-project)
	//  - map-vertical: $(map-vertical)
	//  - fold-vertical: $(fold-vertical)
	//  - map-vertical-filled: $(map-vertical-filled)
	//  - fold-vertical-filled: $(fold-vertical-filled)
	//  - dialog-error: $(dialog-error)
	//  - dialog-warning: $(dialog-warning)
	//  - dialog-info: $(dialog-info)
	//  - dialog-close: $(dialog-close)
	//  - tree-item-expanded: $(tree-item-expanded)
	//  - tree-filter-on-type-on: $(tree-filter-on-type-on)
	//  - tree-filter-on-type-off: $(tree-filter-on-type-off)
	//  - tree-filter-clear: $(tree-filter-clear)
	//  - tree-item-loading: $(tree-item-loading)
	//  - menu-selection: $(menu-selection)
	//  - menu-submenu: $(menu-submenu)
	//  - menubar-more: $(menubar-more)
	//  - scrollbar-button-left: $(scrollbar-button-left)
	//  - scrollbar-button-right: $(scrollbar-button-right)
	//  - scrollbar-button-up: $(scrollbar-button-up)
	//  - scrollbar-button-down: $(scrollbar-button-down)
	//  - toolbar-more: $(toolbar-more)
	//  - quick-input-back: $(quick-input-back)
	//  - drop-down-button: $(drop-down-button)
	//  - symbol-customcolor: $(symbol-customcolor)
	//  - export: $(export)
	//  - workspace-unspecified: $(workspace-unspecified)
	//  - newline: $(newline)
	//  - thumbsdown-filled: $(thumbsdown-filled)
	//  - thumbsup-filled: $(thumbsup-filled)
	//  - git-fetch: $(git-fetch)
	//  - lightbulb-sparkle-autofix: $(lightbulb-sparkle-autofix)
	//  - debug-breakpoint-pending: $(debug-breakpoint-pending)
	"terminal.integrated.tabs.defaultIcon": "terminal",

	// Controla a descrição do terminal, que aparece à direita do título. As variáveis são substituídas de acordo com o contexto:
	// - `${cwd}`: o diretório de trabalho atual do terminal
	// - `${cwdFolder}`: o diretório de trabalho atual do terminal, exibido para espaços de trabalho de várias raízes ou em um único espaço de trabalho raiz quando o valor difere do diretório de trabalho inicial. No Windows, isto só será exibido quando a integração do shell estiver ativada.
	// - `${workspaceFolder}`: o workspace no qual o terminal foi inicializado
	// - `${local}`: indica um terminal local em um workspace remoto
	// - `${process}`: o nome do processo de terminal
	// - `${separator}`: um separador condicional (` - `) que só será exibido quando cercado por variáveis com valores ou texto estático.
	// - `${sequence}`: o nome fornecido pelo processo ao terminal
	// - `${task}`: indica que este terminal está associado a uma tarefa
	"terminal.integrated.tabs.description": "${task}${separator}${local}${separator}${cwdFolder}",

	// Controla se os status da guia do terminal suportam animação (por exemplo, tarefas em andamento).
	"terminal.integrated.tabs.enableAnimation": true,

	// Controla se as guias de terminal são exibidas como uma lista no lado do terminal. Quando desabilitada, uma lista suspensa será exibida.
	"terminal.integrated.tabs.enabled": true,

	// Controla se a concentração do terminal de uma guia acontece com um clique duplo ou único.
	//  - singleClick: Focalizar o terminal ao clicar duas vezes em uma guia de terminal
	//  - doubleClick: Focar o terminal ao clicar duas vezes em uma guia de terminal
	"terminal.integrated.tabs.focusMode": "doubleClick",

	// Controla se a exibição de guias de terminal será ocultada em determinadas condições.
	//  - never: Nunca ocultar a exibição das guias do terminal
	//  - singleTerminal: Ocultar a visualização das guias do terminal quando houver apenas um único terminal aberto
	//  - singleGroup: Ocultar o modo de exibição das guias de terminal quando houver apenas um único grupo de terminal aberto
	"terminal.integrated.tabs.hideCondition": "singleTerminal",

	// Controla o local das guias de terminal, à esquerda ou à direita do(s) terminal(is) atual(is).
	//  - left: Mostrar o modo de exibição das guias do terminal à esquerda do terminal
	//  - right: Mostrar o modo de exibição das guias do terminal à direita do terminal
	"terminal.integrated.tabs.location": "right",

	// Separador usado por `terminal.integrated.tabs.title#` e `#terminal.integrated.tabs.description`.
	"terminal.integrated.tabs.separator": " - ",

	// Controla se os botões de divisão e eliminação do terminal são exibidos ao lado do novo botão do terminal.
	//  - always: Sempre mostrar as ações
	//  - singleTerminal: Mostrar as ações quando é o único terminal aberto
	//  - singleTerminalOrNarrow: Mostra as ações quando é o único terminal aberto ou quando as abas estão em seu estado estreito sem texto
	//  - never: Nunca mostrar as ações
	"terminal.integrated.tabs.showActions": "singleTerminalOrNarrow",

	// Mostra as informações do terminal ativo no modo de exibição. Isso é particularmente útil quando o título dentro das guias não está visível.
	//  - always: Sempre mostrar o terminal ativo
	//  - singleTerminal: Mostrar o terminal ativo quando ele for o único terminal aberto
	//  - singleTerminalOrNarrow: Mostrar o terminal ativo quando ele for o único terminal aberto ou quando o modo de exibição de guias estiver em seu estado de texto restrito
	//  - never: Nunca mostrar o terminal ativo
	"terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",

	// Controla o título do terminal. As variáveis são substituídas de acordo com o contexto:
	// - `${cwd}`: o diretório de trabalho atual do terminal
	// - `${cwdFolder}`: o diretório de trabalho atual do terminal, exibido para espaços de trabalho de várias raízes ou em um único espaço de trabalho raiz quando o valor difere do diretório de trabalho inicial. No Windows, isto só será exibido quando a integração do shell estiver ativada.
	// - `${workspaceFolder}`: o workspace no qual o terminal foi inicializado
	// - `${local}`: indica um terminal local em um workspace remoto
	// - `${process}`: o nome do processo de terminal
	// - `${separator}`: um separador condicional (` - `) que só será exibido quando cercado por variáveis com valores ou texto estático.
	// - `${sequence}`: o nome fornecido pelo processo ao terminal
	// - `${task}`: indica que este terminal está associado a uma tarefa
	"terminal.integrated.tabs.title": "${process}",

	// O número de células em uma parada de tabulação.
	"terminal.integrated.tabStopWidth": 8,

	// Controla qual versão do Unicode usar ao avaliar a largura dos caracteres no terminal. Se você tiver emojis ou outros caracteres largos que não ocupam a quantidade certa de espaço ou backspace excluindo muito ou muito pouco, convém tentar ajustar essa configuração.
	//  - 6: Versão 6 do Unicode. Esta é uma versão mais antiga que deverá funcionar melhor em sistemas mais antigos.
	//  - 11: Versão 11 do Unicode. Esta versão fornece melhor suporte em sistemas modernos que usam versões modernas do Unicode.
	"terminal.integrated.unicodeVersion": "11",

	// Controla se as distribuições do WSL são mostradas no menu suspenso do terminal
	"terminal.integrated.useWslProfiles": true,

	// Se deve ser usado o ConPTY para comunicação do processo de terminal do Windows (exige o número de build 18309 ou posteriores do Windows 10). Winpty será usado se isso for false.
	"terminal.integrated.windowsEnableConpty": true,

	// Uma cadeia de caracteres contendo todos os caracteres a serem considerados como separadores de palavras ao clicar duas vezes para selecionar a palavra e na detecção do link de fallback "word". Já que isso é usado para a detecção de links, incluir caracteres como `:` que sejam usados ao detectar os links fará com que a parte de linha e coluna dos links, como `file:10:5`, seja ignorada.
	"terminal.integrated.wordSeparators": " ()[]{}',\"`─‘’|",

	// Controla se o modo de exibição de Problemas deve revelar os arquivos automaticamente ao abri-los.
	"problems.autoReveal": true,

	// Mostrar Erros & Avisos em arquivos e pastas. Substituído por "#problems.visibility#" quando desativado.
	"problems.decorations.enabled": true,

	// Controla o modo de exibição padrão do modo de exibição Problemas.
	"problems.defaultViewMode": "tree",

	// Quando habilitado, mostra o problema atual na barra de status.
	"problems.showCurrentInStatus": false,

	// Controla a ordem em que os problemas são navegados.
	//  - severity: Navegar por problemas ordenados por severidade
	//  - position: Navegar por problemas ordenados por posição
	"problems.sortOrder": "severity",

	// Controla se os problemas estão visíveis em todo o editor e no workbench.
	"problems.visibility": true,

	// Habilitar/desabilitar trilhas de navegação.
	"breadcrumbs.enabled": true,

	// Controla se e como os caminhos de arquivo são mostrados no modo de exibição de trilhas.
	//  - on: Mostrar o caminho do arquivo no modo de exibição de trilhas.
	//  - off: Não mostrar o caminho do arquivo no modo de exibição estrutural.
	//  - last: Somente mostrar o último elemento do caminho do arquivo no modo de exibição de trilhas.
	"breadcrumbs.filePath": "on",

	// Renderizar itens de trilha com ícones.
	"breadcrumbs.icons": true,

	// Quando as trilhas habilitadas mostram símbolos `array`.
	"breadcrumbs.showArrays": true,

	// Quando as trilhas habilitadas mostram símbolos `boolean`.
	"breadcrumbs.showBooleans": true,

	// Quando as trilhas habilitadas mostram símbolos `class`.
	"breadcrumbs.showClasses": true,

	// Quando as trilhas habilitadas mostram símbolos `constant`.
	"breadcrumbs.showConstants": true,

	// Quando as trilhas habilitadas mostram símbolos `constructor`.
	"breadcrumbs.showConstructors": true,

	// Quando as trilhas habilitadas mostram símbolos `enumMember`.
	"breadcrumbs.showEnumMembers": true,

	// Quando as trilhas habilitadas mostram símbolos `enum`.
	"breadcrumbs.showEnums": true,

	// Quando as trilhas habilitadas mostram símbolos `event`.
	"breadcrumbs.showEvents": true,

	// Quando as trilhas habilitadas mostram símbolos `field`.
	"breadcrumbs.showFields": true,

	// Quando as trilhas habilitadas mostram símbolos `file`.
	"breadcrumbs.showFiles": true,

	// Quando as trilhas habilitadas mostram símbolos `function`.
	"breadcrumbs.showFunctions": true,

	// Quando as trilhas habilitadas mostram símbolos `interface`.
	"breadcrumbs.showInterfaces": true,

	// Quando as trilhas habilitadas mostram símbolos `key`.
	"breadcrumbs.showKeys": true,

	// Quando as trilhas habilitadas mostram símbolos `method`.
	"breadcrumbs.showMethods": true,

	// Quando as trilhas habilitadas mostram símbolos `module`.
	"breadcrumbs.showModules": true,

	// Quando as trilhas habilitadas mostram símbolos `namespace`.
	"breadcrumbs.showNamespaces": true,

	// Quando as trilhas habilitadas mostram símbolos `null`.
	"breadcrumbs.showNull": true,

	// Quando as trilhas habilitadas mostram símbolos `number`.
	"breadcrumbs.showNumbers": true,

	// Quando as trilhas habilitadas mostram símbolos `object`.
	"breadcrumbs.showObjects": true,

	// Quando as trilhas habilitadas mostram símbolos `operator`.
	"breadcrumbs.showOperators": true,

	// Quando as trilhas habilitadas mostram símbolos `package`.
	"breadcrumbs.showPackages": true,

	// Quando as trilhas habilitadas mostram símbolos `property`.
	"breadcrumbs.showProperties": true,

	// Quando as trilhas habilitadas mostram símbolos `string`.
	"breadcrumbs.showStrings": true,

	// Quando as trilhas habilitadas mostram símbolos `struct`.
	"breadcrumbs.showStructs": true,

	// Quando as trilhas habilitadas mostram símbolos `typeParameter`.
	"breadcrumbs.showTypeParameters": true,

	// Quando as trilhas habilitadas mostram símbolos `variable`.
	"breadcrumbs.showVariables": true,

	// Controla se e como os símbolos são mostrados no modo de exibição de trilhas.
	//  - on: Mostrar todos os símbolos na exibição trilhas.
	//  - off: Não mostrar símbolos no modo de exibição estrutural.
	//  - last: Somente mostrar o símbolo atual no modo de exibição de trilhas.
	"breadcrumbs.symbolPath": "on",

	// Controla como os símbolos são classificados no modo de exibição da estrutura do código de trilha.
	//  - position: Mostrar estrutura de tópicos do símbolo na ordem de posição do arquivo.
	//  - name: Mostrar estrutura de tópicos do símbolo em ordem alfabética.
	//  - type: Mostrar estrutura de tópicos do símbolo em ordem de tipo de símbolo.
	"breadcrumbs.symbolSortOrder": "position",

	// The list of clean ups to be run on the current document when it's saved or when the cleanup command is issued. Clean ups can automatically fix code style or programming mistakes. Click [HERE](command:_java.learnMoreAboutCleanUps) to learn more about what each clean up does.
	"java.cleanup.actions": [
		"renameFileToType"
	],

	// Deprecated, please use 'java.cleanup.actions' instead.
	// 
	"java.cleanup.actionsOnSave": [],

	// Reordering of fields, enum constants, and initializers can result in semantic and runtime changes due to different initialization and persistence order. This setting prevents this from occurring.
	"java.codeAction.sortMembers.avoidVolatileChanges": true,

	// Show quickfixes at the problem or line level.
	"java.quickfix.showAt": "line",

	// Specify whether to replace all the occurrences of the subtype with the new extracted interface.
	"java.refactoring.extract.interface.replace": true,

	// Enable/disable cleanup actions on save.
	"java.saveActions.cleanup": true,

	// Enable/disable auto organize imports on save action
	"java.saveActions.organizeImports": false,

	// Specifies the number of imports added before a star-import declaration is used.
	"java.sources.organizeImports.starThreshold": 99,

	// Specifies the number of static imports added before a star-import declaration is used.
	"java.sources.organizeImports.staticStarThreshold": 99,

	// Controla se os itens de estrutura de tópicos estão recolhidos ou expandidos.
	//  - alwaysCollapse: Recolher todos os itens.
	//  - alwaysExpand: Expanda todos os itens.
	"outline.collapseItems": "alwaysExpand",

	// Renderize elementos de Estrutura do Código com ícones.
	"outline.icons": true,

	// Use notificações para erros e avisos em elementos da Estrutura do Código. Substituído por "#problems.visibility#" quando desativado.
	"outline.problems.badges": true,

	// Use cores para erros e avisos em elementos da Estrutura do Código. Substituído por "#problems.visibility#" quando desativado.
	"outline.problems.colors": true,

	// Mostrar erros e avisos em elementos da Estrutura do Código. Substituído por "#problems.visibility#" quando desativado.
	"outline.problems.enabled": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `array`.
	"outline.showArrays": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `boolean`.
	"outline.showBooleans": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `class`.
	"outline.showClasses": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `constant`.
	"outline.showConstants": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `constructor`.
	"outline.showConstructors": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `enumMember`.
	"outline.showEnumMembers": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `enum`.
	"outline.showEnums": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `event`.
	"outline.showEvents": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `field`.
	"outline.showFields": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `file`.
	"outline.showFiles": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `function`.
	"outline.showFunctions": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `interface`.
	"outline.showInterfaces": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `key`.
	"outline.showKeys": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `method`.
	"outline.showMethods": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `module`.
	"outline.showModules": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `namespace`.
	"outline.showNamespaces": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `null`.
	"outline.showNull": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `number`.
	"outline.showNumbers": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `object`.
	"outline.showObjects": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `operator`.
	"outline.showOperators": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `package`.
	"outline.showPackages": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `property`.
	"outline.showProperties": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `string`.
	"outline.showStrings": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `struct`.
	"outline.showStructs": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `typeParameter`.
	"outline.showTypeParameters": true,

	// Quando habilitada, a Estrutura do Código mostra símbolos `variable`.
	"outline.showVariables": true,

	// Enable/disable the implementations code lens.
	"java.implementationsCodeLens.enabled": false,

	// Enable/disable inlay hints for parameter names:
	// ```java
	// 
	// Integer.valueOf(/* s: */ '123', /* radix: */ 10)
	//  
	// ```
	//  `java.inlayHints.parameterNames.exclusions` can be used to disable the inlay hints for methods.
	//  - none: Disable parameter name hints
	//  - literals: Enable parameter name hints only for literal arguments
	//  - all: Enable parameter name hints for literal and non-literal arguments
	"java.inlayHints.parameterNames.enabled": "literals",

	// The patterns for the methods that will be disabled to show the inlay hints. Supported pattern examples:
	//  - `java.lang.Math.*` - All the methods from java.lang.Math.
	//  - `*.Arrays.asList` - Methods named as 'asList' in the types named as 'Arrays'.
	//  - `*.println(*)` - Methods named as 'println'.
	//  - `(from, to)` - Methods with two parameters named as 'from' and 'to'.
	//  - `(arg*)` - Methods with one parameter whose name starts with 'arg'.
	"java.inlayHints.parameterNames.exclusions": [],

	// Include getter, setter and builder/constructor when finding references.
	"java.references.includeAccessors": true,

	// Include the decompiled sources when finding references.
	"java.references.includeDecompiledSources": true,

	// Enable/disable the references code lens.
	"java.referencesCodeLens.enabled": false,

	// Include method declarations from source files in symbol search.
	"java.symbols.includeSourceMethodDeclarations": false,

	// Enable/disable lazy loading the content in type hierarchy. Lazy loading could save a lot of loading time but every type should be expanded manually to load its content.
	"java.typeHierarchy.lazyLoad": false,

	// Preferred content provider (a 3rd party decompiler id, usually)
	"java.contentProvider.preferred": null,

	// Enable/disable download of Maven source artifacts for Eclipse projects.
	"java.eclipse.downloadSources": false,

	// Specifies whether to recheck all open Java files for diagnostics when editing a Java file.
	"java.edit.validateAllOpenBuffersOnChanges": false,

	// Specifies whether to reload the sources of the open class files when their source jar files are changed.
	//  - ask: Ask to reload the sources of the open class files
	//  - auto: Automatically reload the sources of the open class files
	//  - manual: Manually reload the sources of the open class files
	"java.editor.reloadChangedSources": "ask",

	// Enable/disable smart folding range support. If disabled, it will use the default indentation-based folding range provided by VS Code.
	"java.foldingRange.enabled": true,

	// Enable/disable Smart Selection support for Java. Disabling this option will not affect the VS Code built-in word-based and bracket-based smart selection.
	"java.selectionRange.enabled": true,

	// Experimental. Controla se a Exibição de linha do tempo carregará a próxima página de itens quando você rolar até o final da lista.
	"timeline.pageOnScroll": false,

	// O número de itens a serem mostrados na Exibição de linha do tempo por padrão e ao carregar mais itens. A configuração como `null` (o padrão) escolherá automaticamente um tamanho de página com base na área visível da Exibição de linha do tempo.
	"timeline.pageSize": null,

	// Definir configurações que serão substituídas pela c linguagem.
	"[c]":  {
		"editor.wordBasedSuggestions": "off",
		"editor.suggest.insertMode": "replace",
		"editor.semanticHighlighting.enabled": true
	},

	// Definir configurações que serão substituídas pela clojure linguagem.
	"[clojure]":  {
		"diffEditor.ignoreTrimWhitespace": false
	},

	// Definir configurações que serão substituídas pela coffeescript linguagem.
	"[coffeescript]":  {
		"diffEditor.ignoreTrimWhitespace": false
	},

	// Definir configurações que serão substituídas pela cpp linguagem.
	"[cpp]":  {
		"editor.wordBasedSuggestions": "off",
		"editor.suggest.insertMode": "replace",
		"editor.semanticHighlighting.enabled": true
	},

	// Definir configurações que serão substituídas pela csharp linguagem.
	"[csharp]":  {
		"editor.maxTokenizationLineLength": 2500
	},

	// Definir configurações que serão substituídas pela css linguagem.
	"[css]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela cuda-cpp linguagem.
	"[cuda-cpp]":  {
		"editor.wordBasedSuggestions": "off",
		"editor.suggest.insertMode": "replace",
		"editor.semanticHighlighting.enabled": true
	},

	// Definir configurações que serão substituídas pela django-html linguagem.
	"[django-html]":  {
		"editor.quickSuggestions": {
				"other": true,
				"comments": true,
				"strings": true
		}
	},

	// Definir configurações que serão substituídas pela dockercompose linguagem.
	"[dockercompose]":  {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced"
	},

	// Definir configurações que serão substituídas pela dockerfile linguagem.
	"[dockerfile]":  {
		"editor.quickSuggestions": {
				"strings": true
		}
	},

	// Definir configurações que serão substituídas pela fsharp linguagem.
	"[fsharp]":  {
		"diffEditor.ignoreTrimWhitespace": false
	},

	// Definir configurações que serão substituídas pela git-commit linguagem.
	"[git-commit]":  {
		"editor.rulers": [
				50,
				72
		],
		"editor.wordWrap": "off",
		"workbench.editor.restoreViewState": false
	},

	// Definir configurações que serão substituídas pela git-rebase linguagem.
	"[git-rebase]":  {
		"workbench.editor.restoreViewState": false
	},

	// Definir configurações que serão substituídas pela go linguagem.
	"[go]":  {
		"editor.insertSpaces": false
	},

	// Definir configurações que serão substituídas pela handlebars linguagem.
	"[handlebars]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela html linguagem.
	"[html]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela jade linguagem.
	"[jade]":  {
		"diffEditor.ignoreTrimWhitespace": false
	},

	// Definir configurações que serão substituídas pela java linguagem.
	"[java]":  {
		"editor.suggest.snippetsPreventQuickSuggestions": false
	},

	// Definir configurações que serão substituídas pela javascript linguagem.
	"[javascript]":  {
		"editor.maxTokenizationLineLength": 2500
	},

	// Definir configurações que serão substituídas pela json linguagem.
	"[json]":  {
		"editor.quickSuggestions": {
				"strings": true
		},
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela jsonc linguagem.
	"[jsonc]":  {
		"editor.quickSuggestions": {
				"strings": true
		},
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela latex linguagem.
	"[latex]":  {
		"editor.formatOnPaste": false,
		"editor.suggestSelection": "recentlyUsedByPrefix"
	},

	// Definir configurações que serão substituídas pela less linguagem.
	"[less]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela makefile linguagem.
	"[makefile]":  {
		"editor.insertSpaces": false
	},

	// Definir configurações que serão substituídas pela markdown linguagem.
	"[markdown]":  {
		"editor.unicodeHighlight.ambiguousCharacters": false,
		"editor.unicodeHighlight.invisibleCharacters": false,
		"diffEditor.ignoreTrimWhitespace": false,
		"editor.wordWrap": "on",
		"editor.quickSuggestions": {
				"comments": "off",
				"strings": "off",
				"other": "off"
		}
	},

	// Definir configurações que serão substituídas pela plaintext linguagem.
	"[plaintext]":  {
		"editor.unicodeHighlight.ambiguousCharacters": false,
		"editor.unicodeHighlight.invisibleCharacters": false
	},

	// Definir configurações que serão substituídas pela python linguagem.
	"[python]":  {
		"diffEditor.ignoreTrimWhitespace": false,
		"editor.formatOnType": true,
		"editor.wordBasedSuggestions": "off"
	},

	// Definir configurações que serão substituídas pela scss linguagem.
	"[scss]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela search-result linguagem.
	"[search-result]":  {
		"editor.lineNumbers": "off"
	},

	// Definir configurações que serão substituídas pela shellscript linguagem.
	"[shellscript]":  {
		"files.eol": "\n"
	},

	// Definir configurações que serão substituídas pela yaml linguagem.
	"[yaml]":  {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced",
		"diffEditor.ignoreTrimWhitespace": false
	},

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Toca um som quando uma solicitação de chat é feita.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.chatRequestSent": "off",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som em loop enquanto a resposta está pendente.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.chatResponsePending": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som em loop enquanto a resposta é recebida.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.chatResponseReceived": "off",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando um recurso é limpo (por exemplo, o terminal, o Console de Depuração ou o canal de Saída). Quando isso for desabilitado, um alerta do ARIA anunciará "Limpo".
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.clear": "off",

	// Essa configuração está obsoleta; em vez disso, use a configuração `signals.debouncePositionChanges`.
	// Se as mudanças de posição devem ou não ignorar a replicação
	"audioCues.debouncePositionChanges": false,

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando o foco passa para uma linha excluída no Modo do visualizador de Comparação Acessível ou para a alteração seguinte/anterior.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.diffLineDeleted": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando o foco passa para uma linha inserida no Modo do visualizador de Comparação Acessível ou para a alteração seguinte/anterior.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.diffLineInserted": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando o foco passa para uma linha modificada no Modo do visualizador de Comparação Acessível ou para a alteração seguinte/anterior.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.diffLineModified": "auto",

	// Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).
	// 
	"audioCues.enabled": null,

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando um arquivo ou notebook é formatado. Confira também: `accessibility.alert.format`
	//  - userGesture: Reproduz a indicação de áudio quando um usuário formata um arquivo explicitamente.
	//  - always: Reproduz a indicação de áudio sempre que um arquivo é formatado, incluindo se ele estiver definido para formatar ao salvar, digitar ou colar ou executar de uma célula.
	//  - never: Nunca reproduz a indicação de áudio.
	"audioCues.format": "never",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando a linha ativa tem um ponto de interrupção.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.lineHasBreakpoint": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando a linha ativa tem um erro.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.lineHasError": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando a linha ativa tem uma área dobrada que pode ser desdobrada.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.lineHasFoldedArea": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando a linha ativa tem uma sugestão embutida.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.lineHasInlineSuggestion": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando a linha ativa tem um aviso.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.lineHasWarning": "off",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som ao tentar ler uma linha com dicas embutidas que não tenhas estas dicas.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.noInlayHints": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando uma execução de célula do notebook é concluída com êxito.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.notebookCellCompleted": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando uma execução de célula do notebook falha.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.notebookCellFailed": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando o depurador parou em um ponto de interrupção.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.onDebugBreak": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando um arquivo é salvo. Confira também: `accessibility.alert.save`
	//  - userGesture: Reproduz a indicação de áudio quando um usuário salva um arquivo explicitamente.
	//  - always: Reproduz a indicação de áudio sempre que um arquivo é salvo, incluindo o salvamento automático.
	//  - never: Nunca reproduz a indicação de áudio.
	"audioCues.save": "never",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando uma tarefa é concluída.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.taskCompleted": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando uma tarefa falha (código de saída diferente de zero).
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.taskFailed": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando a campainha do terminal está tocando.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.terminalBell": "on",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando um comando do terminal falha (código de saída diferente de zero).
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.terminalCommandFailed": "auto",

	// Essa configuração foi preterida. Use as configurações de `sinais`.
	// Reproduz um som quando Correções Rápidas de terminal estão disponíveis.
	//  - auto: Habilitar o som quando um leitor de tela estiver conectado.
	//  - on: Habilitar som.
	//  - off: Desabilitar som.
	"audioCues.terminalQuickFix": "auto",

	// Deprecated. Use `accessibility.signals.sounds.volume` instead.
	// 
	"audioCues.volume": null,

	// O nome sob o qual o acesso ao túnel remoto é registrado. Se não estiver definido, o nome do host será usado.
	"remote.tunnels.access.hostNameOverride": "",

	// Impeça que o computador entre em suspensão quando o acesso remoto ao túnel estiver ativado.
	"remote.tunnels.access.preventSleep": false,

	// Quando habilitada, novos processos em execução são detectados e as portas nas quais eles escutam são encaminhadas automaticamente. Desabilitar esta configuração não impedirá que todas as portas sejam encaminhadas. Mesmo quando desabilitadas, as extensões ainda poderão fazer com que as portas sejam encaminhadas, e a abertura de alguns URLs ainda fará com que as portas sejam encaminhadas.
	"remote.autoForwardPorts": true,

	// O número de portas encaminhadas automaticamente que dispararão a mudança de `process` para `hybrid` ao encaminhar portas automaticamente e `remote.autoForwardPortsSource` está definido como `process`. Defina como `0` para desabilitar o fallback.
	"remote.autoForwardPortsFallback": 20,

	// Define a origem a partir da qual as portas são encaminhadas automaticamente quando `remote.autoForwardPorts` é verdadeira. Nos repositórios remotos do Windows e macOS, as opções `process` e `hybrid` não têm efeito e `output` será usado.
	//  - process: As portas serão encaminhadas automaticamente quando descobertas pela inspeção dos processos que forem iniciados e incluírem uma porta.
	//  - output: As portas serão encaminhadas automaticamente quando descobertas pela leitura da saída do terminal e da depuração. Nem todos os processos que usam portas serão impressos no terminal integrado ou no console de depuração, portanto algumas portas serão perdidas. As portas encaminhadas com base na saída não serão "revertidas" até a recarga ou até que a porta seja fechada pelo usuário na exibição Portas.
	//  - hybrid: As portas serão encaminhadas automaticamente quando descobertas pela leitura do terminal e saída de depuração. Nem todos os processos que usam portas serão impressos no terminal integrado ou no console de depuração, portanto, algumas portas serão perdidas. As portas serão "desencaminhadas" observando os processos que escutam nessa porta para serem finalizados.
	"remote.autoForwardPortsSource": "process",

	// Quando ativado, as extensões são baixadas localmente e instaladas no local remoto.
	"remote.downloadExtensionsLocally": false,

	// Substituir o tipo de uma extensão. As extensões `ui` são instaladas e executadas no computador local, enquanto as extensões `workspace` são executadas no repositório remoto. Ao substituir o tipo padrão de uma extensão usando essa configuração, você deve especificar se essa extensão deve ser instalada e habilitada local ou remotamente.
	"remote.extensionKind": {
		"pub.name": [
			"ui"
		]
	},

	// Controla se os URLs locais com uma porta serão encaminhadas quando abertas do terminal e do console de depuração.
	"remote.forwardOnOpen": true,

	// Especifica o nome do host local que será usado para o encaminhamento de porta.
	"remote.localPortHost": "localhost",

	// Defina as propriedades padrão que são aplicadas a todas as portas que não obtêm propriedades da configuração `remote.portsAttributes`. Por exemplo:
	// 
	// ```
	// {
	//   "onAutoForward": "ignore"
	// }
	// ```
	"remote.otherPortsAttributes": {},

	// Definir as propriedades que são aplicadas quando um número de porta específico é encaminhado. Por exemplo:
	// 
	// 
	// ```"3000": {
	//   "label": "Application"
	// },
	// "40000-55000": {
	//  "onAutoForward": "ignore"
	// },
	// ".+\\/server.js": {
	//  "onAutoForward": "openPreview"
	// }
	// ```
	"remote.portsAttributes": {
		"443": {
			"protocol": "https"
		},
		"8443": {
			"protocol": "https"
		}
	},

	// Restaura as portas que você encaminhou em um espaço de trabalho.
	"remote.restoreForwardedPorts": true,

	// O tema de cores do sistema se aplica a elementos nativos da interface do usuário, como caixas de diálogo nativas, menus e barra de título. Mesmo que o seu sistema operacional esteja configurado no modo de aparência clara, você pode selecionar um tema de cor escura do sistema para a janela. Você também pode configurar para ajustar automaticamente com base na configuração `workbench.colorTheme`.
	//  - default: O tema de cores do sistema corresponde ao tema do sistema operacional configurado.
	//  - auto: Aplique um tema de cores claras do sistema quando um tema de cores claras do ambiente de trabalho estiver configurado e o mesmo para temas de cores escuras do ambiente de trabalho configurados.
	//  - light: Aplique um tema de cores do sistema de luz.
	//  - dark: Aplique um tema de cor escura do sistema.
	"window.systemColorTheme": "default",

	// Ao pressionar teclas, feche a Exibição Acessível e concentre-se no elemento do qual ela foi invocada.
	"accessibility.accessibleView.closeOnKeyPress": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando o depurador é interrompido. Confira também `audioCues.onDebugBreak`.
	"accessibility.alert.breakpoint": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando uma solicitação de chat é enviada. Confira também `audioCues.chatRequestSent`.
	"accessibility.alert.chatRequestSent": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando uma resposta de chat está pendente. Confira também `audioCues.chatResponsePending`.
	"accessibility.alert.chatResponsePending": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando um recurso é limpo (por exemplo, o terminal, o Console de Depuração ou o canal de Saída). Confira também `audioCues.clear`.
	"accessibility.alert.clear": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando a linha ativa apresenta um erro. Confira também `audioCues.lineHasError`.
	"accessibility.alert.error": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando a linha ativa apresenta uma área dobrada que pode ser desdobrada. Confira também `audioCues.lineHasFoldedArea`.
	"accessibility.alert.foldedArea": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando a célula de um arquivo ou notebook é formatada. Confira também `audioCues.format`.
	//  - userGesture: Indica quando um arquivo é formatado por meio de gesto do usuário.
	//  - always: Indica sempre que um arquivo é formatado, incluindo salvamento automático, execução de célula e muito mais.
	//  - never: Nunca alertas.
	"accessibility.alert.format": "always",

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando em uma linha com um ponto de interrupção. Confira também `audioCues.lineHasBreakpoint`.
	"accessibility.alert.lineHasBreakpoint": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando não há dicas embutidas. Confira também `audioCues.noInlayHints`.
	"accessibility.alert.noInlayHints": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando uma célula do notebook é concluída com sucesso. Confira também `audioCues.notebookCellCompleted`.
	"accessibility.alert.notebookCellCompleted": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando uma célula do notebook falha. Confira também `audioCues.notebookCellFailed`.
	"accessibility.alert.notebookCellFailed": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando o depurador é interrompido. Confira também `audioCues.onDebugBreak`.
	"accessibility.alert.onDebugBreak": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando um arquivo é salvo. Confira também `audioCues.save`.
	//  - userGesture: Indica quando um arquivo é salvo por meio do gesto do usuário.
	//  - always: Indica sempre que um arquivo é salvo, incluindo o salvamento automático.
	//  - never: Nunca alertas.
	"accessibility.alert.save": "always",

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando uma tarefa é concluída com sucesso (código de saída zero). Confira também `audioCues.taskCompleted`.
	"accessibility.alert.taskCompleted": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando uma tarefa falha (código de saída diferente de zero). Confira também `audioCues.taskFailed`.
	"accessibility.alert.taskFailed": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando a campainha do terminal está ativado.
	"accessibility.alert.terminalBell": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando um comando do terminal falha (código de saída diferente de zero). Confira também `audioCues.terminalCommandFailed`.
	"accessibility.alert.terminalCommandFailed": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando há uma correção rápida do terminal disponível. Confira também `audioCues.terminalQuickFix`.
	"accessibility.alert.terminalQuickFix": true,

	// Esta configuração foi preterida. Em vez disso, use as configurações de `sinais`
	// Indica quando a linha ativa apresenta um aviso. Confira também `audioCues.lineHasWarning`.
	"accessibility.alert.warning": true,

	// Reproduz um sinal quando uma solicitação de chat é feita.
	"accessibility.signals.chatRequestSent": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal em loop enquanto a resposta está pendente.
	"accessibility.signals.chatResponsePending": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Indica quando a resposta foi recebida.
	"accessibility.signals.chatResponseReceived": {
		"sound": "auto"
	},

	// Reproduz um sinal quando um recurso é limpo (por exemplo, o terminal, o Console de Depuração ou o canal de Saída).
	"accessibility.signals.clear": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Se as mudanças de posição devem ou não ignorar a replicação
	"accessibility.signals.debouncePositionChanges": false,

	// Indica quando o foco passa para uma linha excluída no Modo do visualizador de Comparação Acessível ou para a alteração seguinte/anterior.
	"accessibility.signals.diffLineDeleted": {
		"sound": "auto"
	},

	// Indica quando o foco passa para uma linha inserida no Modo do visualizador de Comparação Acessível ou para a alteração seguinte/anterior.
	"accessibility.signals.diffLineInserted": {
		"sound": "auto"
	},

	// Indica quando o foco passa para uma linha modificada no Modo do visualizador de Comparação Acessível ou para a alteração seguinte/anterior.
	"accessibility.signals.diffLineModified": {
		"sound": "auto"
	},

	// Reproduz um sinal quando um arquivo ou notebook é formatado.
	"accessibility.signals.format": {
		"sound": "never",
		"announcement": "never"
	},

	// Reproduz um sinal quando a linha ativa apresenta um ponto de interrupção.
	"accessibility.signals.lineHasBreakpoint": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Indica quando a linha ativa apresenta um erro.
	"accessibility.signals.lineHasError": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Indica quando a linha ativa apresenta uma área dobrada que pode ser desdobrada.
	"accessibility.signals.lineHasFoldedArea": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Indica quando a linha ativa apresenta uma sugestão embutida.
	"accessibility.signals.lineHasInlineSuggestion": {
		"sound": "auto"
	},

	// Reproduz um sinal quando a linha ativa apresenta um aviso.
	"accessibility.signals.lineHasWarning": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal ao tentar ler uma linha com dicas embutidas que não tem dicas embutidas.
	"accessibility.signals.noInlayHints": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando a execução de uma célula do notebook é concluída com sucesso.
	"accessibility.signals.notebookCellCompleted": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando a execução de uma célula do notebook falha.
	"accessibility.signals.notebookCellFailed": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um som quando o depurador parou em um ponto de interrupção.
	"accessibility.signals.onDebugBreak": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando um arquivo é salvo.
	"accessibility.signals.save": {
		"sound": "never",
		"announcement": "never"
	},

	// O volume dos sons em porcentagem (0 - 100).
	"accessibility.signals.sounds.volume": 70,

	// Reproduz um sinal quando uma tarefa é concluída.
	"accessibility.signals.taskCompleted": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando uma tarefa falha (código de saída diferente de zero).
	"accessibility.signals.taskFailed": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando a campainha do terminal está tocando.
	"accessibility.signals.terminalBell": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando um comando do terminal falha (código de saída diferente de zero).
	"accessibility.signals.terminalCommandFailed": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Reproduz um sinal quando as Correções Rápidas do terminal estão disponíveis.
	"accessibility.signals.terminalQuickFix": {
		"sound": "auto",
		"announcement": "auto"
	},

	// Indicates when the voice recording has started.
	"accessibility.signals.voiceRecordingStarted": {
		"sound": "on"
	},

	// Indicates when the voice recording has stopped.
	"accessibility.signals.voiceRecordingStopped": {
		"sound": "auto"
	},

	// Forneça informações sobre ações que podem ser executadas no widget de comentário ou em um arquivo que contenha comentários.
	"accessibility.verbosity.comments": true,

	// Forneça informações sobre como navegar pelas alterações no editor de comparação quando ele estiver destacado.
	"accessibility.verbosity.diffEditor": true,

	// Indicate when a diff editor becomes the active editor.
	"accessibility.verbosity.diffEditorActive": true,

	// Forneça informações sobre ações relevantes em um editor de texto vazio.
	"accessibility.verbosity.emptyEditorHint": true,

	// Forneça informações sobre como abrir o foco em uma Exibição Acessível.
	"accessibility.verbosity.hover": true,

	// Fornece informações sobre como acessar o menu de ajuda de acessibilidade do chat do editor embutido e alerta com dicas que descrevem como usar o recurso quando a entrada estiver destacada.
	"accessibility.verbosity.inlineChat": true,

	// Forneça informações sobre como acessar o foco de conclusões embutidas e a Exibição Acessível.
	"accessibility.verbosity.inlineCompletions": true,

	// Forneça informações sobre como alterar uma associação de teclas no editor de associações de teclas quando uma linha estiver destacada.
	"accessibility.verbosity.keybindingsEditor": true,

	// Forneça informações sobre como focar o contêiner de célula ou o editor interno quando uma célula do bloco de anotações estiver em foco.
	"accessibility.verbosity.notebook": true,

	// Forneça informações sobre como abrir a notificação na Exibição Acessível.
	"accessibility.verbosity.notification": true,

	// Forneça informações sobre como acessar o menu de ajuda do chat quando a entrada do chat estiver em destaque.
	"accessibility.verbosity.panelChat": true,

	// Fornece informações sobre como acessar o menu de ajuda de acessibilidade do terminal quando o terminal estiver destacado.
	"accessibility.verbosity.terminal": true,

	// 
	//  - legacy: Usa o algoritmo de comparação herdado.
	//  - advanced: Usa o algoritmo de comparação avançada.
	"mergeEditor.diffAlgorithm": "advanced",

	// Controls if deletions in base or one of the inputs should be indicated by a vertical bar.
	"mergeEditor.showDeletionMarkers": true,

	// Enable experimental multi diff editor.
	"multiDiffEditor.experimental.enabled": true,

	// Controla a família de fontes nos blocos de código do chat.
	"chat.editor.fontFamily": "default",

	// Controla o tamanho da fonte em pixels nos blocos de código do chat.
	"chat.editor.fontSize": 12,

	// Controla a espessura da fonte nos blocos de código do chat.
	"chat.editor.fontWeight": "default",

	// Controla a altura da linha em pixels nos blocos de código do chat. Use 0 para calcular a altura da linha do tamanho da fonte.
	"chat.editor.lineHeight": 0,

	// Controla se as linhas devem ser encapsuladas em blocos de código do chat.
	"chat.editor.wordWrap": "off",

	// Controls whether a checkbox is shown to allow the user to determine which implicit context is included with a chat participant's prompt.
	"chat.experimental.implicitContext": false,

	// Uma matriz de linguagens na qual as abreviações Emmet não devem ser expandidas.
	"emmet.excludeLanguages": [
		"markdown"
	],

	// Uma matriz de caminhos, em que cada caminho pode conter Emmet syntaxProfiles e/ou arquivos de Snippet.
	// No caso de conflitos, os perfis/snippets de caminhos posteriores substituirão os caminhos anteriores.
	// Consulte https://code.visualstudio.com/docs/editor/emmet para obter mais informações e um arquivo de snippet de exemplo.
	"emmet.extensionsPath": [],

	// Habilitar as abreviações do Emmet em linguagens sem suporte por padrão. Adicione um mapeamento aqui entre a linguagem e a linguagem compatível com o Emmet.
	//  Por exemplo: `{"vue-html": "html", "javascript": "javascriptreact"}`
	"emmet.includeLanguages": {},

	// Quando esta opção está definida como `false`, o arquivo inteiro é analisado para determinar se a posição atual é válida para expandir as abreviações do Emmet. Quando definida como `true`, é analisado somente o conteúdo próximo da posição atual nos arquivos CSS/SCSS/Less.
	"emmet.optimizeStylesheetParsing": true,

	// Preferências usadas para modificar o comportamento de algumas ações e resolvedores do Emmet.
	"emmet.preferences": {},

	// Mostra possíveis abreviações do Emmet como sugestões. Não aplicável em folhas de estilos ou quando emmet.showExpandedAbbreviation está definido como `"never"`.
	"emmet.showAbbreviationSuggestions": true,

	// Mostra abreviações do Emmet expandidas como sugestões.
	// A opção `"inMarkupAndStylesheetFilesOnly"` aplica-se a html, haml, jade, slim, xml, xsl, css, scss, sass, less e stylus. 
	// A opção `"always"` aplica-se a todas as partes do arquivo, independentemente da marcação/css.
	"emmet.showExpandedAbbreviation": "always",

	// Se `true`, as sugestões do Emmet serão mostradas como snippets que permitem que você as ordene de acordo com a configuração `editor.snippetSuggestions`.
	"emmet.showSuggestionsAsSnippets": false,

	// Definir o perfil para a sintaxe especificada ou usar seu próprio perfil com regras específicas.
	"emmet.syntaxProfiles": {},

	// Quando habilitadas, as abreviações do Emmet são expandidas ao pressionar TAB, mesmo quando as conclusões não aparecem. Quando desativado, as conclusões que aparecem ainda podem ser aceitas pressionando TAB.
	"emmet.triggerExpansionOnTab": false,

	// Se `true`, o Emmet usará conclusões embutidas para sugerir expansões. Para evitar que o provedor de item de conclusão não embutido apareça com tanta frequência enquanto essa configuração for `true`, mude `editor.quickSuggestions` para `inline` ou `off` para o item `other`.
	"emmet.useInlineCompletions": false,

	// Variáveis a serem usadas em snippets do Emmet.
	"emmet.variables": {},

	// Controla se o envio forçado por push (com ou sem concessão) está habilitado.
	"git.allowForcePush": false,

	// Controla se as confirmações sem executar ganchos pre-commit e commit-msg são permitidas.
	"git.allowNoVerifyCommit": false,

	// Sempre mostrar o grupo de recursos Alterações em Etapas.
	"git.alwaysShowStagedChangesResourceGroup": false,

	// Controla o sinalizador de aprovação para todas as confirmações.
	"git.alwaysSignOff": false,

	// Quando esta opção estiver definida como true, os commits serão buscados automaticamente no repositório remoto padrão do repositório do Git atual. Quando ela estiver definida como `all` os commits serão buscados de todos os repositórios remotos.
	"git.autofetch": false,

	// Duração em segundos entre cada busca automática de git, quando `git.autofetch` está habilitado.
	"git.autofetchPeriod": 180,

	// Se a atualização automática está habilitada.
	"git.autorefresh": true,

	// Configura quando os repositórios devem ser detectados automaticamente.
	//  - true: Examinar as duas subpastas da pasta aberta no momento e das pastas pai de arquivos abertos.
	//  - false: Desabilitar verificação automática do repositório.
	//  - subFolders: Examinar subpastas da pasta aberta no momento.
	//  - openEditors: Examinar pastas pai de arquivos abertos.
	"git.autoRepositoryDetection": true,

	// Efetuar stash das alterações antes de acioná-las e restaurá-las após o êxito.
	"git.autoStash": false,

	// Prefixo usado ao criar um novo branch.
	"git.branchPrefix": "",

	// Lista de branches protegidos. Por padrão, um prompt é mostrado antes que as alterações sejam confirmadas em um branch protegido. O prompt pode ser controlado usando a configuração `git.branchProtectionPrompt`.
	"git.branchProtection": [],

	// Controla se um prompt está sendo mostrado antes que as alterações sejam confirmadas em um branch protegido.
	//  - alwaysCommit: Sempre faça commit nas alterações no branch protegido.
	//  - alwaysCommitToNewBranch: Sempre fazer commit nas alterações em um novo branch.
	//  - alwaysPrompt: Sempre solicitar antes que as alterações sejam confirmadas em um branch protegido.
	"git.branchProtectionPrompt": "alwaysPrompt",

	// Lista de dicionários usados para o nome do branch gerado aleatoriamente. Cada valor representa o dicionário usado para gerar o segmento do nome da ramificação. Dicionários suportados: `adjetivos`, `animais`, `cores` e `números`.
	//  - adjectives: Um adjetivo aleatório
	//  - animals: Um nome de animal aleatório
	//  - colors: Um nome de cor aleatório
	//  - numbers: Um número aleatório entre 100 e 999
	"git.branchRandomName.dictionary": [
		"adjectives",
		"animals"
	],

	// Controla se um nome aleatório é gerado ao criar um novo branch.
	"git.branchRandomName.enable": false,

	// Controla a ordem de classificação de ramificações.
	"git.branchSortOrder": "committerdate",

	// Uma expressão regular para validar novos nomes de branch.
	"git.branchValidationRegex": "",

	// O caractere para substituir o espaço em branco em novos nomes de branch e para separar segmentos de um nome de branch gerado aleatoriamente.
	"git.branchWhitespaceChar": "-",

	// Controla que tipo de referências do Git são listadas ao executar `Checkout to...`.
	//  - local: Branches locais
	//  - tags: Tags
	//  - remote: Branches remotos
	"git.checkoutType": [
		"local",
		"remote",
		"tags"
	],

	// Controla se o editor de comparação deve ser fechado automaticamente quando as alterações são ocultadas, confirmadas, descartadas, preparadas ou não.
	"git.closeDiffOnOperation": false,

	// Lista de comandos git (por exemplo: commit, push) que teriam seu 'stdout' registrado no [git output](command:git.showOutput). Se o comando git tiver um gancho do lado do cliente configurado, o 'stdout' do gancho do lado do cliente também será registrado no [git output](command:git.showOutput).
	"git.commandsToLog": [],

	// Sempre confirmar a criação de confirmações vazias para o comando 'Git: Commit Empty'.
	"git.confirmEmptyCommits": true,

	// Controla se é necessário solicitar confirmação antes de forçar o envio por push.
	"git.confirmForcePush": true,

	// Controla se deve solicitar confirmação antes de confirmar sem verificação.
	"git.confirmNoVerifyCommit": true,

	// Confirme antes de sincronizar os repositórios Git.
	"git.confirmSync": true,

	// Controla o selo da contagem de Git.
	//  - all: Contar todas as alterações.
	//  - tracked: Contar somente as alterações controladas.
	//  - off: Desligar o contador.
	"git.countBadge": "all",

	// Controla se o Git contribui com cores e selos para o Explorador e para a exibição Editores Abertos.
	"git.decorations.enabled": true,

	// O nome do branch padrão (exemplo: principal, tronco, desenvolvimento) ao inicializar um novo repositório Git. Quando definido como vazio, o nome do branch padrão configurado no Git será usado. **Observação:** Requer o Git versão `2.28.0` ou posterior.
	"git.defaultBranchName": "main",

	// O local padrão para clonar um repositório Git.
	"git.defaultCloneDirectory": null,

	// Controla se os submódulos do Git devem ser detectados automaticamente.
	"git.detectSubmodules": true,

	// Controla o limite de submódulos do Git detectados.
	"git.detectSubmodulesLimit": 10,

	// Habilita a assinatura de confirmação com GPG, X.509 ou SSH.
	"git.enableCommitSigning": false,

	// Se o Git está habilitado.
	"git.enabled": true,

	// Confirmar todas as alterações quando não houver alterações preparadas.
	"git.enableSmartCommit": false,

	// Controla se o comando de sincronização do Git aparece na barra de status.
	"git.enableStatusBarSync": true,

	// Quando habilitado, busque todas as ramificações efetuando pull. Caso contrário, busque apenas a atual.
	"git.fetchOnPull": false,

	// Envie todas as tags anotadas ao executar o comando de sincronização.
	"git.followTagsWhenSync": false,

	// This setting is now deprecated, please use `github.gitAuthentication` instead.
	// 
	"git.githubAuthentication": null,

	// Lista de repositórios Git a serem ignorados.
	"git.ignoredRepositories": [],

	// Ignora o aviso de Git herdado.
	"git.ignoreLegacyWarning": false,

	// Ignora o aviso quando há muitas alterações em um repositório.
	"git.ignoreLimitWarning": false,

	// Ignora o aviso quando o Git está ausente.
	"git.ignoreMissingGitWarning": false,

	// Ignora o aviso quando parece que a base do branch pode ter sido trocada ao efetuar pull.
	"git.ignoreRebaseWarning": false,

	// Ignorar as modificações em submódulos na árvore de arquivos.
	"git.ignoreSubmodules": false,

	// Ignora o aviso quando as versões 2.25 – 2.26 do Git estão instaladas no Windows.
	"git.ignoreWindowsGit27Warning": false,

	// Controla se devem ser mostrados os diagnósticos de validação de entrada da mensagem de confirmação.
	"git.inputValidation": false,

	// Controla o limite de tamanho da mensagem de confirmação para mostrar um aviso.
	"git.inputValidationLength": 72,

	// Controla o limite de comprimento do assunto da mensagem de confirmação para mostrar um aviso. Remover definição para herdar o valor de `git.inputValidationLength`.
	"git.inputValidationSubjectLength": 50,

	// Abra o editor de mesclagem para arquivos que estão atualmente em conflito.
	"git.mergeEditor": false,

	// Controla se um repositório deve ser aberto automaticamente após a clonagem.
	//  - always: Sempre abrir o repositório na janela atual.
	//  - alwaysNewWindow: Sempre abrir o repositório em uma nova janela.
	//  - whenNoFolderOpen: Abrir somente na janela atual quando não for aberta nenhuma pasta.
	//  - prompt: Sempre solicitar uma ação.
	"git.openAfterClone": "prompt",

	// Controla se o editor de comparação deve ser aberto ao clicar em uma alteração. Caso contrário, o editor regular será aberto.
	"git.openDiffOnClick": true,

	// Controle se um repositório em pastas pai de workspaces ou arquivos abertos deve ser aberto.
	//  - always: Sempre abra um repositório em pastas pai de workspaces ou arquivos abertos.
	//  - never: Nunca abra um repositório em pastas pai de workspaces ou arquivos abertos.
	//  - prompt: Avise antes de abrir um repositório nas pastas pai dos workspaces ou arquivos abertos.
	"git.openRepositoryInParentFolders": "prompt",

	// Controla se o estado da exibição do Controle do Código-Fonte deve ser atualizado de forma otimizada após a execução dos comandos git.
	"git.optimisticUpdate": true,

	// Caminho e nome de arquivo do executável git, por exemplo, `C:\Program Files\Git\bin\git.exe` (Windows). Isso também pode ser uma matriz de valores de cadeia de caracteres contendo vários caminhos para pesquisar.
	"git.path": null,

	// Execute um comando git após um commit bem-sucedido.
	//  - none: Não executar nenhum comando após uma confirmação.
	//  - push: Execute 'git push' após um commit bem-sucedido.
	//  - sync: Execute 'git pull' e 'git push' após um commit bem-sucedido.
	"git.postCommitCommand": "none",

	// Controla se o Git deve verificar arquivos não salvos antes de confirmar.
	//  - always: Verificar se há arquivos não salvos.
	//  - staged: Verificar somente os arquivos preparados não salvos.
	//  - never: Desabilitar esta verificação.
	"git.promptToSaveFilesBeforeCommit": "always",

	// Controla se o Git deve verificar se há arquivos não salvos antes de fazer stash das alterações.
	//  - always: Verificar se há arquivos não salvos.
	//  - staged: Verificar somente os arquivos preparados não salvos.
	//  - never: Desabilitar essa verificação.
	"git.promptToSaveFilesBeforeStash": "always",

	// Fazer a remoção durante a busca.
	"git.pruneOnFetch": false,

	// Controla se uma ramificação que não possui commits de saída é avançada antes do check-out.
	"git.pullBeforeCheckout": false,

	// Buscar todas as marcas ao efetuar pull.
	"git.pullTags": true,

	// Força o Git a usar a troca de base ao executar o comando de sincronização.
	"git.rebaseWhenSync": false,

	// Lembre-se do último comando git executado após um commit.
	"git.rememberPostCommitCommand": false,

	// Substitua automaticamente as marcas locais por marcas remotas em caso de conflito ao executar o comando pull.
	"git.replaceTagsWhenPull": false,

	// Lista de pastas ignoradas durante a verificação de repositórios Git quando '#git.autoRepositoryDetection#' está definido como 'true' ou 'subFolders'.
	"git.repositoryScanIgnoredFolders": [
		"node_modules"
	],

	// Controla a profundidade usada ao verificar as pastas do workspace para repositórios Git quando `git.autoRepositoryDetection` está definido como `true` ou` subFolders`. Pode ser definido como `-1` para nenhum limite.
	"git.repositoryScanMaxDepth": 1,

	// Controla se a configuração explícita do usuário do Git deve ser exigida ou se o Git pode adivinhar a configuração quando ela estiver ausente.
	"git.requireGitUserConfig": true,

	// Lista de caminhos para pesquisar os repositórios Git.
	"git.scanRepositories": [],

	// Controla se um botão de ação é mostrado na visualização Source Control.
	"git.showActionButton": {
		"commit": true,
		"publish": true,
		"sync": true
	},

	// Controla se a entrada de confirmação deve ser mostrada no painel de controle do código-fonte do Git.
	"git.showCommitInput": true,

	// Controla se uma ação de abertura de arquivo embutida deve ser mostrada no modo de exibição de alterações do Git.
	"git.showInlineOpenFileAction": true,

	// Controla se as ações do Git devem mostrar o progresso.
	"git.showProgress": true,

	// Controla se uma notificação deve ser mostrada quando um envio por push é bem-sucedido.
	"git.showPushSuccessNotification": false,

	// Controla o limite do índice de similaridade (a quantidade de adições/exclusões em comparação com o tamanho do arquivo) para que alterações em um par de arquivos adicionados/excluídos sejam consideradas uma renomeação. **Observação:** Requer o Git versão `2.18.0` ou posterior.
	"git.similarityThreshold": 50,

	// Controlar quais alterações são automaticamente testadas por Confirmação Inteligente.
	//  - all: Preparar automaticamente todas as alterações.
	//  - tracked: Somente preparar automaticamente as alterações controladas.
	"git.smartCommitChanges": "all",

	// Controla como limitar o número de alterações que podem ser analisadas a partir do comando de status do Git. Pode ser definido como 0 para nenhum limite.
	"git.statusLimit": 10000,

	// Sugere habilitar a confirmação inteligente (confirmar todas as alterações quando não há alterações preparadas).
	"git.suggestSmartCommit": true,

	// Controla se uma notificação aparece durante a execução da ação de sincronização, o que permite ao usuário cancelar a operação.
	"git.supportCancellation": false,

	// Controla se o VS Code deve ser habilitado para ser o manipulador de autenticação para processos Git gerados no Terminal Integrado. Observação: os terminais precisam ser reiniciados para haver uma alteração nesta configuração.
	"git.terminalAuthentication": true,

	// Controla se o VS Code deve ser ativado como editor git para processos git gerados no terminal integrado. Nota: Os terminais precisam ser reiniciados para detectar uma alteração nesta configuração.
	"git.terminalGitEditor": false,

	// Controla qual data deve ser usada para os itens na exibição Linha do tempo.
	//  - committed: Usar a data confirmada
	//  - authored: Usar a data de criação
	"git.timeline.date": "committed",

	// Controla se o autor do commit deve ser mostrado na exibição Linha do tempo.
	"git.timeline.showAuthor": true,

	// Controla se as alterações não confirmadas devem ser mostradas no modo de exibição de Linha do Tempo.
	"git.timeline.showUncommitted": false,

	// Controla como as alterações não controladas se comportam.
	//  - mixed: Todas as alterações, controladas e não controladas, aparecem juntas e se comportam igualmente.
	//  - separate: As alterações não controladas são exibidas separadamente no modo de exibição de Controle do Código-fonte. Elas também são excluídas de várias ações.
	//  - hidden: As alterações não controladas são ocultas e excluídas de várias ações.
	"git.untrackedChanges": "mixed",

	// Controla se a mensagem da caixa de entrada de commit deve ser usada como a mensagem de stash padrão.
	"git.useCommitInputAsStashMessage": false,

	// Controla se um editor de texto completo será usado para criar mensagens de confirmação, sempre que nenhuma mensagem for fornecida na caixa de entrada de confirmação.
	"git.useEditorAsCommitInput": true,

	// Controla se o envio forçado por push usa a variante force-if-includes mais segura. Observação: essa configuração requer que a configuração `git.useForcePushWithLease` esteja habilitada e a versão do Git `2.30.0` ou posterior.
	"git.useForcePushIfIncludes": true,

	// Controla se o envio por push forçado usa a variante force-with-lease mais segura.
	"git.useForcePushWithLease": true,

	// Controla se o GIT_ASKPASS deve ser substituído para usar a versão integrada.
	"git.useIntegratedAskPass": true,

	// Habilite a saída detalhada quando `git.useEditorAsCommitInput` estiver habilitado.
	"git.verboseCommit": false,

	// Controla se as regras do repositório devem ser consultadas para repositórios GitHub
	"github.branchProtection": true,

	// Controla se a autenticação automática do GitHub deve ser habilitada para comandos git no VS Code.
	"github.gitAuthentication": true,

	// Controla qual protocolo é utilizado para clonar um repositório do GitHub
	"github.gitProtocol": "https",

	// GitHub Enterprise Server URI
	"github-enterprise.uri": "",

	// Controla a habilitação da detecção de tarefas Grunt. A detecção de tarefas Grunt pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"grunt.autoDetect": "off",

	// Controla a habilitação da detecção de tarefas Gulp. A detecção de tarefas Gulp pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"gulp.autoDetect": "off",

	// Habilite/desabilite a colagem de imagens em células Markdown em arquivos de bloco de anotações ipynb. As imagens coladas são inseridas como anexos na célula.
	"ipynb.pasteImagesAsAttachments.enabled": true,

	// Controla a habilitação da detecção de tarefas Jake. A detecção de tarefas Jake pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"jake.autoDetect": "off",

	// Habilitar/desabilitar a matemática da renderização da visualização interna do Markdown.
	"markdown.math.enabled": true,

	// Uma coleção de macros personalizadas. Cada macro é um par chave-valor em que a chave é um novo nome de comando e o valor é a expansão da macro.
	"markdown.math.macros": {},

	// Comece a reproduzir vídeos com mudo ativado automaticamente.
	"mediaPreview.video.autoPlay": false,

	// Executar loop de vídeos mais uma vez automaticamente.
	"mediaPreview.video.loop": false,

	// Se é necessário navegar automaticamente até o próximo conflito de mesclagem após resolver um conflito de mesclagem.
	"merge-conflict.autoNavigateNextConflict.enabled": false,

	// Criar um CodeLens para blocos de conflitos de mesclagem no editor.
	"merge-conflict.codeLens.enabled": true,

	// Criar decoradores para blocos de conflitos de mesclagem no editor.
	"merge-conflict.decorators.enabled": true,

	// Controla onde a exibição de comparação deve ser aberta ao comparar as alterações nos conflitos de mesclagem.
	//  - Current: Abrir o modo de exibição de comparação no grupo do editor atual.
	//  - Beside: Abrir o modo de exibição de comparação próximo ao grupo do editor atual.
	//  - Below: Abrir o modo de exibição de comparação abaixo do grupo do editor atual.
	"merge-conflict.diffViewPosition": "Current",

	// A configuração personalizada para a Nuvem Soberana usar com o provedor de autenticação da Nuvem Soberana da Microsoft. Isso junto com a configuração `microsoft-sovereign-cloud.environment` como `custom` é necessário para usar este recurso.
	"microsoft-sovereign-cloud.customEnvironment": {},

	// A Nuvem Soberana a ser usado para autenticação. Se você selecionar `custom`, também deverá definir a configuração `microsoft-sovereign-cloud.customEnvironment`.
	//  - ChinaCloud: Azure China
	//  - USGovernment: Governo dos EUA do Azure
	//  - custom: Um Microsoft Sovereign Cloud personalizado
	"microsoft-sovereign-cloud.environment": "",

	// Configura quais processos serão anexados e depurados automaticamente quando `debug.node.autoAttach` estiver ativado. Um processo do Node iniciado com o sinalizador `--inspect` sempre receberá um anexo, independentemente desta configuração.
	//  - always: Anexar automaticamente a cada processo do Node.js iniciado no terminal.
	//  - smart: Anexar automaticamente ao executar scripts que não estão em uma pasta node_modules.
	//  - onlyWithFlag: Somente anexar automaticamente quando o `--inspect` for fornecido.
	//  - disabled: A anexação automática está desativada e não é mostrada na barra de status. 
	"debug.javascript.autoAttachFilter": "disabled",

	// Configura padrões glob para determinar quando fazer a anexação no modo "inteligente" `debug.javascript.autoAttachFilter`. `$KNOWN_TOOLS$` é substituído por uma lista de nomes de executores comuns de código e de teste. [Leia mais nos documentos do VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).
	"debug.javascript.autoAttachSmartPattern": [
		"${workspaceFolder}/**",
		"!**/node_modules/**",
		"**/$KNOWN_TOOLS$/**"
	],

	// When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.
	"debug.javascript.automaticallyTunnelRemoteServer": true,

	// Se deve parar quando os pontos de interrupção condicionais lançam um erro.
	"debug.javascript.breakOnConditionalError": false,

	// Onde uma lente de código "Executar" e "Depurar" deve ser mostrada nos seus scripts npm. Pode estar em "todos" os scripts, na "parte superior" da seção de scripts ou "nunca".
	"debug.javascript.codelens.npmScripts": "top",

	// Options used when debugging open links clicked from inside the debug terminal. Can be set to "false" to disable this behavior.
	"debug.javascript.debugByLinkOptions": "on",

	// Se não for especificada, esta opção será o `runtimeExecutable` padrão usado para configurações de inicialização. Ela pode ser usada para configurar caminhos personalizados para o Node.js ou para as instalações do navegador.
	"debug.javascript.defaultRuntimeExecutable": {
		"pwa-node": "node"
	},

	// Opções padrão usadas durante a depuração de um processo usando o comando `Debug: Attach to Node.js Process`
	"debug.javascript.pickAndAttachOptions": {},

	// Opções de solicitação a serem usadas ao carregar recursos, como source maps, no depurador. Talvez seja necessário configurá-las se os sourcemaps exigem autenticação ou usam um certificado autoassinado, por exemplo. As opções são usadas para criar uma solicitação com a biblioteca [`got`](https://github.com/sindresorhus/got) library.
	// 
	// Um caso comum para desabilitar a verificação de certificado pode ser feito passando `{ "https": { "rejectUnauthorized": false } }`.
	"debug.javascript.resourceRequestOptions": {},

	// Opções de inicialização padrão para o terminal de depuração JavaScript e scripts npm.
	"debug.javascript.terminalOptions": {},

	// Configura se o arquivo sourcemapped em que o arquivo original não pode ser lido será desmapeado automaticamente. Se essa configuração for false (padrão), um prompt será exibido.
	"debug.javascript.unmapMissingSources": false,

	// Controla se os scripts npm devem ser automaticamente detectados.
	"npm.autoDetect": "on",

	// Habilitar a execução de scripts npm contidos em uma pasta no menu de contexto do Explorador.
	"npm.enableRunFromFolder": false,

	// The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.
	// Habilitar um modo de exibição do explorador para scripts npm quando não houver arquivo 'package.json' de nível superior.
	"npm.enableScriptExplorer": false,

	// Configurar padrões glob para pastas que devem ser excluídas da detecção automática de script.
	"npm.exclude": "",

	// Buscar dados de https://registry.npmjs.org e https://registry.bower.io para fornecer preenchimento automático e informações sobre os recursos de foco em dependências npm.
	"npm.fetchOnlinePackageInfo": true,

	// O gerenciador de pacotes usado para executar scripts.
	//  - auto: Detectar automaticamente qual gerenciador de pacotes deve ser usado para executar scripts com base nos arquivos de bloqueio e nos gerenciadores de pacotes instalados.
	//  - npm: Usar o npm como o gerenciador de pacotes para executar scripts.
	//  - yarn: Usar o YARN como o gerenciador de pacotes para executar scripts.
	//  - pnpm: Usar o pnpm como o gerenciador de pacotes para executar scripts.
	//  - bun: Use bun como o gerenciador de pacotes para executar scripts.
	"npm.packageManager": "auto",

	// Execute comandos npm com a opção `--silent`.
	"npm.runSilent": false,

	// A ação de clique padrão usada no Explorador de Scripts NPM: `open` ou `run`, o padrão é `open`.
	"npm.scriptExplorerAction": "open",

	// Uma matriz de expressões regulares que indicam quais scripts devem ser excluídos da exibição de Scripts NPM.
	"npm.scriptExplorerExclude": [],

	// Exiba o foco com os comandos 'Executar' e 'Depurar' para scripts.
	"npm.scriptHover": true,

	// Controla se 'Espiar Referências' ou 'Localizar Referências' é invocado ao selecionar referências do CodeLens.
	//  - peek: Mostrar referências no editor de espiada.
	//  - view: Mostrar referências em modo de exibição separado.
	"references.preferredLocation": "peek",

	// Habilita/desabilita o indicador flutuante que é exibido quando focalizado no navegador simples.
	"simpleBrowser.focusLockIndicator.enabled": true,

	// Activates the i18n features for snippets (eg.: _(""))
	"django.i18n": true,

	// Seldom show notifications about this extension
	"django.showContributeNotification": true,

	// Exclude Python snippets by their file name. Can be 'import', 'postgres'...
	"django.snippets.exclude": [
		"cms",
		"wagtail"
	],

	// Activates the Python snippets
	"django.snippets.use": true,

	// Resolves `ArrayAccess` and `Traversable` implementations that are unioned with a typed array to generic syntax. eg `ArrayAccessOrTraversable|ElementType[]` => `ArrayAccessOrTraversable<mixed, ElementType>`.
	"intelephense.compatibility.correctForArrayAccessArrayAndTraversableArrayUnionTypes": true,

	// Resolves `BaseClass|static` union types to `static` instead of `BaseClass`.
	"intelephense.compatibility.correctForBaseClassStaticUnionTypes": true,

	// Global namespace constants and functions will be fully qualified (prefixed with a backslash).
	"intelephense.completion.fullyQualifyGlobalConstantsAndFunctions": false,

	// Use declarations will be automatically inserted for namespaced classes, traits, interfaces, functions, and constants.
	"intelephense.completion.insertUseDeclaration": true,

	// The maximum number of completion items returned per request.
	"intelephense.completion.maxItems": 100,

	// Method and function completions will include parentheses and trigger parameter hints.
	"intelephense.completion.triggerParameterHints": true,

	// Enables argument count diagnostics.
	"intelephense.diagnostics.argumentCount": true,

	// Enables deprecated diagnostics.
	"intelephense.diagnostics.deprecated": true,

	// Enables duplicate symbol diagnostics.
	"intelephense.diagnostics.duplicateSymbols": true,

	// Enables diagnostics in embedded languages.
	"intelephense.diagnostics.embeddedLanguages": true,

	// Enables diagnostics.
	"intelephense.diagnostics.enable": true,

	// Enables reporting of problems associated with method and class implementations. For example, unimplemented methods or method signature incompatibilities.
	"intelephense.diagnostics.implementationErrors": true,

	// Enables reporting of various language constraint errors.
	"intelephense.diagnostics.languageConstraints": true,

	// Controls when diagnostics are run.
	//  - onType: Diagnostics will run as changes are made to the document.
	//  - onSave: Diagnostics will run when the document is saved.
	"intelephense.diagnostics.run": "onType",

	// Enables diagnostics on type compatibility of arguments, property assignments, and return statements where types have been declared.
	"intelephense.diagnostics.typeErrors": true,

	// Enables undefined class constant diagnostics.
	"intelephense.diagnostics.undefinedClassConstants": true,

	// Enables undefined constant diagnostics.
	"intelephense.diagnostics.undefinedConstants": true,

	// Enables undefined function diagnostics.
	"intelephense.diagnostics.undefinedFunctions": true,

	// Enables undefined method diagnostics.
	"intelephense.diagnostics.undefinedMethods": true,

	// Enables undefined static property diagnostics.
	"intelephense.diagnostics.undefinedProperties": true,

	// DEPRECATED. Use the setting for each symbol category.
	"intelephense.diagnostics.undefinedSymbols": true,

	// Enables undefined class, interface and trait diagnostics.
	"intelephense.diagnostics.undefinedTypes": true,

	// Enables undefined variable diagnostics.
	"intelephense.diagnostics.undefinedVariables": true,

	// Enables unexpected token diagnostics.
	"intelephense.diagnostics.unexpectedTokens": true,

	// Enables unused variable, private member, and import diagnostics.
	"intelephense.diagnostics.unusedSymbols": true,

	// The directory of the entry point to the application (directory of index.php). Can be absolute or relative to the workspace folder. Used for resolving script inclusion and path suggestions.
	"intelephense.environment.documentRoot": "",

	// The include paths (as individual path items) as defined in the include_path ini setting or paths to external libraries. Can be absolute or relative to the workspace folder. Used for resolving script inclusion and/or adding external symbols to folder.
	"intelephense.environment.includePaths": [],

	// A semver compatible string that represents the target PHP version. Used for providing version appropriate suggestions and diagnostics. PHP 5.3.0 and greater supported.
	"intelephense.environment.phpVersion": "8.3.0",

	// When enabled '<?' will be parsed as a PHP open tag. Defaults to true.
	"intelephense.environment.shortOpenTag": true,

	// Configure glob patterns to make files available for language server features. Inherits from files.associations.
	"intelephense.files.associations": [
		"*.php",
		"*.phtml"
	],

	// Configure glob patterns to exclude certain files and folders from all language server features. Inherits from files.exclude.
	"intelephense.files.exclude": [
		"**/.git/**",
		"**/.svn/**",
		"**/.hg/**",
		"**/CVS/**",
		"**/.DS_Store/**",
		"**/node_modules/**",
		"**/bower_components/**",
		"**/vendor/**/{Tests,tests}/**",
		"**/.history/**",
		"**/vendor/**/vendor/**"
	],

	// Maximum file size in bytes.
	"intelephense.files.maxSize": 1000000,

	// Controls formatting style of braces
	//  - psr12: PHP-FIG PSR-2 and PSR-12 style. A mix of Allman and K&R
	//  - allman: Allman. Opening brace on the next line.
	//  - k&r: K&R (1TBS). Opening brace on the same line.
	"intelephense.format.braces": "psr12",

	// Enables formatting.
	"intelephense.format.enable": true,

	// DEPRECATED. Don't use this. Go to command palette and search for enter licence key.
	"intelephense.licenceKey": "",

	// Maximum memory (in MB) that the server should use. On some systems this may only have effect when runtime has been set. Minimum 256.
	"intelephense.maxMemory": 0,

	// An object that describes the format of generated class/interface/trait phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.
	"intelephense.phpdoc.classTemplate": {
		"summary": "$1",
		"tags": [
			"@package ${1:$SYMBOL_NAMESPACE}"
		]
	},

	// An object that describes the format of generated function/method phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.
	"intelephense.phpdoc.functionTemplate": {
		"summary": "$1",
		"tags": [
			"@param ${1:$SYMBOL_TYPE} $SYMBOL_NAME $2",
			"@return ${1:$SYMBOL_TYPE} $2",
			"@throws ${1:$SYMBOL_TYPE} $2"
		]
	},

	// An object that describes the format of generated property phpdoc. The following snippet variables are available: SYMBOL_NAME; SYMBOL_KIND; SYMBOL_TYPE; SYMBOL_NAMESPACE.
	"intelephense.phpdoc.propertyTemplate": {
		"summary": "$1",
		"tags": [
			"@var ${1:$SYMBOL_TYPE}"
		]
	},

	// Adds `@return void` to auto generated phpdoc for definitions that do not return a value.
	"intelephense.phpdoc.returnVoid": true,

	// 
	//  - snippet: Auto generated phpdoc is returned in snippet format. Templates are partially resolved by evaluating phpdoc specific variables only.
	//  - text: Auto generated phpdoc is returned as plain text. Templates are resolved completely by the server.
	"intelephense.phpdoc.textFormat": "snippet",

	// Fully qualified names will be used for types when true. When false short type names will be used and imported where appropriate. Overrides intelephense.completion.insertUseDeclaration.
	"intelephense.phpdoc.useFullyQualifiedNames": false,

	// Glob patterns matching files and folders that should be excluded from references search.
	"intelephense.references.exclude": [
		"**/vendor/**"
	],

	// Glob patterns matching files and folders that should be excluded when renaming symbols. Rename operation will fail if the symbol definition is found in the excluded files/folders.
	"intelephense.rename.exclude": [
		"**/vendor/**"
	],

	// Controls the scope of a namespace rename operation.
	//  - single: Only symbols defined in the current file are affected. For example, this makes a rename of a namespace the equivalent of a single move class operation.
	//  - all: All symbols that share this namespace, not necessarily defined in the current file will be affected. For example it would move all classes that share this namespace to the new namespace.
	"intelephense.rename.namespaceMode": "single",

	// Path to a Node.js executable. Use this if you wish to use a different version of Node.js. Defaults to Node.js shipped with VSCode.
	"intelephense.runtime": "",

	// Configure stub files for built in symbols and common extensions. The default setting includes PHP core and all bundled extensions.
	"intelephense.stubs": [
		"apache",
		"bcmath",
		"bz2",
		"calendar",
		"com_dotnet",
		"Core",
		"ctype",
		"curl",
		"date",
		"dba",
		"dom",
		"enchant",
		"exif",
		"FFI",
		"fileinfo",
		"filter",
		"fpm",
		"ftp",
		"gd",
		"gettext",
		"gmp",
		"hash",
		"iconv",
		"imap",
		"intl",
		"json",
		"ldap",
		"libxml",
		"mbstring",
		"meta",
		"mysqli",
		"oci8",
		"odbc",
		"openssl",
		"pcntl",
		"pcre",
		"PDO",
		"pdo_ibm",
		"pdo_mysql",
		"pdo_pgsql",
		"pdo_sqlite",
		"pgsql",
		"Phar",
		"posix",
		"pspell",
		"random",
		"readline",
		"Reflection",
		"session",
		"shmop",
		"SimpleXML",
		"snmp",
		"soap",
		"sockets",
		"sodium",
		"SPL",
		"sqlite3",
		"standard",
		"superglobals",
		"sysvmsg",
		"sysvsem",
		"sysvshm",
		"tidy",
		"tokenizer",
		"xml",
		"xmlreader",
		"xmlrpc",
		"xmlwriter",
		"xsl",
		"Zend OPcache",
		"zip",
		"zlib"
	],

	// Anonymous usage and crash data will be sent to Azure Application Insights. Inherits from telemetry.enableTelemetry.
	"intelephense.telemetry.enabled": null,

	// Traces the communication between VSCode and the intelephense language server.
	"intelephense.trace.server": "off",

	// Always prompt with repository picker when running Git History
	"gitHistory.alwaysPromptRepositoryPicker": false,

	// Avatar image cache expiration (0 = cache disabled)
	"gitHistory.avatarCacheExpiration": 60,

	// Prefer to open repository (instead of file) when pressing the editor title button
	"gitHistory.editorTitleButtonOpenRepo": false,

	// Whether to display the commit explorer view
	"gitHistory.hideCommitViewExplorer": false,

	// Include remote branches when opening Git History
	"gitHistory.includeRemoteBranches": false,

	// Output log information
	"gitHistory.logLevel": "Info",

	// Default number of items to be displayed in Git History Viewer
	"gitHistory.pageSize": 100,

	// Whether to display a button in the editor title menu bar
	"gitHistory.showEditorTitleMenuBarIcons": true,

	// Split show file history when file is active.
	"gitHistory.showFileHistorySplit": true,

	// Show commit details in side-by-side view
	"gitHistory.sideBySide": false,

	// Specifies where the 'Git: View History' action appears on the title of SCM Providers.
	//  - Inline: Show the 'Git: View History' action on the title of SCM Providers
	//  - More Actions: Show the 'Git: View History' action in the 'More Actions...' menu on the title of SCM Providers
	"gitHistory.sourceCodeProviderIntegrationLocation": "Inline",

	// Whether to clear previous output before each run.
	"code-runner.clearPreviousOutput": false,

	// Set the custom command to run.
	"code-runner.customCommand": "echo Hello",

	// Set the working directory.
	"code-runner.cwd": "",

	// Set the default language to run.
	"code-runner.defaultLanguage": "",

	// Whether to enable AppInsights to track user telemetry data.
	"code-runner.enableAppInsights": true,

	// Set the executor of each language.
	"code-runner.executorMap": {
		"javascript": "node",
		"java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
		"c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"zig": "zig run",
		"cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"php": "php",
		"python": "python -u",
		"perl": "perl",
		"perl6": "perl6",
		"ruby": "ruby",
		"go": "go run",
		"lua": "lua",
		"groovy": "groovy",
		"powershell": "powershell -ExecutionPolicy ByPass -File",
		"bat": "cmd /c",
		"shellscript": "bash",
		"fsharp": "fsi",
		"csharp": "scriptcs",
		"vbscript": "cscript //Nologo",
		"typescript": "ts-node",
		"coffeescript": "coffee",
		"scala": "scala",
		"swift": "swift",
		"julia": "julia",
		"crystal": "crystal",
		"ocaml": "ocaml",
		"r": "Rscript",
		"applescript": "osascript",
		"clojure": "lein exec",
		"haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
		"rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
		"racket": "racket",
		"scheme": "csi -script",
		"ahk": "autohotkey",
		"autoit": "autoit3",
		"dart": "dart",
		"pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
		"d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
		"haskell": "runghc",
		"nim": "nim compile --verbosity:0 --hints:off --run",
		"lisp": "sbcl --script",
		"kit": "kitc --run",
		"v": "v run",
		"sass": "sass --style expanded",
		"scss": "scss --style expanded",
		"less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
		"FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		"sml": "cd $dir && sml $fileName",
		"mojo": "mojo run",
		"erlang": "escript",
		"spwn": "spwn build",
		"pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
		"gleam": "gleam run -m $fileNameWithoutExt"
	},

	// Set the executor of each file extension.
	"code-runner.executorMapByFileExtension": {
		".vb": "cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",
		".vbs": "cscript //Nologo",
		".scala": "scala",
		".jl": "julia",
		".cr": "crystal",
		".ml": "ocaml",
		".zig": "zig run",
		".exs": "elixir",
		".hx": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
		".rkt": "racket",
		".scm": "csi -script",
		".ahk": "autohotkey",
		".au3": "autoit3",
		".kt": "cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",
		".kts": "kotlinc -script",
		".dart": "dart",
		".pas": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
		".pp": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
		".d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
		".hs": "runhaskell",
		".nim": "nim compile --verbosity:0 --hints:off --run",
		".csproj": "dotnet run --project",
		".fsproj": "dotnet run --project",
		".lisp": "sbcl --script",
		".kit": "kitc --run",
		".v": "v run",
		".vsh": "v run",
		".sass": "sass --style expanded",
		".cu": "cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
		".ring": "ring",
		".sml": "cd $dir && sml $fileName",
		".mojo": "mojo run",
		".erl": "escript",
		".spwn": "spwn build",
		".pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
		".gleam": "gleam run -m $fileNameWithoutExt"
	},

	// Set the executor by glob.
	"code-runner.executorMapByGlob": {
		"pom.xml": "cd $dir && mvn clean package"
	},

	// Whether to use the directory of the file to be executed as the working directory.
	"code-runner.fileDirectoryAsCwd": false,

	// Whether to ignore selection to always run entire file.
	"code-runner.ignoreSelection": false,

	// Set the mapping of languageId to file extension.
	"code-runner.languageIdToFileExtensionMap": {
		"bat": ".bat",
		"powershell": ".ps1",
		"typescript": ".ts"
	},

	// Whether to preserve focus on code editor after code run is triggered.
	"code-runner.preserveFocus": true,

	// Whether to respect Shebang to run code.
	"code-runner.respectShebang": true,

	// Whether to run code in Integrated Terminal.
	"code-runner.runInTerminal": false,

	// Whether to save all files before running.
	"code-runner.saveAllFilesBeforeRun": false,

	// Whether to save the current file before running.
	"code-runner.saveFileBeforeRun": false,

	// Whether to show extra execution message like [Running] ... and [Done] ...
	"code-runner.showExecutionMessage": true,

	// Whether to show 'Run Code' command in editor context menu.
	"code-runner.showRunCommandInEditorContextMenu": true,

	// Whether to show 'Run Code' command in explorer context menu.
	"code-runner.showRunCommandInExplorerContextMenu": true,

	// Whether to show 'Run Code' icon in editor title menu.
	"code-runner.showRunIconInEditorTitleMenu": true,

	// Whether to show 'Stop code run' icon in the editor title menu when code is running.
	"code-runner.showStopIconInEditorTitleMenu": true,

	// Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.
	"code-runner.temporaryFileName": "tempCodeRunnerFile",

	// For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\path' with '/mnt/c/path'
	"code-runner.terminalRoot": "",

	// 
	"github.copilot.advanced": {},

	// Automatically show inline completions
	"github.copilot.editor.enableAutoCompletions": true,

	// Enable or disable Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)
	"github.copilot.enable": {
		"*": true,
		"plaintext": false,
		"markdown": false,
		"scminput": false
	},

	// Deprecated: Please use github.copilot.editor.enableAutoCompletions instead.
	// Show inline suggestions
	"github.copilot.inlineSuggest.enable": true,

	// Habilitar a intenção experimental `/fixTestFailure`.
	"github.copilot.chat.fixTestFailures": false,

	// Especifique uma localidade na qual o Copilot deve responder, por exemplo. `en` ou `fr`. Por padrão, o Copilot responderá usando a localidade do idioma de exibição configurada do VS Code.
	//  - auto: Use VS Code's configured display language
	//  - en: English
	//  - fr: français
	//  - it: italiano
	//  - de: Deutsch
	//  - es: español
	//  - ru: русский
	//  - zh-CN: 中文(简体)
	//  - zh-TW: 中文(繁體)
	//  - ja: 日本語
	//  - ko: 한국어
	//  - cs: čeština
	//  - pt-br: português
	//  - tr: Türkçe
	//  - pl: polski
	"github.copilot.chat.localeOverride": "auto",

	// Se o usuário deve ser solicitado a selecionar um escopo de símbolo específico se ele usar `/explain` e o editor ativo não tiver nenhuma seleção.
	"github.copilot.chat.scopeSelection": false,

	// Controla onde as consultas char do terminal devem ser abertas.
	//  - chatView: Abra o modo de exibição de chat.
	//  - quickChat: Abra o chat rápido.
	"github.copilot.chat.terminalChatLocation": "chatView",

	// Usar projetos relevantes do GitHub como projetos de início ao utilizar "/new"
	"github.copilot.chat.useProjectTemplates": true,

	// Controle quando mostrar a mensagem detalhada do chat de boas-vindas.
	//  - first: Mostrar a mensagem de boas-vindas uma vez por sessão
	//  - always: Sempre mostre a mensagem de boas-vindas detalhada
	//  - never: Nunca mostre a mensagem de boas-vindas detalhada
	"github.copilot.chat.welcomeMessage": "first",

	// Habilitar/desabilitar ações de código do Copilot
	"github.copilot.editor.enableCodeActions": true,

	// When `latex-workshop.bibtex-fields.sort.enabled` is true, these fields are put at the top, in the order defined by the array.
	"latex-workshop.bibtex-entries.first": [
		"string",
		"xdata"
	],

	// When `latex-workshop.bibtex-fields.sort.enabled` is true, sort fields according the order defined here and then alphabetically for non listed fields.
	"latex-workshop.bibtex-fields.order": [],

	// Sort fields inside every entry. The sorting order is defined by `latex-workshop.bibtex-fields.order`. This variable only has effect when formatting bibtex aligns fields. It is not possible to sort entries without aligning them.
	"latex-workshop.bibtex-fields.sort.enabled": false,

	// Align equal signs when calling VSCode format on a .bib file.
	"latex-workshop.bibtex-format.align-equal.enabled": true,

	// Determines if field names should be formatted like 'AUTHOR' or 'author'.
	"latex-workshop.bibtex-format.case": "lowercase",

	// How to handle duplicates found by the bibtex sorting functions. Duplicates are decided according to the `bibtex-format.sortby` config.
	"latex-workshop.bibtex-format.handleDuplicates": "Highlight Duplicates",

	// Sort content when calling VSCode format on a .bib file.
	"latex-workshop.bibtex-format.sort.enabled": false,

	// An array of strings to sort by. Either a bibtex field name (title, author, year, etc.), or `"year-desc"` to sort by year in descending order, or `"key"` for the entry key, or `"type"` for the entry type (article, book, misc, etc.). E.g. `["author", "year-desc", "title"]`.
	"latex-workshop.bibtex-format.sortby": [
		"key"
	],

	// Surround each field value with either {Curly braces} or "Quotation marks".
	"latex-workshop.bibtex-format.surround": "Curly braces",

	// Indentation for each field. The string can be `"tab"` or of the form `"X spaces"` or simply `"X"` where `X` is a number.
	"latex-workshop.bibtex-format.tab": "2 spaces",

	// Keep the trailing comma of the last field item.
	"latex-workshop.bibtex-format.trailingComma": false,

	// Defines the maximum bibtex file size for the extension to parse in MB.
	"latex-workshop.bibtex.maxFileSize": 5,

	// Use alternative keymap combo, i.e., `ctrl`+`l` `alt`+`key`, to replace the default `ctrl`/`cmd`+`alt` shortcuts.
	"latex-workshop.bind.altKeymap.enabled": false,

	// Enable the automatic insertion of `\item` on a newline when pressing `Enter` in a line starting in `\item`.
	"latex-workshop.bind.enter.key": true,

	// Enable checking for duplicated labels. A new check is triggered every time the intellisense data is updated, see `latex-workshop.intellisense.update.aggressive.enabled`.
	"latex-workshop.check.duplicatedLabels.enabled": true,

	// Delay to wait for GitHub Codespaces Authentication of port forwarding to be resolved, in milliseconds.
	"latex-workshop.codespaces.portforwarding.openDelay": 20000,

	// Enable docker-based LaTeX distribution support. Do not set this item to `true` unless you are aware of what it means. This extension will use the images defined in `latex-workshop.docker.image.latex` to execute `latexmk`, `synctex`, `texcount`, and `latexindent`.
	"latex-workshop.docker.enabled": false,

	// Define the image for `latexmk`, `synctex`, `texcount`, and `latexindent`.
	"latex-workshop.docker.image.latex": "",

	// Enable Hover on Citations.
	"latex-workshop.hover.citation.enabled": true,

	// Enable Hover on Commands to show the possible signatures.
	"latex-workshop.hover.command.enabled": true,

	// The color of cursor in Hover Preview.
	"latex-workshop.hover.preview.cursor.color": "auto",

	// Render cursor in Hover Preview at the current position.
	"latex-workshop.hover.preview.cursor.enabled": true,

	// Cursor symbol in Hover Preview.
	"latex-workshop.hover.preview.cursor.symbol": "\\!|\\!",

	// Enable Hover Preview.
	"latex-workshop.hover.preview.enabled": true,

	// MathJax extensions to load for Hover Preview. See [the list](https://docs.mathjax.org/en/latest/input/tex/extensions/index.html). Note that the following extensions are loaded by default: `ams`, `color`, `newcommand`, `noerrors`, and `noundefined`. They cannot be disabled.
	"latex-workshop.hover.preview.mathjax.extensions": [],

	// Maximum number of lines between the beginning of the math environment and the cursor position to allow preview.
	"latex-workshop.hover.preview.maxLines": 20,

	// Set the path of a file containing newcommands to be used in Hover Preview. If the path is relative, it is joined with the root dir.
	"latex-workshop.hover.preview.newcommand.newcommandFile": "",

	// Enable newcommands defined in the current TeX file to be included in Hover Preview.
	"latex-workshop.hover.preview.newcommand.parseTeXFile.enabled": true,

	// Scaling of Hover Preview.
	"latex-workshop.hover.preview.scale": 1,

	// Enable Hover on References.
	"latex-workshop.hover.ref.enabled": true,

	// Show number assigned to the reference in the previous compilation.
	"latex-workshop.hover.ref.number.enabled": true,

	// Many snippets use text hints of the form `${\d:some_tex}` for their argument. You may prefer to hide instead by setting this configuration to `false`.
	"latex-workshop.intellisense.argumentHint.enabled": true,

	// Character to trigger snippet suggestions as part of intellisense. Set this variable to `''` to deactivate these suggestions.
	"latex-workshop.intellisense.atSuggestion.trigger.latex": "@",

	// Dictionary of `"@prefix": "snippet command"` to add to, replace, or remove the default suggestions in `data/at-suggestions.json`. The key of the dictionary is the triggering string, which **must** starts with `@` regardless of `latex-workshop.intellisense.atSuggestion.trigger.latex`. The value of the dictionary is the snippet to be inserted. If the key is identical to a default snippet defined in `data/at-suggestions.json`, the new value in the dictionary is used for suggestion. If the value is an empty string, the snippet is removed from suggestion. For example, `{ "@.": "\cdot", "@6": "" }`.
	"latex-workshop.intellisense.atSuggestion.user": {},

	// Dictionary of `"entry name": ["array", "of", "fields"]` to replace the default fields used in `data/biblatex-entries.json`. See `data/biblatex-entries.json` for the list of fields for each entry. This variable is used when `latex-workshop.intellisense.citation.backend` is set to `biblatex`.
	"latex-workshop.intellisense.biblatexJSON.replace": {},

	// Dictionary of `"entry name": ["array", "of", "fields"]` to replace the default fields used in `data/bibtex-entries.json`. See `data/bibtex-entries.json` for the list of fields for each entry. This variable is used when `latex-workshop.intellisense.citation.backend` is set to `bibtex`.
	"latex-workshop.intellisense.bibtexJSON.replace": {},

	// Backend to use for citation intellisense.
	"latex-workshop.intellisense.citation.backend": "bibtex",

	// List of fields to display for citation preview and intellisense. This list is also used as the filter text to narrow down the intellisense suggestions.
	"latex-workshop.intellisense.citation.format": [
		"author",
		"title",
		"journal",
		"publisher",
		"booktitle",
		"year"
	],

	// Defines what to show as suggestion labels when intellisense provides citation suggestions in inline mode.
	//  - bibtex key: Show bibtex keys in the inline mode.
	//  - title: Show publication titles in the inline mode.
	//  - authors: Show publication authors in the inline mode.
	"latex-workshop.intellisense.citation.label": "bibtex key",

	// Defines which type of hint to show when intellisense provides citation suggestions.
	//  - inline: Use the inline intellisense to provide citation completion items.
	//  - browser: Use a dropdown menu to provide citation completion items.
	"latex-workshop.intellisense.citation.type": "inline",

	// Dictionary of `"command name": "command snippet"` to add to, replace, or remove the default ones in `data/commands.json`. The key of the dictionary is the command name with optional braces indicating the command arguments. The value of the dictionary is the snippet to be inserted. If the key is identical to a default command suggestion defined in `data/commands.json`, the new value in the dictionary is used for suggestion. If the value is an empty string, the command is removed from suggestion. Leading backslashes will be added to both the name and snippet by the extension, so don't include them in this config. For example, `{"mycommand[]{}": "notsamecommand[${2:option}]{$TM_SELECTED_TEXT$1}", "parbox{}{}": "parbox{${2:width}}{$TM_SELECTED_TEXT$1}", "overline{}": ""}` adds a new command with name `mycommand[]{} that inserts `\notsamecommand[]{}`, replaces the default snippet of `\parbox{}{}` to make it include current selected text, and removes `\overline{}` from suggestion.
	"latex-workshop.intellisense.command.user": {},

	// Specify the base directory for file completion
	//  - root relative: Completion from the root file directory
	//  - file relative: Completion from the current file directory
	//  - both: both
	"latex-workshop.intellisense.file.base": "root relative",

	// Patterns to ignore in file completion
	"latex-workshop.intellisense.file.exclude": [
		"**/*.aux",
		"**/*.bbl",
		"**/*.bcf",
		"**/*.blg",
		"**/*.idx",
		"**/*.ind",
		"**/*.lof",
		"**/*.lot",
		"**/*.out",
		"**/*.toc",
		"**/*.acn",
		"**/*.acr",
		"**/*.alg",
		"**/*.glg",
		"**/*.glo",
		"**/*.gls",
		"**/*.ist",
		"**/*.fls",
		"**/*.log",
		"**/*.nav",
		"**/*.snm",
		"**/*.fdb_latexmk",
		"**/*.synctex.gz",
		"**/*.run.xml"
	],

	// Enable preview for `\includegraphics` completion.
	"latex-workshop.intellisense.includegraphics.preview.enabled": true,

	// The name of LaTeX commands that indicates a label definition. The command must accept one mandatory argument of the label reference string, e.g, \linelabel{ref-str}.
	"latex-workshop.intellisense.label.command": [
		"label",
		"linelabel"
	],

	// Some LaTeX commands can have several forms, each with different arguments. If set to True, the intellisense completion list will have one entry for each form of a given command. Default is true.
	"latex-workshop.intellisense.optionalArgsEntries.enabled": true,

	// List of extra directories to look for package completion files in addition to those provided by the extension. See https://github.com/James-Yu/LaTeX-Workshop/wiki/Intellisense#commands-starting-with- to learn how to generate these files. Files found in these directories have a higher priority over the default ones. This setting is only relevant when `latex-workshop.intellisense.package.env.enabled` is true.
	"latex-workshop.intellisense.package.dirs": [],

	// Auto-complete commands and environments from used packages.
	"latex-workshop.intellisense.package.enabled": true,

	// If true, every environment provided by an included package is available by a snippet `\envname`. Only applies when `latex-workshop.intellisense.package.enabled` is true. 
	"latex-workshop.intellisense.package.env.enabled": true,

	// List of packages to exclude from the auto-completion mechanism. When `latex-workshop.intellisense.package.enabled#` is set to `true`, the commands and environments defined in these packages will not be added to the intellisense suggestions. This setting has a higher priority over `#latex-workshop.intellisense.package.extra`. You may include the string "lw-default" in the list to remove all default commands and environments.
	"latex-workshop.intellisense.package.exclude": [],

	// List of extra packages to always add to the auto-completion mechanism. When `latex-workshop.intellisense.package.enabled` is set to `true`, the commands and environments defined in these extra packages will be added to the intellisense suggestions.
	"latex-workshop.intellisense.package.extra": [],

	// Auto-complete sub- and super-scripts from the current project.
	"latex-workshop.intellisense.subsuperscript.enabled": false,

	// Additional trigger characters for intellisense of LaTeX documents.
	"latex-workshop.intellisense.triggers.latex": [
		"{"
	],

	// When `\` is typed, show unimath symbols in the dropdown selector.
	"latex-workshop.intellisense.unimathsymbols.enabled": false,

	// Defines whether the extension aggressively parses the changed content after stopped typing. Disable this config will let the extension only update intellisense after saving changed files.
	"latex-workshop.intellisense.update.aggressive.enabled": false,

	// Defines the delay in milliseconds for the extension to update current active file content for intellisense after stopped typing. This config works only when `intellisense.update.aggressive.enabled` is enabled. Lower this value to let the extension know newly defined commands/references/environments more quickly, at the cost of more frequent content parsing: more computational burden.
	"latex-workshop.intellisense.update.delay": 1000,

	// Use kpsewhich as defined by `latex-workshop.kpsewhich.path` to resolve bibliography file paths for intellisense parsing.
	"latex-workshop.kpsewhich.bibtex.enabled": true,

	// Use kpsewhich as defined by `latex-workshop.kpsewhich.path` to resolve latex class paths for intellisense parsing.
	"latex-workshop.kpsewhich.class.enabled": true,

	// **Deprecated**: Please use `latex-workshop.kpsewhich.class.enabled#` and `#latex-workshop.kpsewhich.bibtex.enabled` instead.
	// 
	"latex-workshop.kpsewhich.enabled": true,

	// Define the location of the kpsewhich executable file.
	"latex-workshop.kpsewhich.path": "kpsewhich",

	// Delete LaTeX auxiliary files when errors occur during build and retry. This property defines whether LaTeX Workshop will try to clean and build the project once again after errors happen in the build toolchain.
	"latex-workshop.latex.autoBuild.cleanAndRetry.enabled": true,

	// The minimal time interval in milliseconds for an auto build to trigger after the previous (manual and auto) build. This value is recommended to be greater than ~500.
	"latex-workshop.latex.autoBuild.interval": 1000,

	// When the extension shall auto build LaTeX project using the default (first) recipe. 
	// - `onSave` builds the project upon saving a `tex` file in vscode.
	// - `onFileChange` builds the project upon detecting a file change in any of the dependencies, even modified by other applications.
	// 
	//  Note that `onSave` is more restrictive than `onFileChange` 
	//  - never: Never run auto build
	//  - onSave: Auto build whenever a file is saved
	//  - onFileChange: Auto build whenever a dependency file changes on disk
	"latex-workshop.latex.autoBuild.run": "onFileChange",

	// When LaTeX auxiliary files should be deleted. The folder to be cleaned is defined in `latex-workshop.latex.outDir`.
	// - `onFailed` cleans the project when compilation fails.
	// - `onBuilt` cleans the project when compilation is done, whether successful or failed.
	//  - never: Never clean the project
	//  - onFailed: Clean compilation fails
	//  - onSucceeded: Clean compilation successes
	//  - onBuilt: Clean after build, be it successful or not
	"latex-workshop.latex.autoClean.run": "never",

	// List of directories where to look for `.bib` files. Absolute paths are required. This setting is only used by the intellisense feature, you may also need to set the environment variable `BIBINPUTS` properly for the LaTeX compiler to find the `.bib` files.
	"latex-workshop.latex.bibDirs": [],

	// Clear the LaTeX Compiler logs before every step of a recipe. Set this property to false to keep the logs of all tools in a recipe.
	"latex-workshop.latex.build.clearLog.everyRecipeStep.enabled": true,

	// Force the use the recipe mechanism even if some magic comments are present.
	"latex-workshop.latex.build.forceRecipeUsage": true,

	// Whether to include the name of the root file being built in the status bar.
	"latex-workshop.latex.build.rootfileInStatus": false,

	// The arguments of `latex-workshop.latex.clean.command`. Placeholders listed in https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders can be used to populate the argument strings. Besides, an additional `%TEX%` placeholder refers to the full path of the tex file from which the clean command is called.
	"latex-workshop.latex.clean.args": [
		"-outdir=%OUTDIR%",
		"-c",
		"%TEX%"
	],

	// The command to be used to remove temporary files when `latex-workshop.latex.clean.method` is set to `command`.
	"latex-workshop.latex.clean.command": "latexmk",

	// Files to clean when `latex-workshop.latex.clean.method` is set to `glob`. This property must be an array of strings. Placeholders listed in https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders can be used to populate the glob strings. File globs such as `*.removeme`, `something?.aux` can be used. Users can also specify glob patterns like `emptyfolder*/` to remove empty folders. Non-empty folders will be ignored. The folder globs must end with a slash and the last path component must not contain the globstar `**`, otherwise the folders will not be removed. The following globs patterns are correct `['abc/', 'abc*/', '**/abc*/', 'abc/**/def/']` but these are not ['**', '**/', 'abc/**', 'abc/**/', 'abc/def**/', 'abc/d**ef/']`.
	"latex-workshop.latex.clean.fileTypes": [
		"%DOCFILE%.aux",
		"%DOCFILE%.bbl",
		"%DOCFILE%.blg",
		"%DOCFILE%.idx",
		"%DOCFILE%.ind",
		"%DOCFILE%.lof",
		"%DOCFILE%.lot",
		"%DOCFILE%.out",
		"%DOCFILE%.toc",
		"%DOCFILE%.acn",
		"%DOCFILE%.acr",
		"%DOCFILE%.alg",
		"%DOCFILE%.glg",
		"%DOCFILE%.glo",
		"%DOCFILE%.gls",
		"%DOCFILE%.fls",
		"%DOCFILE%.log",
		"%DOCFILE%.fdb_latexmk",
		"%DOCFILE%.snm",
		"%DOCFILE%.synctex(busy)",
		"%DOCFILE%.synctex.gz(busy)",
		"%DOCFILE%.nav",
		"%DOCFILE%.vrb"
	],

	// Define how temporary files will be cleaned.
	//  - glob: Clean all the files located in `latex-workshop.latex.outDir#` and matching the glob patterns listed in `#latex-workshop.latex.clean.fileTypes`.
	//  - command: Run `latex-workshop.latex.clean.command` to clean temporary files.
	"latex-workshop.latex.clean.method": "command",

	// Delete LaTeX auxiliary files recursively in sub-folders of `latex-workshop.latex.outDir`. Note that sub-folders are not removed.
	"latex-workshop.latex.clean.subfolder.enabled": false,

	// The arguments of `latex-workshop.latex.external.build.command` when calling latex-workshop.build.
	"latex-workshop.latex.external.build.args": [],

	// The external command to execute when calling latex-workshop.build. This is useful when compiling relies on a Makefile or a bespoke script. When defined, it completely bypasses the recipes and root file detection mechanism.
	"latex-workshop.latex.external.build.command": "",

	// The jobname argument of the compiling tool, which is used by the extension to find project files (e.g., PDF and SyncTeX files). This config should be set identical to the value provided to the `-jobname=` argument, and should not have placeholders. Leave the config empty to ignore jobname and keep the default behavior.
	"latex-workshop.latex.jobname": "",

	// Define the arguments to be input to magic command executable. This can be overridden by using "% !TeX options".
	"latex-workshop.latex.magic.args": [
		"-synctex=1",
		"-interaction=nonstopmode",
		"-file-line-error",
		"%DOC%"
	],

	// Define the arguments to be input to BIB magic command executable. This can be overridden by using "% !BIB options".
	"latex-workshop.latex.magic.bib.args": [
		"%DOCFILE%"
	],

	// Add `--max-print-line` option to LaTeX build commands. This flag tells some MikTeX compilers to produce non hard wrapped log messages. Non hard wrapped log messages are required for the _Problem_ Pane to properly display messages.
	"latex-workshop.latex.option.maxPrintLine.enabled": true,

	// The directory where the extension tries to find project files (e.g., PDF and SyncTeX files) are located. Both relative and absolute paths are supported. Relative path start from the root file location, so beware if it is located in sub-directory. The path must not contain a trailing slash. The LaTeX toolchain should output files to this path. For a list of supported placeholders, please visit https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders. Note that if this config is set to %DIR% (default value) or %DIR_W32%, the extension will try to parse the last LaTeX tools used and look for `-out-directory=` and `-outdir=`, and automatically determine the output directory. This means that you can safely ignore this config if you use `latexmk` and do not manually `mv` the output files in your recipe.
	"latex-workshop.latex.outDir": "%DIR%",

	// Define which recipe is used by `latex-workshop.build#`. It also applies to auto build. Recipes are referred to by their names as defined in `#latex-workshop.latex.recipes`. Note there are two particular values: 
	// - `first` means to use the first recipe in `latex-workshop.latex.recipes`;
	// - `lastUsed` means to use the last run recipe.
	"latex-workshop.latex.recipe.default": "first",

	// Define LaTeX compiling recipes. Each recipe in the list is an object containing its name and the names of tools to be used sequentially, which are defined in `latex-workshop.latex.tools`. By default, the first recipe is used to compile the project. For details, please visit https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#latex-recipes.
	"latex-workshop.latex.recipes": [
		{
			"name": "latexmk",
			"tools": [
				"latexmk"
			]
		},
		{
			"name": "latexmk (latexmkrc)",
			"tools": [
				"latexmk_rconly"
			]
		},
		{
			"name": "latexmk (lualatex)",
			"tools": [
				"lualatexmk"
			]
		},
		{
			"name": "latexmk (xelatex)",
			"tools": [
				"xelatexmk"
			]
		},
		{
			"name": "pdflatex -> bibtex -> pdflatex * 2",
			"tools": [
				"pdflatex",
				"bibtex",
				"pdflatex",
				"pdflatex"
			]
		},
		{
			"name": "Compile Rnw files",
			"tools": [
				"rnw2tex",
				"latexmk"
			]
		},
		{
			"name": "Compile Jnw files",
			"tools": [
				"jnw2tex",
				"latexmk"
			]
		},
		{
			"name": "Compile Pnw files",
			"tools": [
				"pnw2tex",
				"latexmk"
			]
		},
		{
			"name": "tectonic",
			"tools": [
				"tectonic"
			]
		}
	],

	// When the `subfile` package is used, either the main file or any subfile containing `\documentclass[main.tex]{subfile}` can be LaTeXing. When `false`, the `build` and `view` commands  ask the user's choice first. When `true`, the subfile is used when `latex-workshop.latex.rootFile.useSubFile` is also `true`, otherwise the rootFile is used.
	"latex-workshop.latex.rootFile.doNotPrompt": false,

	// Determine if the root file is detected based on the presence of \documentclass[]{} or \begin{document}.
	"latex-workshop.latex.rootFile.indicator": "\\documentclass[]{}",

	// When the `subfile` package is used, either the main file or any subfile containing `\documentclass[main.tex]{subfile}` can be LaTeXing. When `true`, the extension uses the subfile as the rootFile for the `autobuild`, `clean` and `synctex` commands.
	"latex-workshop.latex.rootFile.useSubFile": true,

	// Patterns of files to exclude from the root detection mechanism. See also `latex-workshop.latex.search.rootFiles.include`. For more details, see the https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#multi-file-projects.
	"latex-workshop.latex.search.rootFiles.exclude": [],

	// Patterns of files to consider for the root detection mechanism. Relative paths are computed from the workspace folder. To detect the root file and the tex file tree, we parse all the `.tex` listed here. If you want to specify all `.tex` files inside directory, say `foo`, and all its subdirectories recursively, you need to use `**/foo/**/*.tex`. If you only want to match `.tex` files at the top level of the workspace, use `*.tex`. For more details, see https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#multi-file-projects
	"latex-workshop.latex.search.rootFiles.include": [
		"**/*.tex",
		"**/*.rnw",
		"**/*.Rnw"
	],

	// List of directories where to look for extra input `.tex` files. 
	// Absolute paths are required. You may also need to set the environment variable `TEXINPUTS` properly for the LaTeX compiler to find the `.tex` files, see the `env` parameter of [recipes](https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#latex-recipes).
	"latex-workshop.latex.texDirs": [],

	// Define LaTeX compiling tools to be used in recipes. Each tool is labeled by its `name`. When invoked, `command` is spawned with arguments defined in `args` and environment variables defined in `env`. Typically no spaces should appear in each argument unless in paths. List of available placeholders: `%DOC%`, `%DOC_W32%, %DOC_EXT%`, `%DOC_EXT_W32%`, `%DOCFILE%`, `%DOCFILE_EXT%`, `%DIR%`, `%DIR_W32%`, `%TMPDIR%` and `%OUTDIR%`, `%OUTDIR_W32%`. Please visit https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders for a complete list of all placeholders.
	"latex-workshop.latex.tools": [
		{
			"name": "latexmk",
			"command": "latexmk",
			"args": [
                "-shell-escape",
				"-synctex=1",
				"-interaction=nonstopmode",
				"-file-line-error",
				"-pdf",
				"-outdir=%OUTDIR%",
				"%DOC%"
			],
			"env": {}
		},
		{
			"name": "lualatexmk",
			"command": "latexmk",
			"args": [
				"-synctex=1",
				"-interaction=nonstopmode",
				"-file-line-error",
				"-lualatex",
				"-outdir=%OUTDIR%",
				"%DOC%"
			],
			"env": {}
		},
		{
			"name": "xelatexmk",
			"command": "latexmk",
			"args": [
				"-synctex=1",
				"-interaction=nonstopmode",
				"-file-line-error",
				"-xelatex",
				"-outdir=%OUTDIR%",
				"%DOC%"
			],
			"env": {}
		},
		{
			"name": "latexmk_rconly",
			"command": "latexmk",
			"args": [
				"%DOC%"
			],
			"env": {}
		},
		{
			"name": "pdflatex",
			"command": "pdflatex",
			"args": [
				"-synctex=1",
				"-interaction=nonstopmode",
				"-file-line-error",
				"%DOC%"
			],
			"env": {}
		},
		{
			"name": "bibtex",
			"command": "bibtex",
			"args": [
				"%DOCFILE%"
			],
			"env": {}
		},
		{
			"name": "rnw2tex",
			"command": "Rscript",
			"args": [
				"-e",
				"knitr::opts_knit$set(concordance = TRUE); knitr::knit('%DOCFILE_EXT%')"
			],
			"env": {}
		},
		{
			"name": "jnw2tex",
			"command": "julia",
			"args": [
				"-e",
				"using Weave; weave(\"%DOC_EXT%\", doctype=\"tex\")"
			],
			"env": {}
		},
		{
			"name": "jnw2texminted",
			"command": "julia",
			"args": [
				"-e",
				"using Weave; weave(\"%DOC_EXT%\", doctype=\"texminted\")"
			],
			"env": {}
		},
		{
			"name": "pnw2tex",
			"command": "pweave",
			"args": [
				"-f",
				"tex",
				"%DOC_EXT%"
			],
			"env": {}
		},
		{
			"name": "pnw2texminted",
			"command": "pweave",
			"args": [
				"-f",
				"texminted",
				"%DOC_EXT%"
			],
			"env": {}
		},
		{
			"name": "tectonic",
			"command": "tectonic",
			"args": [
				"--synctex",
				"--keep-logs",
				"%DOC%.tex"
			],
			"env": {}
		}
	],

	// List environments with verbatim-like content. These environments are stripped off the `.tex` files before any parsing occurs. Note that this variable has no effect on syntax highlighting.
	"latex-workshop.latex.verbatimEnvs": [
		"verbatim",
		"lstlisting",
		"minted"
	],

	// Defines the time delay before confirming a non-binary file is indeed deleted. Increase this value if your toolchain involves external file changes with a delete-then-create pattern. LaTeX Workshop internally monitors file change events and initiates auto-builds, intellisense parsing, latex importing, and/or PDF viewing refresh. We use this config to control the file polling delay before confirming that the file deletion is not a delete-then-create.
	"latex-workshop.latex.watch.delay": 250,

	// Files to ignore from the watching mechanism, i.e., no intellisense or build-on-file-change. However, document structure/outline and build-on-save won't be affected. This property must be an array of glob patterns. The patterns are matched against the absolute file path. To ignore everything inside the `texmf` tree, `**/texmf/**` can be used.
	"latex-workshop.latex.watch.files.ignore": [
		"**/*.bbx",
		"**/*.bbl",
		"**/*.cbx",
		"**/*.cfg",
		"**/*.clo",
		"**/*.cnf",
		"**/*.def",
		"**/*.dfu",
		"**/*.enc",
		"**/*.fd",
		"**/*.fmt",
		"**/*.lbx",
		"**/*.map",
		"**/*.mkii",
		"**/*.pfb",
		"**/*.tfm",
		"**/*.vf",
		"**/*.code.tex",
		"**/*.sty",
		"**/texmf-{dist,var}/**",
		"**/Local/MiKTeX/**",
		"**/Local/Programs/MiKTeX/**",
		"**/Roaming/MiKTeX/**",
		"**/Program*/MiKTeX*/**",
		"**/.miktex/texmfs/**",
		"/var/cache/miktex-texmf/**",
		"/usr/local/share/miktex-texmf/**",
		"**/Library/Application Support/MiKTeX/texmfs/**",
		"/dev/null"
	],

	// Defines the time delay before confirming a PDF-like binary file is fully changed. Increase this value if you encounter repeated viewer refreshes and/or loss of PDF scrolling position. LaTeX Workshop internally monitors file change events and initiates auto-builds and/or PDF viewing refresh. When LaTeX is changing large files (particularly binary files like PDFs), multiple consecutive file change events may be emitted, potentially causing file corruption issues. We use this config to control the file polling delay before confirming that the file change has been stabilized. Note that non-binary files such as `.tex`, `.bib`, and `.cls` are not affected.
	"latex-workshop.latex.watch.pdf.delay": 250,

	// Define the command line arguments for latexindent. In the addition to the placeholders defined at https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#placeholders, the following placeholders are accepted
	// - %TMPFILE%: The full path of the raw TeX file to be formatted. At this moment you need to use it as an input file of `latexindent`.
	// - %INDENT%: The indent character of the file, typically `	`, `' '`, `' '`.
	// 
	// Note that the option `-c` requires a trailing slash.
	"latex-workshop.latexindent.args": [
		"-c",
		"%DIR%/",
		"%TMPFILE%",
		"-y=defaultIndent: '%INDENT%'"
	],

	// Define the location of the latexindent executable file.
	"latex-workshop.latexindent.path": "latexindent",

	// Write the `TabSize` number from `.chktexrc`. The default value "-1" means that LaTeX Workshop will try to find `.chktexrc` and to read the value from it.
	"latex-workshop.linting.chktex.convertOutput.column.chktexrcTabSize": -1,

	// Enable converting ChkTeX outputs' column numbers for non-ASCII characters.
	"latex-workshop.linting.chktex.convertOutput.column.enabled": true,

	// Enable linting LaTeX with `chktex`. Check `latex-workshop.linting.run` to control when `chktex` is executed if this config is set to `true.
	"latex-workshop.linting.chktex.enabled": false,

	// Linter arguments to check LaTeX syntax of the current file state in real time with ChkTeX. Arguments must be in separate strings in the array. Additional arguments, i.e., `-I0 -f%f:%l:%c:%d:%k:%n:%m\n` will be appended when constructing the command. Current file contents will be piped to the command through stdin.
	"latex-workshop.linting.chktex.exec.args": [
		"-wall",
		"-n22",
		"-n30",
		"-e16",
		"-q"
	],

	// Define the location of ChkTeX executive file. This command will be joint with `latex-workshop.linting.chktex.exec.args` and required arguments to form a complete command of ChkTeX.
	"latex-workshop.linting.chktex.exec.path": "chktex",

	// Defines the delay in milliseconds for linter to wait after stopped typing. This config only matters when `latex-workshop.linting.run` is set to `onType`.
	"latex-workshop.linting.delay": 500,

	// Enable linting LaTeX with `lacheck`. Check `latex-workshop.linting.run` to control when `lacheck` is executed if this config is set to `true.
	"latex-workshop.linting.lacheck.enabled": false,

	// Define the location of LaCheck executive file.
	"latex-workshop.linting.lacheck.exec.path": "lacheck",

	// When LaTeX should be linted.
	// - `onSave`: the whole LaTeX project will be linted upon saving.
	// - `onType`: the active document will be linted when input is stopped for a period of time defined in `latex-workshop.linting.delay`. It also implies `onSave`.
	//  - onSave: Lint the whole LaTeX project upon saving
	//  - onType: Lint the active document when input is stopped
	"latex-workshop.linting.run": "onSave",

	// [Experimental] Render a cursor on the math preview panel. **This feature is experimental. If you report an issue to us on this feature, we will not fix it. We will not accept any pull requests.**
	"latex-workshop.mathpreviewpanel.cursor.enabled": false,

	// The editor group in which to open the math preview panel.
	//  - current: Use the current editor group
	//  - left: Put the math preview panel in a new group on the left of the current one
	//  - right: Put the math preview panel in a new group on the right of the current one
	//  - above: Put the math preview panel in a new group above the current one
	//  - below: Put the math preview panel in a new group below the current one
	"latex-workshop.mathpreviewpanel.editorGroup": "below",

	// Show badbox information in the problems panel.
	"latex-workshop.message.badbox.show": true,

	// Exclude biber log messages matching the given regexp from the problems panel.
	"latex-workshop.message.biberlog.exclude": [],

	// Exclude bibtex log messages matching the given regexp from the problems panel.
	"latex-workshop.message.bibtexlog.exclude": [],

	// Convert the encoding of filenames if necessary when displaying them in the problems panel.
	"latex-workshop.message.convertFilenameEncoding": true,

	// Display error messages in popup notifications.
	"latex-workshop.message.error.show": true,

	// Display information messages in popup notifications.
	"latex-workshop.message.information.show": false,

	// Exclude latex log messages matching the given regexp from the problems panel.
	"latex-workshop.message.latexlog.exclude": [],

	// Display LaTeX Workshop debug log in output panel. This property defines whether LaTeX Workshop will output its debug log to the log panel.
	"latex-workshop.message.log.show": true,

	// Display warning messages in popup notifications.
	"latex-workshop.message.warning.show": true,

	// Enable AST based smart selection. Command ids are `editor.action.smartSelect.expand` and `editor.action.smartSelect.shrink`.
	"latex-workshop.selection.smart.latex.enabled": true,

	// Enable the LaTeX contextual menu. This menu is deactivated as it is available through the new LaTeX badge. Just set this variable to `true` to recover the menu.
	"latex-workshop.showContextMenu": false,

	// Execute forward synctex at cursor position after compiling LaTeX project.
	"latex-workshop.synctex.afterBuild.enabled": false,

	// Define the visibility and style of SyncTeX indicator after a forward SyncTeX in the PDF viewer.
	//  - none: Hide the indicator.
	//  - circle: Indicates a possible location with a red circular SyncTeX indicator.
	//  - rectangle: Indicates the whole line selected in the TeX file with a red rectangular SyncTeX indicator. Only valid when SyncTeX binary is executable.
	"latex-workshop.synctex.indicator": "rectangle",

	// **Deprecated**: Please use `latex-workshop.synctex.indicator` instead.
	// 
	"latex-workshop.synctex.indicator.enabled": false,

	// Define the location of SyncTeX executive file. Additional arguments, e.g., synctex modes and position of click, will be appended to this command.
	"latex-workshop.synctex.path": "synctex",

	// **Deprecated**: This config has no use.
	// 
	"latex-workshop.synctex.synctexjs.enabled": true,

	// TeXCount arguments to count words in the LaTeX documents of the entire project from the root file, or the current document. Arguments must be in separate strings in the array. Additional arguments, i.e., `-merge %DOC%` for the project and the current document path for counting current file will be appended when constructing the command.
	"latex-workshop.texcount.args": [],

	// When to call `texcount`. Default is never.
	//  - onSave: Count words in the current document
	//  - never: Never automatically call texcount
	"latex-workshop.texcount.autorun": "never",

	// The minimal time interval between two consecutive runs of `texcount` in milliseconds when `latex-workshop.texcount.run` is set to `onSave`.
	"latex-workshop.texcount.interval": 1000,

	// Define the location of TeXCount executive file/script. This command will be joint with `latex-workshop.texcount.args` and required arguments to form a complete command of TeXCount.
	"latex-workshop.texcount.path": "texcount",

	// Texdoc arguments to see a package documentation. Arguments must be in separate strings in the array. The package name is automatically appended to the arguments.
	"latex-workshop.texdoc.args": [
		"--view"
	],

	// Define the location of the `texdoc` executable. This command is used to show a package documentation.
	"latex-workshop.texdoc.path": "texdoc",

	// Auto focus the LaTeX view when switching from non-tex to tex files. This will cause the view to appear consistently upon activating the extension.
	"latex-workshop.view.autoFocus.enabled": false,

	// The names of the commands to be shown in the outline/structure views. The commands must be called in the form `\commandname{arg}`.
	"latex-workshop.view.outline.commands": [
		"label"
	],

	// Show the float caption in the outline/structure views.
	"latex-workshop.view.outline.floats.caption.enabled": true,

	// Show the floating objects (figures and tables) in the outline/structure views.
	"latex-workshop.view.outline.floats.enabled": true,

	// Show the float number in the outline/structure views.
	"latex-workshop.view.outline.floats.number.enabled": true,

	// Whether scrolling the editor will also reveal corresponding structure items.
	"latex-workshop.view.outline.follow.editor": true,

	// Show the sectioning numbers in the outline/structure views.
	"latex-workshop.view.outline.numbers.enabled": true,

	// The section names of LaTeX outline hierarchy. It is also used by the folding mechanism. This property is an array of case-sensitive strings in the order of document structure hierarchy. For multiple tags in the same level, separate the tags with `|` as delimiters, e.g., `section|alternative`.
	"latex-workshop.view.outline.sections": [
		"part",
		"chapter",
		"section",
		"subsection",
		"subsubsection"
	],

	// Whether clicking on structure items will also call synctex to scroll the PDF viewer to the corresponding location.
	"latex-workshop.view.outline.sync.viewer": false,

	//  The background color of the viewer 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.dark.backgroundColor": "#ffffff",

	//  The border color of the PDF pages 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.dark.pageBorderColor": "lightgrey",

	//  The background color of the PDF document 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.dark.pageColorsBackground": "",

	//  The foreground color of the PDF document 1) in tab viewer when the vscode color theme is dark, and 2) in browser when the OS theme is dark. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.dark.pageColorsForeground": "",

	//  The background color of the viewer 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.light.backgroundColor": "#ffffff",

	//  The border color of the PDF pages 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.light.pageBorderColor": "lightgrey",

	//  The background color of the PDF document 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.light.pageColorsBackground": "",

	//  The foreground color of the PDF document 1) in tab viewer when the vscode color theme is light, and 2) in browser when the OS theme is light. The string must represent a color in HTML.
	"latex-workshop.view.pdf.color.light.pageColorsForeground": "",

	// The arguments for `latex-workshop.view.pdf.external.synctex.args` when forward synctex to external viewer. %LINE% is the line number, %PDF% is the placeholder for the absolute path to the generated PDF file, and %TEX% is the source LaTeX file path with `.tex` extension from which syncTeX is fired.
	"latex-workshop.view.pdf.external.synctex.args": [
		"%LINE%",
		"%PDF%",
		"%TEX%"
	],

	// The command to execute when forward synctex to external viewer. This function is not officially supported.
	"latex-workshop.view.pdf.external.synctex.command": "",

	// The arguments for `latex-workshop.view.pdf.external.viewer.command` when using external viewer. This function is not officially supported. %PDF% is the placeholder for the absolute path to the generated PDF file.
	"latex-workshop.view.pdf.external.viewer.args": [
		"%PDF%"
	],

	// The command to execute when using external viewer. This function is not officially supported.
	"latex-workshop.view.pdf.external.viewer.command": "",

	// Define if the hand tool is enabled by default in the PDF viewer.
	"latex-workshop.view.pdf.hand": false,

	//  Which keybinding to use for the internal viewer for reverse synctex. `ctrl`/`cmd` + click (default) or double click.
	"latex-workshop.view.pdf.internal.synctex.keybinding": "ctrl-click",

	//  Define the CSS invert filter level of the PDF viewer. This config can invert the color of PDF. Possible values are from 0 to 1.
	"latex-workshop.view.pdf.invert": 0,

	//  Define the CSS brightness filter level of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 2.
	"latex-workshop.view.pdf.invertMode.brightness": 1,

	// Enable the CSS invert filter.
	//  - auto: Enable the invert filter when using a dark theme.
	//  - always: Always enable invert filter.
	//  - compat: Enable the invert filter only if `invert > 0`.
	//  - never: Disable the invert filter
	"latex-workshop.view.pdf.invertMode.enabled": "compat",

	//  Define the CSS grayscale filter level of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 1.
	"latex-workshop.view.pdf.invertMode.grayscale": 0.6,

	//  Define the CSS hue-rotate filter angle of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 360.
	"latex-workshop.view.pdf.invertMode.hueRotate": 180,

	//  Define the CSS sepia filter level of the PDF viewer when the invert mode is enabled. Possible values are from 0 to 1.
	"latex-workshop.view.pdf.invertMode.sepia": 0,

	// PDF viewer used for [View on PDF] link on \ref.
	"latex-workshop.view.pdf.ref.viewer": "auto",

	// The default scroll mode of the PDF viewer. This default value will be passed to the viewer upon opening. Possible values are `0` (vertical), `1`(horizontal), `2` (wrapped), `3` (page).
	"latex-workshop.view.pdf.scrollMode": 0,

	// The default spread mode of the PDF viewer. This default value will be passed to the viewer upon opening. Possible values are `0` (none), `1` (odd) and `2` (even).
	"latex-workshop.view.pdf.spreadMode": 0,

	// The editor group in which to open the tab viewer.
	//  - current: Use the current editor group
	//  - left: Put the viewer tab in a new group on the left of the current one
	//  - right: Put the viewer tab in a new group on the right of the current one
	//  - above: Put the viewer tab in a new group above the current one
	//  - below: Put the viewer tab in a new group below the current one
	"latex-workshop.view.pdf.tab.editorGroup": "right",

	// The default trim mode of the PDF viewer.
	//  - 0: No page trimming
	//  - 1: Trim 5% at margin
	//  - 2: Trim 10% at margin
	//  - 3: Trim 15% at margin
	"latex-workshop.view.pdf.trim": 0,

	// The default PDF viewer.
	//  - browser: Open PDF with the default web browser.
	//  - tab: Open PDF with the built-in tab viewer.
	//  - external: [Experimental] Open PDF with the external viewer set in "View > Pdf > External: command".
	//  - legacy: [Legacy] Open PDF with the built-in tab viewer with vscode WebView API.
	//  - singleton: [Legacy] Open PDF with the built-in tab viewer with vscode WebView API, reveal existing one if possible.
	"latex-workshop.view.pdf.viewer": "tab",

	// The default zoom level of the PDF viewer. This default value will be passed to the viewer upon opening. Possible values are `auto`, `page-actual`, `page-fit`, `page-width`, and one-based scale values (e.g., 0.5 for 50%, 2.0 for 200%).
	"latex-workshop.view.pdf.zoom": "auto",

	// Rebroadcasting KeyboardEvent on the internal viewers. If keyboard shortcuts on the internal viewer do not work well, change this setting.
	"latex-workshop.viewer.pdf.internal.keyboardEvent": "auto",

	// Define the port to listen on for communicating with the internal viewer. The default value "0" means the port is chosen randomly by the application. If this config is set, only one Visual Studio Code instance with this extension active can be opened. Otherwise, a port conflict may happen.
	"latex-workshop.viewer.pdf.internal.port": 0,

	// When creating a hanging indent, do not put the closing bracket on its own line.
	"pythonIndent.keepHangingBracketOnLine": false,

	// Trims lines that contain only whitespace after pressing Enter on them.
	"pythonIndent.trimLinesWithOnlyWhitespace": false,

	// After creating a hanging indent, press tab to leave the indented section and go to the ending bracket.
	"pythonIndent.useTabOnHangingIndent": false,

	// Depreciated: This setting has been renamed to `git-graph.commitDetailsView.autoCenter`
	// Automatically center the commit details view when it is opened.
	"git-graph.autoCenterCommitDetailsView": true,

	// Depreciated: This setting has been renamed to `git-graph.referenceLabels.combineLocalAndRemoteBranchLabels`
	// Combine local and remote branch labels if they refer to the same branch, and are on the same commit.
	"git-graph.combineLocalAndRemoteBranchLabels": true,

	// Automatically center the Commit Details View when it is opened.
	"git-graph.commitDetailsView.autoCenter": true,

	// Render the File Tree in the Commit Details View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element.
	"git-graph.commitDetailsView.fileView.fileTree.compactFolders": true,

	// Sets the default type of File View used in the Commit Details View. This can be overridden per repository using the controls on the right side of the Commit Details View.
	//  - File Tree: Display files in a tree structure.
	//  - File List: Display files in a list (useful for repositories with deep folder structures).
	"git-graph.commitDetailsView.fileView.type": "File Tree",

	// Specifies where the Commit Details View is rendered in the Git Graph View.
	//  - Inline: Show the Commit Details View inline with the graph & commits.
	//  - Docked to Bottom: Show the Commit Details View docked to the bottom of the Git Graph View.
	"git-graph.commitDetailsView.location": "Inline",

	// Depreciated: This setting has been renamed to `git-graph.commitDetailsView.fileView.fileTree.compactFolders`
	// Render the File Tree in the Commit Details / Comparison View in a compacted form, such that folders with a single child folder are compressed into a single combined folder element.
	"git-graph.commitDetailsViewFileTreeCompactFolders": true,

	// Depreciated: This setting has been renamed to `git-graph.commitDetailsView.location`
	// Specifies where the Commit Details View is rendered in the Git Graph view.
	//  - Inline: Show the Commit Details View inline with the graph
	//  - Docked to Bottom: Show the Commit Details View docked to the bottom of the Git Graph view
	"git-graph.commitDetailsViewLocation": "Inline",

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.order`
	// Specifies the order of commits on the Git Graph view. See [git log](https://git-scm.com/docs/git-log#_commit_ordering) for more information on each order option.
	//  - date: Show commits in the commit timestamp order.
	//  - author-date: Show commits in the author timestamp order.
	//  - topo: Avoid showing commits on multiple lines of history intermixed.
	"git-graph.commitOrdering": "date",

	// Customise which context menu actions are visible. For example, if you want to hide the rebase action from the branch context menu, a suitable value for this setting is `{ "branch": { "rebase": false } }`. For more information of how to configure this setting, view the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Extension-Settings#context-menu-actions-visibility).
	"git-graph.contextMenuActionsVisibility": {},

	// An array of Custom Branch Glob Patterns to be shown in the 'Branches' dropdown. Example: [{"name": "Feature Requests", "glob": "heads/feature/*"}]
	"git-graph.customBranchGlobPatterns": [],

	// An array of custom Emoji Shortcode mappings. Example: [{"shortcode": ":sparkles:", "emoji":"✨"}]
	"git-graph.customEmojiShortcodeMappings": [],

	// An array of custom Pull Request providers that can be used in the "Pull Request Creation" Integration. For information on how to configure this setting, see the documentation [here](https://github.com/mhutchie/vscode-git-graph/wiki/Configuring-a-custom-Pull-Request-Provider).
	"git-graph.customPullRequestProviders": [],

	// Specifies the date format to be used in the "Date" column on the Git Graph View.
	//  - Date & Time: Show the date and time (e.g. "24 Mar 2019 21:34")
	//  - Date Only: Show the date only (e.g. "24 Mar 2019")
	//  - ISO Date & Time: Show the ISO date and time (e.g. "2019-03-24 21:34")
	//  - ISO Date Only: Show the ISO date only (e.g. "2019-03-24")
	//  - Relative: Show relative times (e.g. "5 minutes ago")
	"git-graph.date.format": "Date & Time",

	// Specifies the date type to be displayed in the "Date" column on the Git Graph View.
	//  - Author Date: Use the author date of a commit.
	//  - Commit Date: Use the committer date of a commit.
	"git-graph.date.type": "Author Date",

	// Depreciated: This setting has been renamed to `git-graph.date.format`
	// Specifies the date format to be used in the "Date" column on the Git Graph View.
	//  - Date & Time: Show the date and time, for example "24 Mar 2019 21:34"
	//  - Date Only: Show the date only, for example "24 Mar 2019"
	//  - ISO Date & Time: Show the ISO date and time, for example "2019-03-24 21:34"
	//  - ISO Date Only: Show the ISO date only, for example "2019-03-24"
	//  - Relative: Show relative times, for example "5 minutes ago"
	"git-graph.dateFormat": "Date & Time",

	// Depreciated: This setting has been renamed to `git-graph.date.type`
	// Specifies the date type to be displayed in the "Date" column on the Git Graph View.
	//  - Author Date: Use the author date of a commit
	//  - Commit Date: Use the committer date of a commit
	"git-graph.dateType": "Author Date",

	// An object specifying the default visibility of the Date, Author & Commit columns. Example: {"Date": true, "Author": true, "Commit": true}
	"git-graph.defaultColumnVisibility": {
		"Date": true,
		"Author": true,
		"Commit": true
	},

	// Depreciated: This setting has been renamed to `git-graph.commitDetailsView.fileView.type`
	// Sets the default type of File View used in the Commit Details / Comparison Views. This can be overridden per repository using the controls on the right side of the Commit Details / Comparison Views.
	//  - File Tree: Display files in a tree structure
	//  - File List: Display files in a list (useful for repositories with deep folder structures)
	"git-graph.defaultFileViewType": "File Tree",

	// Default state of the field indicating whether the tag should be pushed to a remote once it is added.
	"git-graph.dialog.addTag.pushToRemote": false,

	// Default type of the tag being added.
	"git-graph.dialog.addTag.type": "Annotated",

	// Default state of the "Reinstate Index" checkbox.
	"git-graph.dialog.applyStash.reinstateIndex": false,

	// Default state of the "No Commit" checkbox.
	"git-graph.dialog.cherryPick.noCommit": false,

	// Default state of the "Record Origin" checkbox.
	"git-graph.dialog.cherryPick.recordOrigin": false,

	// Default state of the "Check out" checkbox.
	"git-graph.dialog.createBranch.checkOut": false,

	// Default state of the "Force Delete" checkbox.
	"git-graph.dialog.deleteBranch.forceDelete": false,

	// Default state of the "Force Fetch" checkbox.
	"git-graph.dialog.fetchIntoLocalBranch.forceFetch": false,

	// Default state of the "Prune" checkbox.
	"git-graph.dialog.fetchRemote.prune": false,

	// Default state of the "Prune Tags" checkbox.
	"git-graph.dialog.fetchRemote.pruneTags": false,

	// Specifies a substitution that is automatically performed when space characters are entered or pasted into reference inputs on dialogs (e.g. Create Branch, Add Tag, etc.).
	//  - None: Don't replace spaces.
	//  - Hyphen: Replace space characters with hyphens, for example: "new branch" -> "new-branch".
	//  - Underscore: Replace space characters with underscores, for example: "new branch" -> "new_branch".
	"git-graph.dialog.general.referenceInputSpaceSubstitution": "None",

	// Default state of the "No Commit" checkbox.
	"git-graph.dialog.merge.noCommit": false,

	// Default state of the "Create a new commit even if fast-forward is possible" checkbox.
	"git-graph.dialog.merge.noFastForward": true,

	// Default state of the "Squash Commits" checkbox.
	"git-graph.dialog.merge.squashCommits": false,

	// Specifies the message format used for the squashed commit (when the "Squash Commits" option is selected).
	//  - Default: Use the squash message generated by Git Graph.
	//  - Git SQUASH_MSG: Use the detailed squash message generated by Git (stored in .git/SQUASH_MSG).
	"git-graph.dialog.merge.squashMessageFormat": "Default",

	// Default state of the "Reinstate Index" checkbox.
	"git-graph.dialog.popStash.reinstateIndex": false,

	// Default state of the "Create a new commit even if fast-forward is possible" checkbox.
	"git-graph.dialog.pullBranch.noFastForward": false,

	// Default state of the "Squash Commits" checkbox.
	"git-graph.dialog.pullBranch.squashCommits": false,

	// Specifies the message format used for the squashed commit (when the "Squash Commits" option is selected).
	//  - Default: Use the squash message generated by Git Graph.
	//  - Git SQUASH_MSG: Use the detailed squash message generated by Git (stored in .git/SQUASH_MSG).
	"git-graph.dialog.pullBranch.squashMessageFormat": "Default",

	// Default state of the "Ignore Date (non-interactive rebase only)" checkbox.
	"git-graph.dialog.rebase.ignoreDate": true,

	// Default state of the "Launch Interactive Rebase in new Terminal" checkbox.
	"git-graph.dialog.rebase.launchInteractiveRebase": false,

	// Default mode to be used for the reset action.
	//  - Soft: Soft - Keep all changes, but reset head
	//  - Mixed: Mixed - Keep working tree, but reset index
	//  - Hard: Hard - Discard all changes
	"git-graph.dialog.resetCurrentBranchToCommit.mode": "Mixed",

	// Default mode to be used for the reset action.
	//  - Mixed: Mixed - Keep working tree, but reset index
	//  - Hard: Hard - Discard all changes
	"git-graph.dialog.resetUncommittedChanges.mode": "Mixed",

	// Default state of the "Include Untracked" checkbox.
	"git-graph.dialog.stashUncommittedChanges.includeUntracked": true,

	// Visual file change A|M|D|R|U indicators in the Commit Details View for users with colour blindness. In the future, this setting will enable any additional accessibility related features of Git Graph that aren't enabled by default.
	"git-graph.enhancedAccessibility": false,

	// Depreciated: This setting has been renamed to `git-graph.repository.fetchAndPrune`
	// Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any remote-tracking references that no longer exist on the remote(s).
	"git-graph.fetchAndPrune": false,

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.fetchAvatars`
	// Fetch avatars of commit authors and committers. By enabling this setting, you consent to commit author and committer email addresses being sent GitHub, GitLab or Gravatar, depending on the repositories remote origin.
	"git-graph.fetchAvatars": false,

	// The character set encoding used when retrieving a specific version of repository files (e.g. in the Diff View). A list of all supported encodings can be found [here](https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings).
	"git-graph.fileEncoding": "utf8",

	// Specifies the colours used on the graph.
	"git-graph.graph.colours": [
		"#0085d9",
		"#d9008f",
		"#00d90a",
		"#d98500",
		"#a300d9",
		"#ff0000",
		"#00d9cc",
		"#e138e8",
		"#85d900",
		"#dc5b23",
		"#6f24d6",
		"#ffcc00"
	],

	// Specifies the style of the graph.
	//  - rounded: Use smooth curves when transitioning between branches on the graph.
	//  - angular: Use angular lines when transitioning between branches on the graph.
	"git-graph.graph.style": "rounded",

	// Specifies how the Uncommitted Changes are displayed on the graph.
	//  - Open Circle at the Uncommitted Changes: Display the Uncommitted Changes as a grey open circle, connected to the commit referenced by HEAD with a solid grey line. The current file system's state is therefore always displayed as an open circle.
	//  - Open Circle at the Checked Out Commit: Display the Uncommitted Changes as a grey closed circle, connected to the commit referenced by HEAD with a dotted grey line. The commit referenced by HEAD is therefore always displayed as an open circle.
	"git-graph.graph.uncommittedChanges": "Open Circle at the Uncommitted Changes",

	// Depreciated: This setting has been renamed to `git-graph.graph.colours`
	// Specifies the colours used on the graph.
	"git-graph.graphColours": [
		"#0085d9",
		"#d9008f",
		"#00d90a",
		"#d98500",
		"#a300d9",
		"#ff0000",
		"#00d9cc",
		"#e138e8",
		"#85d900",
		"#dc5b23",
		"#6f24d6",
		"#ffcc00"
	],

	// Depreciated: This setting has been renamed to `git-graph.graph.style`
	// Specifies the style of the graph.
	//  - rounded: Use smooth curves when transitioning between branches on the graph
	//  - angular: Use angular lines when transitioning between branches on the graph
	"git-graph.graphStyle": "rounded",

	// Depreciated: This setting has been renamed to `git-graph.repository.includeCommitsMentionedByReflogs`
	// Include commits only mentioned by reflogs in the Git Graph View (only applies when showing all branches). This can be overridden per repository in the Git Graph View's Repository Settings Widget.
	"git-graph.includeCommitsMentionedByReflogs": false,

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.initialLoad`
	// Specifies the number of commits to initially load.
	"git-graph.initialLoadCommits": 300,

	// Specifies the path and filename of the Shell executable to be used by the Visual Studio Code Integrated Terminal, when it is opened by Git Graph. For example, to use Git Bash on Windows this setting would commonly be set to "C:\Program Files\Git\bin\bash.exe". If this setting is left blank, the default Shell is used.
	"git-graph.integratedTerminalShell": "",

	// The keybinding for the keyboard shortcut that opens the Find Widget in the Git Graph View.
	"git-graph.keyboardShortcut.find": "CTRL/CMD + F",

	// The keybinding for the keyboard shortcut that refreshes the Git Graph View.
	"git-graph.keyboardShortcut.refresh": "CTRL/CMD + R",

	// The keybinding for the keyboard shortcut that scrolls the Git Graph View to be centered on the commit referenced by HEAD.
	"git-graph.keyboardShortcut.scrollToHead": "CTRL/CMD + H",

	// The keybinding for the keyboard shortcut that scrolls the Git Graph View to the first (or next) stash in the loaded commits. The Shift Key Modifier can be applied to this keybinding to scroll the Git Graph View to the last (or previous) stash in the loaded commits.
	"git-graph.keyboardShortcut.scrollToStash": "CTRL/CMD + S",

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.loadMore`
	// Specifies the number of additional commits to load when the "Load More Commits" button is pressed, or more commits are automatically loaded.
	"git-graph.loadMoreCommits": 100,

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.loadMoreAutomatically`
	// When the view has been scrolled to the bottom, automatically load more commits if they exist (instead of having to press the "Load More Commits" button).
	"git-graph.loadMoreCommitsAutomatically": true,

	// Parse and render a frequently used subset of inline Markdown formatting rules in commit messages and tag details (bold, italics, bold & italics, and inline code blocks).
	"git-graph.markdown": true,

	// Specifies the maximum depth of subfolders to search when discovering repositories in the workspace. Note: Sub-repos are not automatically detected when searching subfolders, however they can be manually added by running the command "Git Graph: Add Git Repository" in the Command Palette.
	"git-graph.maxDepthOfRepoSearch": 0,

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead`
	// Display commits that aren't ancestors of the checked-out branch / commit with a muted text color. Muting will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
	"git-graph.muteCommitsThatAreNotAncestorsOfHead": false,

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.mute.mergeCommits`
	// Display merge commits with a muted text color.
	"git-graph.muteMergeCommits": true,

	// Depreciated: This setting has been renamed to `git-graph.repository.onlyFollowFirstParent`
	// Only follow the first parent of commits when discovering the commits to load in the Git Graph View. See [--first-parent](https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent) to find out more about this setting.
	"git-graph.onlyFollowFirstParent": false,

	// Depreciated: This setting has been renamed to `git-graph.openNewTabEditorGroup`
	// Specifies which Editor Group the Visual Studio Code Diff View is opened in.
	//  - Active: Open the Visual Studio Code Diff View in the Active Editor Group.
	//  - Beside: Open the Visual Studio Code Diff View beside the Active Editor Group.
	//  - One: Open the Visual Studio Code Diff View in the First Editor Group.
	//  - Two: Open the Visual Studio Code Diff View in the Second Editor Group.
	//  - Three: Open the Visual Studio Code Diff View in the Third Editor Group.
	//  - Four: Open the Visual Studio Code Diff View in the Fourth Editor Group.
	//  - Five: Open the Visual Studio Code Diff View in the Fifth Editor Group.
	//  - Six: Open the Visual Studio Code Diff View in the Sixth Editor Group.
	//  - Seven: Open the Visual Studio Code Diff View in the Seventh Editor Group.
	//  - Eight: Open the Visual Studio Code Diff View in the Eighth Editor Group.
	//  - Nine: Open the Visual Studio Code Diff View in the Ninth Editor Group.
	"git-graph.openDiffTabLocation": "Active",

	// Specifies the Editor Group where Git Graph should open new tabs, when performing the following actions from the Git Graph View: Viewing the Visual Studio Code Diff View, Opening a File, Viewing a File at a Specific Revision.
	//  - Active: Open the new tab in the Active Editor Group.
	//  - Beside: Open the new tab beside the Active Editor Group.
	//  - One: Open the new tab in the First Editor Group.
	//  - Two: Open the new tab in the Second Editor Group.
	//  - Three: Open the new tab in the Third Editor Group.
	//  - Four: Open the new tab in the Fourth Editor Group.
	//  - Five: Open the new tab in the Fifth Editor Group.
	//  - Six: Open the new tab in the Sixth Editor Group.
	//  - Seven: Open the new tab in the Seventh Editor Group.
	//  - Eight: Open the new tab in the Eighth Editor Group.
	//  - Nine: Open the new tab in the Ninth Editor Group.
	"git-graph.openNewTabEditorGroup": "Active",

	// Depreciated: This setting has been renamed to `git-graph.repository.onLoad.scrollToHead`
	// When opening or switching repositories in the Git Graph View, automatically scroll the view to be centered on the commit referenced by HEAD. This will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
	"git-graph.openRepoToHead": false,

	// Open the Git Graph View to the repository containing the active Text Editor document.
	"git-graph.openToTheRepoOfTheActiveTextEditorDocument": false,

	// Depreciated: This setting has been renamed to `git-graph.referenceLabels.alignment`
	// Specifies how branch and tag reference labels are aligned for each commit.
	//  - Normal: Show branch & tag labels on the left of the commit message in the 'Description' column.
	//  - Branches (on the left) & Tags (on the right): Show branch labels on the left of the commit message in the 'Description' column, and tag labels on the right.
	//  - Branches (aligned to the graph) & Tags (on the right): Show branch labels aligned to the graph in the 'Graph' column, and tag labels on the right in the 'Description' column.
	"git-graph.referenceLabelAlignment": "Normal",

	// Specifies how branch and tag reference labels are aligned for each commit.
	//  - Normal: Show branch & tag labels on the left of the commit message in the 'Description' column.
	//  - Branches (on the left) & Tags (on the right): Show branch labels on the left of the commit message in the 'Description' column, and tag labels on the right.
	//  - Branches (aligned to the graph) & Tags (on the right): Show branch labels aligned to the graph in the 'Graph' column, and tag labels on the right in the 'Description' column.
	"git-graph.referenceLabels.alignment": "Normal",

	// Combine local and remote branch labels if they refer to the same branch, and are on the same commit.
	"git-graph.referenceLabels.combineLocalAndRemoteBranchLabels": true,

	// Fetch avatars of commit authors and committers. By enabling this setting, you consent to commit author and committer email addresses being sent GitHub, GitLab or Gravatar, depending on the repositories remote origin.
	"git-graph.repository.commits.fetchAvatars": false,

	// Specifies the number of commits to initially load.
	"git-graph.repository.commits.initialLoad": 300,

	// Specifies the number of additional commits to load when the "Load More Commits" button is pressed, or more commits are automatically loaded.
	"git-graph.repository.commits.loadMore": 100,

	// When the view has been scrolled to the bottom, automatically load more commits if they exist (instead of having to press the "Load More Commits" button).
	"git-graph.repository.commits.loadMoreAutomatically": true,

	// Display commits that aren't ancestors of the checked-out branch / commit with a muted text color. Muting will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
	"git-graph.repository.commits.mute.commitsThatAreNotAncestorsOfHead": false,

	// Display merge commits with a muted text color.
	"git-graph.repository.commits.mute.mergeCommits": true,

	// Specifies the order of commits on the Git Graph View. See [git log](https://git-scm.com/docs/git-log#_commit_ordering) for more information on each order option. This can be overridden per repository via the Git Graph View's Column Header Context Menu.
	//  - date: Show commits in the commit timestamp order.
	//  - author-date: Show commits in the author timestamp order.
	//  - topo: Avoid showing commits on multiple lines of history intermixed.
	"git-graph.repository.commits.order": "date",

	// Show the commit's signature status to the right of the Committer in the Commit Details View (only for signed commits). Hovering over the signature icon displays a tooltip with the signature details. Requires Git (>= 2.4.0) & GPG (or equivalent) to be installed on the same machine that is running Visual Studio Code.
	"git-graph.repository.commits.showSignatureStatus": false,

	// Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any remote-tracking references that no longer exist on the remote(s).
	"git-graph.repository.fetchAndPrune": false,

	// Before fetching from remote(s) using the Fetch button on the Git Graph View Control Bar, remove any local tags that no longer exist on the remote(s). Requires Git >= 2.17.0, and the "Repository: Fetch And Prune" setting to be enabled. Caution: If you work in repositories that have multiple remotes, it is not recommended to use this setting (instead you can prune tags for a specific remote via "Fetch Remote" Dialog from the Repository Settings Widget on the Git Graph View).
	"git-graph.repository.fetchAndPruneTags": false,

	// Include commits only mentioned by reflogs in the Git Graph View (only applies when showing all branches). This can be overridden per repository in the Git Graph View's Repository Settings Widget.
	"git-graph.repository.includeCommitsMentionedByReflogs": false,

	// Automatically scroll the Git Graph View to be centered on the commit referenced by HEAD. This will only occur if the commit referenced by HEAD is within the loaded commits on the Git Graph View.
	"git-graph.repository.onLoad.scrollToHead": false,

	// Show the checked out branch when a repository is loaded in the Git Graph View. This setting can be used in conjunction with "Repository > On Load: Show Specific Branches". Default: false (show all branches)
	"git-graph.repository.onLoad.showCheckedOutBranch": false,

	// Show specific branches when a repository is loaded in the Git Graph View. Branches can be specified as follows: A local branch name (e.g. `master`), a remote-tracking branch name prefixed with "remotes/" (e.g. `remotes/origin/master`), or a glob pattern defined in `git-graph.customBranchGlobPatterns` prefixed with "--glob=" (e.g. `--glob=heads/feature/*`). This setting can be used in conjunction with "Repository > On Load: Show Checked Out Branch". Default: [] (show all branches)
	"git-graph.repository.onLoad.showSpecificBranches": [],

	// Only follow the first parent of commits when discovering the commits to load in the Git Graph View. See [--first-parent](https://git-scm.com/docs/git-log#Documentation/git-log.txt---first-parent) to find out more about this setting. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
	"git-graph.repository.onlyFollowFirstParent": false,

	// Show Commits that are only referenced by tags in Git Graph.
	"git-graph.repository.showCommitsOnlyReferencedByTags": true,

	// Show Remote Branches in Git Graph by default. This can be overridden per repository from the Git Graph View's Control Bar.
	"git-graph.repository.showRemoteBranches": true,

	// Show Remote HEAD Symbolic References in Git Graph (e.g. "origin/HEAD").
	"git-graph.repository.showRemoteHeads": true,

	// Show Stashes in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
	"git-graph.repository.showStashes": true,

	// Show Tags in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
	"git-graph.repository.showTags": true,

	// Show uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
	"git-graph.repository.showUncommittedChanges": true,

	// Show untracked files when viewing the uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
	"git-graph.repository.showUntrackedFiles": true,

	// Enables commit signing with GPG or X.509.
	"git-graph.repository.sign.commits": false,

	// Enables tag signing with GPG or X.509.
	"git-graph.repository.sign.tags": false,

	// Respect [.mailmap](https://git-scm.com/docs/git-check-mailmap#_mapping_authors) files when displaying author & committer names and email addresses.
	"git-graph.repository.useMailmap": false,

	// Specifies the order that repositories are sorted in the repository dropdown on the Git Graph View (only visible when more than one repository exists in the current Visual Studio Code Workspace).
	//  - Full Path: Sort repositories alphabetically by the full path of the repository.
	//  - Name: Sort repositories alphabetically by the name of the repository.
	//  - Workspace Full Path: Sort repositories according to the Visual Studio Code Workspace Folder order, then alphabetically by the full path of the repository.
	"git-graph.repositoryDropdownOrder": "Workspace Full Path",

	// Specifies if the Git Graph View's Visual Studio Code context is kept when the panel is no longer visible (e.g. moved to background tab). Enabling this setting will make Git Graph load significantly faster when switching back to the Git Graph tab, however has a higher memory overhead.
	"git-graph.retainContextWhenHidden": true,

	// Depreciated: This setting has been renamed to `git-graph.repository.showCommitsOnlyReferencedByTags`
	// Show commits that are only referenced by tags in Git Graph.
	"git-graph.showCommitsOnlyReferencedByTags": true,

	// Depreciated: This setting has been renamed to `git-graph.repository.onLoad.showCheckedOutBranch`
	// Show the current branch by default when Git Graph is opened. Default: false (show all branches)
	"git-graph.showCurrentBranchByDefault": false,

	// Depreciated: This setting has been renamed to `git-graph.repository.commits.showSignatureStatus`
	// Show the commit's signature status to the right of the Committer in the Commit Details View (only for signed commits). Hovering over the signature icon displays a tooltip with the signature details. Requires Git (>= 2.4.0) & GPG (or equivalent) to be installed on the same machine that is running Visual Studio Code.
	"git-graph.showSignatureStatus": false,

	// Show a Status Bar Item that opens the Git Graph View when clicked.
	"git-graph.showStatusBarItem": true,

	// Depreciated: This setting has been renamed to `git-graph.repository.showTags`
	// Show Tags in Git Graph by default. This can be overridden per repository in the Git Graph View's Repository Settings Widget.
	"git-graph.showTags": true,

	// Depreciated: This setting has been renamed to `git-graph.repository.showUncommittedChanges`
	// Show uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
	"git-graph.showUncommittedChanges": true,

	// Depreciated: This setting has been renamed to `git-graph.repository.showUntrackedFiles`
	// Show untracked files when viewing the uncommitted changes. If you work on large repositories, disabling this setting can reduce the load time of the Git Graph View.
	"git-graph.showUntrackedFiles": true,

	// Specifies where the "View Git Graph" action appears on the title of SCM Providers.
	//  - Inline: Show the 'View Git Graph' action on the title of SCM Providers
	//  - More Actions: Show the 'View Git Graph' action in the 'More Actions...' menu on the title of SCM Providers
	"git-graph.sourceCodeProviderIntegrationLocation": "Inline",

	// Specifies the colour theme of the icon displayed on the Git Graph tab.
	//  - colour: Show a colour icon which suits most Visual Studio Code colour themes
	//  - grey: Show a grey icon which suits Visual Studio Code colour themes that are predominantly grayscale
	"git-graph.tabIconColourTheme": "colour",

	// Depreciated: This setting has been renamed to `git-graph.repository.useMailmap`
	// Respect [.mailmap](https://git-scm.com/docs/git-check-mailmap#_mapping_authors) files when displaying author & committer names and email addresses.
	"git-graph.useMailmap": false,

	// Ao depurar, apenas percorra o código escrito pelo usuário. Desabilite isso para permitir a entrada no código da biblioteca.
	"debugpy.debugJustMyCode": true,

	// Caminho para o executável State Tool para tempos de execução do ActiveState (versão 0.36+).
	"python.activeStateToolPath": "state",

	// Lista de caminhos para bibliotecas e semelhantes que precisam ser importados pelo mecanismo de preenchimento automático. Por exemplo, ao usar o SDK do Google App, os caminhos não estão no caminho do sistema, portanto, precisam ser adicionados a esta lista.
	"python.autoComplete.extraPaths": [],

	// Caminho para o executável do Conda a ser usado para ativação (versão 4.4+).
	"python.condaPath": "",

	// Mostre ou oculte o botão Criar ambiente no editor para `requirements.txt` ou outros arquivos de dependência.
	"python.createEnvironment.contentButton": "hide",

	// Detectar se a criação de ambiente é necessária para o projeto atual
	"python.createEnvironment.trigger": "prompt",

	// Caminho para Python padrão a ser usado quando a extensão é carregada pela primeira vez, não é mais usado quando um interpretador é selecionado para o espaço de trabalho. Veja [aqui](https://aka.ms/AAfekmf) para entender quando isso é usado
	"python.defaultInterpreterPath": "python",

	// Habilite suporte para source map para rastreamentos de pilha significativos em logs de erros.
	"python.diagnostics.sourceMapsEnabled": false,

	// Caminho absoluto para um arquivo que contém as definições de variável de ambiente.
	"python.envFile": "${workspaceFolder}/.env",

	// Habilita experimentos de testes A/B na extensão do Python. Se habilitado, você poderá ser incluído em aprimoramentos e/ou recursos propostos.
	"python.experiments.enabled": true,

	// Lista de experimentos para participar. Se estiver vazio, o usuário receberá os grupos experimentais padrão. Consulte [aqui](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) para mais detalhes.
	"python.experiments.optInto": [],

	// Lista de experimentos para desativar. Se estiver vazio, o usuário receberá os grupos experimentais padrão. Consulte [aqui](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) para obter mais detalhes.
	"python.experiments.optOutFrom": [],

	// Se os módulos do Python devem ser instalados globalmente quando não estiverem usando um ambiente.
	"python.globalModuleInstallation": false,

	// Controla quando exibir informações do interpretador selecionado na barra de status.
	//  - never: Nunca exibir informações.
	//  - onPythonRelated: Exibir informações somente se arquivos relacionados ao Python forem abertos.
	//  - always: Sempre exibir informações.
	"python.interpreter.infoVisibility": "onPythonRelated",

	// Define o tipo do servidor de linguagem.
	//  - Default: Selecione automaticamente um servidor de linguagem: Pylance, se instalado e disponível, caso contrário, faça fallback para Jedi.
	//  - Jedi: Use o Jedi por trás do protocolo LSP (Language Server Protocol) como um servidor de linguagem.
	//  - Pylance: Use Pylance como um servidor de linguagem.
	//  - None: Desabilitar recursos do servidor de linguagem.
	"python.languageServer": "Default",

	// Esta configuração está obsoleta. Use o comando `Desenvolvedor: Definir nível de registro...` para definir o nível de registro.
	// O nível de log no qual a extensão faz logon, o padrão é 'error'
	"python.logging.level": "error",

	// Definir a severidade dos pacotes ausentes em requirements.txt ou pyproject.toml
	"python.missingPackage.severity": "Hint",

	// Caminho para o executável pipenv a ser usado para ativação.
	"python.pipenvPath": "pipenv",

	// Caminho para o executável poetry.
	"python.poetryPath": "poetry",

	// Alterne o Envio Inteligente para o REPL do Python. O Envio Inteligente permite enviar o menor bloco de código executável para o REPL em Shift + Enter e move o cursor de acordo.
	"python.REPL.enableREPLSmartSend": true,

	// O suporte do Tensorboard foi movido para a extensão [extensão do Tensorboard](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.tensorboard). Em vez disso, use a configuração “tensorBoard.logDirectory”.
	// Defina esta configuração para o diretório de log do TensorBoard preferencial para ignorar o prompt de diretório de log ao iniciar o TensorBoard.
	"python.tensorBoard.logDirectory": "",

	// Ativar o Ambiente Python no Terminal atual ao carregar a Extensão.
	"python.terminal.activateEnvInCurrentTerminal": false,

	// Ative o ambiente Python em todos os terminais criados.
	"python.terminal.activateEnvironment": true,

	// Ao executar um arquivo no terminal, se deve ser executado no diretório do arquivo, em vez da pasta aberta atual.
	"python.terminal.executeInFileDir": false,

	// Ao iniciar um terminal python, se deve focar o cursor no terminal.
	"python.terminal.focusAfterLaunch": false,

	// Argumentos de inicialização do Python a serem usados ao executar um arquivo no terminal.
	"python.terminal.launchArgs": [],

	// Habilite a descoberta de teste de execução automática ao salvar um arquivo de teste.
	"python.testing.autoTestDiscoverOnSaveEnabled": true,

	// Diretório de trabalho opcional para testes.
	"python.testing.cwd": null,

	// Número da porta usado para depuração de testes.
	"python.testing.debugPort": 3000,

	// Solicitar a configuração de uma estrutura de teste se os diretórios de testes potenciais estiverem descobertos.
	"python.testing.promptToConfigure": true,

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.testing.pytestArgs": [],

	// Habilitar teste usando pytest.
	"python.testing.pytestEnabled": false,

	// Caminho para o pytest (pytest). Você pode usar uma versão personalizada do pytest, modificando esta configuração para incluir o caminho completo.
	"python.testing.pytestPath": "pytest",

	// Argumentos passados. Cada argumento é um item separado na matriz.
	"python.testing.unittestArgs": [
		"-v",
		"-s",
		".",
		"-p",
		"*test*.py"
	],

	// Habilitar o teste usando unittest.
	"python.testing.unittestEnabled": false,

	// Pastas em seu diretório base para procurar ambientes virtuais (dá suporte a pyenv, direnv e virtualenvwrapper por padrão).
	"python.venvFolders": [],

	// Caminho para a pasta com uma lista de Ambientes Virtuais (por exemplo, ~/.pyenv, ~/Envs, ~/.virtualenvs).
	"python.venvPath": "",

	// Oferecer apenas correspondências exatas em ações de código `add import`
	"python.analysis.addImport.exactMatchOnly": false,

	// Oferece heurística experimental em ações de código `adicionar importação`
	"python.analysis.addImport.heuristics": true,

	// Ao digitar um ''{'' em uma cadeia de caracteres, prefixe automaticamente a cadeia de caracteres com um ''f''.
	"python.analysis.autoFormatStrings": false,

	// Habilitar preenchimentos de importação automática.
	"python.analysis.autoImportCompletions": false,

	// Adicione automaticamente os caminhos de pesquisa comuns como ''src''.
	"python.analysis.autoSearchPaths": true,

	// Adicionar parênteses às conclusões da função.
	"python.analysis.completeFunctionParens": false,

	// Escopo de análise para mostrar o diagnóstico.
	//  - openFilesOnly: Analyzes and reports errors on only open files.
	//  - workspace: Analyzes and reports errors on all files in the workspace.
	"python.analysis.diagnosticMode": "openFilesOnly",

	// Permite que um usuário substitua os níveis de severidade para diagnósticos individuais. Use o nome da regra como uma chave e um de "error", "warning", "information", "none", `true` (alias para "error") ou `false` (alias para "none") como valor. O valor padrão mostrado para cada diagnóstico é o padrão quando "python.analysis.typeCheckingMode" estiver definido como "desativado". Confira [aqui](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) para obter os padrões para cada modo de verificação de tipo ("desativado", "básico" e "estrito").
	"python.analysis.diagnosticSeverityOverrides": {},

	// Habilita o suporte ao pytest no Pylance.
	"python.analysis.enablePytestSupport": true,

	// Use o modo de servidor de sincronização [Experimental]. Somente para uso interno, pode fazer com que o Pylance pare de funcionar.
	"python.analysis.enableSyncServer": false,

	// Caminhos de diretórios ou arquivos que não devem ser incluídos. Eles substituem os diretórios de inclusão, permitindo que subdiretórios específicos sejam excluídos. Observe que os arquivos nos caminhos de exclusão ainda poderão ser incluídos na análise se forem referenciados (importados) por arquivos de origem que não são excluídos. Os caminhos podem conter caracteres curinga ** (um diretório ou vários níveis de diretórios), * (uma sequência de zero ou mais caracteres) ou ? (um único caractere). Se nenhum caminho de exclusão for especificado, o Pylance excluirá automaticamente o seguinte: `**/node_modules`, `**/__pycache__`, `.git` e os diretórios de ambiente virtual.
	"python.analysis.exclude": [],

	// Permitir o uso de ''.'', ''('' como caracteres de confirmação quando aplicável.
	"python.analysis.extraCommitChars": false,

	// Caminhos de resolução de pesquisa de importação adicionais
	"python.analysis.extraPaths": [],

	// correções de origem a serem executadas para corrigir tudo.
	"python.analysis.fixAll": [],

	// Para literais de cadeia de caracteres que se parecem com os nomes de módulo, permite ir para definição para ir para o módulo.
	"python.analysis.gotoDefinitionInStringLiteral": true,

	// Caminhos de diretórios ou arquivos cuja saída de diagnóstico (erros e avisos) deve ser suprimida mesmo que seja um arquivo incluído ou dentro do fechamento transitivo de um arquivo incluído. Os caminhos podem conter caracteres curinga ** (um diretório ou vários níveis de diretórios), * (uma sequência de zero ou mais caracteres) ou ? (um único caractere).
	"python.analysis.ignore": [],

	// Define o formato padrão para o módulo de importação.
	//  - absolute: Use absolute import format when creating new import statement.
	//  - relative: Use relative import format when creating new import statement.
	"python.analysis.importFormat": "absolute",

	// Caminhos de diretórios ou arquivos que devem ser incluídos. Se nenhum caminho for especificado, o Pylance usa como padrão o diretório raiz do workspace. Os caminhos podem conter caracteres curinga ** (um diretório ou vários níveis de diretórios), * (uma sequência de zero ou mais caracteres) ou ? (um único caractere).
	"python.analysis.include": [],

	// Habilite a indexação de bibliotecas de terceiros e arquivos de usuário instalados para recursos de idioma como importação automática, adição de importação, símbolos de workspace e etc.
	"python.analysis.indexing": true,

	// Habilitar/desabilitar dicas embutidas para nomes de argumentos de chamada:
	// ```python
	// datetime('year='2019, 'month='10, 'day='27)
	// ```
	// 
	//  - off: Disable inlay hints for call argument names.
	//  - partial: Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.
	//  - all: Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only.
	"python.analysis.inlayHints.callArgumentNames": "off",

	// Habilitar/desabilitar dicas embutidas para tipos de retorno de função:
	// ```python
	// def foo(x:int) '-> int':
	// 	return x
	// ```
	// 
	"python.analysis.inlayHints.functionReturnTypes": false,

	// Habilitar/desabilitar dicas embutidas para parâmetros de função pytest:
	// ```python
	// def test_foo(my_fixture: 'str'):
	// 	assert(my_fixture == 'foo')
	// ```
	// 
	"python.analysis.inlayHints.pytestParameters": false,

	// Habilite/desabilite as dicas embutidas para os tipos de variáveis:
	// ```python
	// foo':list[str]' = ["a"]
	//  
	// ```
	// 
	"python.analysis.inlayHints.variableTypes": false,

	// Especifica o nível de registro do painel Saída
	"python.analysis.logLevel": "Information",

	// Caminho para um executável Node.js a ser usado para executar o servidor de idiomas. Se não for especificado, o servidor de idiomas usará o executável Node.js que vem com o VS Code. Defina essa opção se estiver tendo problemas com a falta de memória do Pylance. Consulte [aqui](https://aka.ms/AApf7ox) para obter mais informações.
	"python.analysis.nodeExecutable": "",

	// Usado para substituir quantos níveis abaixo dos pacotes instalados são indexados por pacote. Por padrão, somente os módulos de nível superior são indexados (profundidade = 1). Para indexar submódulos, aumente a profundidade em 1 para cada nível de submódulo que você deseja indexar. Os valores aceitos são:
	// ```JSON
	// {"name": "package name (str)",
	//  "depth": "depth to scan (int)",
	//  "includeAllSymbols": "whether to include all symbols (bool)"}
	// 
	// ```
	// Se `include all symbols` estiver definido como `false`, somente os símbolos no `__all__` de cada pacote serão incluídos. Quando definido como `true`, o Pylance indexará todas as declarações de símbolo de nível superior/módulo no arquivo.  
	//   
	// Exemplo de uso: 
	// ```JSON
	// [
	// 	{"name": "sklearn", "depth": 2, "includeAllSymbols": true},
	// 	{"name": "matplotlib", "depth": 3, "includeAllSymbols": false}
	// ]
	// 
	// ```
	// 
	"python.analysis.packageIndexDepths": [
		{
			"name": "sklearn",
			"depth": 2
		},
		{
			"name": "matplotlib",
			"depth": 2
		},
		{
			"name": "scipy",
			"depth": 2
		},
		{
			"name": "django",
			"depth": 2
		},
		{
			"name": "flask",
			"depth": 2
		},
		{
			"name": "fastapi",
			"depth": 2
		}
	],

	// Os índices de todas as bibliotecas de terceiros serão mantidos no disco.
	"python.analysis.persistAllIndices": true,

	// Caminho para o diretório que contém arquivos stub de tipo personalizado.
	"python.analysis.stubPath": "typings",

	// Defines the default rule set for type checking.
	//  - off: Mostrar diagnósticos de sintaxe inválida, importações não resolvidas, variáveis indefinidas.
	//  - basic: Todas as regras "desativadas" + regras básicas de verificação de tipo.
	//  - standard: Todas as regras "desativadas" + regras básicas de verificação de tipo + regras de verificador de tipo padrão.
	//  - strict: Todas as regras "desativadas" + todas as regras de verificação de tipo.
	"python.analysis.typeCheckingMode": "off",

	// Paths to look for typeshed modules.
	"python.analysis.typeshedPaths": [],

	// Use implementações de biblioteca para extrair informações de tipo quando o tipo stub não estiver presente.
	"python.analysis.useLibraryCodeForTypes": true,

	// Número máximo de arquivos de usuário a serem indexados no workspace. A indexação de arquivos é uma tarefa de alto desempenho. Use essa configuração para limitar o número de arquivos que você deseja indexar. Se você inserir -1, indexaremos todos os arquivos.
	"python.analysis.userFileIndexingLimit": 2000,

	// Permitir a conexão do Janela interativa a um servidor Jupyter https que não tenha certificados válidos. Isso pode ser um risco à segurança, portanto, use somente para servidores conhecidos e confiáveis.
	"jupyter.allowUnauthorizedRemoteConnection": false,

	// Avisar o usuário antes de reiniciar um kernel.
	"jupyter.askForKernelRestart": true,

	// Avisar o usuário antes de tentar abrir quadros de dados muito grandes.
	"jupyter.askForLargeDataFrames": true,

	// Mapeamento de caracteres que acionam o preenchimento automático em uma linguagem do kernel do Jupyter. A seguir está um exemplo de caracteres de gatilho para as linguagens de kernel rust e julia:
	// ```json 
	// {
	//   "julia": ["."],
	//   "rust": [".",":"] 
	// }
	// ```
	"jupyter.completionTriggerCharacters": {
		"bash": [
			"$",
			"{"
		],
		"java": [
			".",
			"@",
			"#"
		],
		"javascript": [
			".",
			"\"",
			"'",
			"/",
			"@"
		],
		"python": [
			".",
			"%",
			"'",
			"\""
		],
		"julia": [
			"."
		],
		"r": [
			"[",
			"(",
			",",
			"$",
			"@",
			"\"",
			"'"
		],
		"rust": [
			".",
			":"
		],
		"scala": [
			"."
		],
		"typescript": [
			".",
			"\"",
			"'",
			"/",
			"@",
			"<"
		]
	},

	// Durante a depuração, percorrer apenas o código escrito pelo usuário. Desabilite isso para permitir a entrada no código da biblioteca.
	"jupyter.debugJustMyCode": true,

	// Caminho para bits de depuração para depuração de células.
	"jupyter.debugpyDistPath": "",

	// Quando verdadeiro, desabilita o Jupyter de ser iniciado automaticamente para você. Em vez disso, você deve executar uma célula para iniciar o Jupyter.
	"jupyter.disableJupyterAutoStart": false,

	// Essa configuração foi preterida em favor de jupyter.enableExtendedPythonKernelCompletions.
	// Habilita o suporte a Jedi para preenchimentos ampliados do IntelliSense na execução de kernels do Jupyter (consulte esta [configuração](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). Isso poderá afetar muito o desempenho da execução da célula do notebook. Use com cuidado.
	"jupyter.enableExtendedKernelCompletions": false,

	// Habilita o suporte a Jedi para preenchimentos ampliados do IntelliSense na execução de kernels do Jupyter (consulte esta [configuração](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). Isso poderá afetar muito o desempenho da execução da célula do notebook. Use com cuidado.
	"jupyter.enableExtendedPythonKernelCompletions": false,

	// Habilite preenchimentos de código em Notebooks e Janelas Interativas usando resultados do Kernel do Jupyter associado.
	"jupyter.enableKernelCompletions": true,

	// Adicione PYTHONNOUSERSITE aos kernels antes de iniciar. Isso impede que pacotes de site globais/de usuário sejam usados no PYTHONPATH do kernel.
	"jupyter.excludeUserSitePackages": false,

	// Experimental feature to enable execution analysis in notebooks
	"jupyter.executionAnalysis.enabled": false,

	// Habilita/desabilita testes A/B.
	"jupyter.experiments.enabled": true,

	// Lista de experimentos a serem aceitos. Se estiver vazio, o usuário será atribuído aos grupos de experimentos padrão. [Saiba mais](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).
	"jupyter.experiments.optInto": [],

	// Lista de experimentos para recusar. Se estiver vazio, o usuário será atribuído aos grupos de experimentos padrão. [Saiba mais](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).
	"jupyter.experiments.optOutFrom": [],

	// Habilite a exportação de um arquivo python para um jupyter notebook e execute todas as células ao fazer isso.
	"jupyter.exportWithOutputEnabled": false,

	// Injetar links de registro de ativação no rastreamento armazenado para o notebook.
	"jupyter.formatStackTraces": false,

	// Expressão regular usada para identificar células de código. Todo o código até a próxima correspondência é considerado parte desta célula.
	"jupyter.interactiveWindow.cellMarker.codeRegex": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",

	// Desenhe um realce atrás da célula ativa no momento, ou em todas as células, em um arquivo Python.
	"jupyter.interactiveWindow.cellMarker.decorateCells": "currentCell",

	// Marcador de célula usado para delinear uma célula em um arquivo python.
	"jupyter.interactiveWindow.cellMarker.default": "# %%",

	// Expressão regular usada para identificar células markdown. Todos os comentários após essa expressão são considerados parte do markdown.
	"jupyter.interactiveWindow.cellMarker.markdownRegex": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",

	// Conjunto de comandos a serem colocados como lentes de código acima de uma célula.
	"jupyter.interactiveWindow.codeLens.commands": "jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell",

	// Habilita a lente de código para 'células' em um arquivo Python.
	"jupyter.interactiveWindow.codeLens.enable": true,

	// Depois de executar uma célula, adicione uma lente de código 'Goto' na célula. Observe que desabilitar todas as lentes de código desabilita essa lente de código também.
	"jupyter.interactiveWindow.codeLens.enableGotoCell": true,

	// Conjunto de comandos de depuração a serem colocados como lentes de código acima de uma célula durante a depuração.
	"jupyter.interactiveWindow.codeLes.debugCommands": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",

	// Comportamento da Janela Interativa. 'perFile' criará uma nova janela interativa para cada arquivo que executa uma célula. 'single' permite uma única janela. 'multiple' permite a criação de vários.
	"jupyter.interactiveWindow.creationMode": "multiple",

	// Um arquivo executado na Janela Interativa será executado em células individuais, se houver.
	"jupyter.interactiveWindow.splitRunFileIntoCells": true,

	// Acrescente uma nova célula vazia a um arquivo de janela interativa ao executar a última célula no momento.
	"jupyter.interactiveWindow.textEditor.autoAddNewCell": true,

	// Permite mover para a próxima célula ao clicar em uma lente de código 'Executar Célula'.
	"jupyter.interactiveWindow.textEditor.autoMoveToNextCell": true,

	// Habilite as regiões de dobragem para as células de código em arquivos Python. Essa configuração requer um recarregamento VS Code.
	"jupyter.interactiveWindow.textEditor.cellFolding": true,

	// Ao pressionar Shift+Enter, envie o código selecionado em um arquivo Python para a janela interativa do Jupyter em vez do terminal do Python.
	"jupyter.interactiveWindow.textEditor.executeSelection": false,

	// Remover comentários de atribuições de shell (#!), mágica de linha (#!%) e mágica de célula (#!%%) ao analisar células de código.
	"jupyter.interactiveWindow.textEditor.magicCommandsAsComments": false,

	// O texto selecionado será normalizado antes de ser executado na Janela Interativa.
	"jupyter.interactiveWindow.textEditor.normalizeSelection": false,

	// Onde abrir uma Janela Interativa que não está associada a um arquivo python. 'beside' abrirá a janela interativa à direita do editor ativo. 'active' abrirá a janela interativa no lugar do editor ativo. 'secondGroup' abrirá a janela interativa no segundo grupo de editores.
	"jupyter.interactiveWindow.viewColumn": "secondGroup",

	// Se e quando um servidor Jupyter for iniciado, esses argumentos serão passados para a CLI do Jupyter Notebook. Por padrão, essa lista é gerada pela extensão Jupyter.
	"jupyter.jupyterCommandLineArguments": [],

	// Quantidade de tempo (em ms) para aguardar uma interrupção antes de solicitar a reinicialização do kernel do Jupyter.
	"jupyter.jupyterInterruptTimeout": 10000,

	// Número de vezes para tentar se conectar ao Jupyter Notebook
	"jupyter.jupyterLaunchRetries": 3,

	// Quantidade de tempo (em ms) para aguardar a inicialização Jupyter Notebook servidor.
	"jupyter.jupyterLaunchTimeout": 60000,

	// Lista de ambientes Python a serem excluídos do seletor de Kernel.
	"jupyter.kernels.excludePythonEnvironments": [],

	// Insira caminhos completos para arquivos de especificação do Kernel que devem ser confiáveis. Por exemplo. 'C:\Program Data\Jupyter\kernels\python3\kernel.json'.  
	// **Nota**: Kernels podem executar código com privilégios de usuário. Clique [aqui](https://aka.ms/JupyterTrustedKernelPaths) para mais detalhes.
	"jupyter.kernels.trusted": [],

	// O nível de log no qual a extensão faz logon.
	"jupyter.logging.level": "debug",

	// Cria painéis de saída separados para saída do console do servidor de kernels/jupyter
	"jupyter.logKernelOutputSeparately": false,

	// Defina o diretório raiz para Jupyter Notebooks e a janela interativa em execução localmente.  
	// 
	// **Observação:** isso não se aplica aos Kernels Jupyter remotos.
	"jupyter.notebookFileRoot": "${fileDirname}",

	// Essa configuração foi preterida em favor de jupyter.completionTriggerCharacters.
	// Caracteres que disparam o preenchimento automático em um kernel jupyter do Python.
	"jupyter.pythonCompletionTriggerCharacters": ".%'\"",

	// O método a ser usado ao exportar um notebook para um arquivo Python. 'direct' copiará o código diretamente como está. 'commentMagics' comentará linhas começando com mágicas de linha (%), mágicas de célula (%%) e comandos de shell (!). 'nbconvert' instalará o recurso e o usará para a conversão, que pode converter a sintaxe iPython na sintaxe do Python.
	"jupyter.pythonExportMethod": "direct",

	// Uma série de instruções do Python ou comandos mágicos do iPython. Pode ser uma matriz de cadeias de caracteres ou uma única cadeia de caracteres com comandos separados por '\n'. Os comandos serão executados silenciosamente sempre que a janela interativa for carregada. Por exemplo, defina isso como '%load_ext autoreload\n%autoreload 2' para recarregar automaticamente as alterações feitas em arquivos importados sem precisar reiniciar a sessão interativa.
	"jupyter.runStartupCommands": "",

	// Mostrar o botão Estrutura de Tópicos na barra de ferramentas do Jupyter Notebook.
	"jupyter.showOutlineButtonInNotebookToolbar": true,

	// Abra a Exibição de Variável ao iniciar uma sessão Executar por Linha.
	"jupyter.showVariableViewWhenDebugging": false,

	// Ao depurar uma célula, pare na primeira linha.
	"jupyter.stopOnFirstLineWhileDebugging": true,

	// No tema do Editor da Janela interativa e do Notebook, matplotlib emite para corresponder ao tema do editor do VS Code.
	"jupyter.themeMatplotlibPlots": false,

	// Ao executar o Jupyter localmente, crie uma configuração Jupyter vazia padrão
	"jupyter.useDefaultConfigForJupyter": true,

	// Tipos a serem excluídos da exibição no Gerenciador de variáveis interativas
	"jupyter.variableExplorerExclude": "module;function;builtin_function_or_method;ABCMeta;type;ModelMetaclass",

	// Define o local e a ordem das fontes em que os arquivos de script para Widgets são baixados (por exemplo, ipywscriptst, bqplot, beakerx, ipyleaflet etc.). Não selecionar nenhuma dessas opções pode resultar em widgets que não estão sendo renderizados ou funcionam corretamente. Consulte [aqui](https://aka.ms/PVSCIPyWidgets) para obter mais informações. Depois de atualizado, você precisará reiniciar o Kernel.
	//  - jsdelivr.com: Carrega scripts de widget (javascript) de https://www.jsdelivr.com/
	//  - unpkg.com: Carrega scripts de widget (javascript) de https://unpkg.com/
	"jupyter.widgetScriptSources": [],

	// Diretórios adicionais para procurar compiladores.
	"cmake.additionalCompilerSearchDirs": [],

	// Matriz de caminhos para os arquivos do kit personalizados.
	"cmake.additionalKits": [],

	// Permita o uso de extensões JSON, tais como comentários em CMakePresets.json. Observe que seu arquivo CMakePresets.json pode ser considerado inválido por outros IDEs ou na linha de comando se você usar JSON não padrão.
	"cmake.allowCommentsInPresetsFile": false,

	// Habilita o uso de arquivos de predefinições que estão usando recursos das versões às quais a extensão CMake Tools não dá suporte no momento. Propriedades e macros desconhecidas serão ignoradas.
	"cmake.allowUnsupportedPresetsVersions": false,

	// Configure automaticamente os diretórios do projeto CMake quando o kit ou a predefinição de configuração for alterada.
	"cmake.automaticReconfigure": true,

	// Selecionar a pasta ativa automaticamente.
	"cmake.autoSelectActiveFolder": true,

	// Os argumentos adicionais a serem passados para o CMake ao compilar. Ao usar predefinições do CMake, esses argumentos são acrescentados temporariamente aos argumentos fornecidos pela predefinição de compilação ativa.
	"cmake.buildArgs": [],

	// Compile o destino antes de executá-lo.
	"cmake.buildBeforeRun": true,

	// O diretório para o qual os arquivos de build do CMake serão enviados.
	"cmake.buildDirectory": "${workspaceFolder}/build",

	// As variáveis de ambiente a serem passadas para o CMake durante a compilação. Ao usar predefinições do CMake, elas são adicionadas temporariamente ao ambiente fornecido pela predefinição de compilação ativa.
	"cmake.buildEnvironment": {},

	// Compilar usando o tasks.json em vez do processo interno.
	"cmake.buildTask": false,

	// Os argumentos adicionais a serem passados para a ferramenta de compilação subjacente ao compilar. Ao usar predefinições do CMake, esses argumentos são acrescentados temporariamente aos argumentos fornecidos pela predefinição de compilação ativa para invocar a ferramenta de compilação.
	"cmake.buildToolArgs": [],

	// Fornecer arquivo(s) CMake de inicialização de cache.
	"cmake.cacheInit": null,

	// Limpar a saída do build antes de cada build.
	"cmake.clearOutputBeforeBuild": true,

	// O protocolo usado para a comunicação entre a extensão e o CMake.
	"cmake.cmakeCommunicationMode": "automatic",

	// O nome ou caminho do executável do CMake a ser usado.
	"cmake.cmakePath": "cmake",

	// Os argumentos adicionais a serem passados para o CMake durante a configuração. Ao usar predefinições do CMake, esses argumentos são anexados temporariamente aos argumentos fornecidos pela predefinição de configuração ativa.
	"cmake.configureArgs": [],

	// As variáveis de ambiente a serem passadas para o CMake durante a configuração. Ao usar predefinições do CMake, elas são adicionadas temporariamente ao ambiente fornecido pela predefinição de configuração ativa.
	"cmake.configureEnvironment": {},

	// Configure automaticamente diretórios de projeto do CMake quando o conteúdo de cmake.sourceDirectory ou de CMakeLists.txt forem salvos.
	"cmake.configureOnEdit": true,

	// Configurar os diretórios de projeto do CMake automaticamente quando eles forem abertos.
	"cmake.configureOnOpen": null,

	// As variáveis do CMake a serem definidas na linha de comando. Essa configuração é específica para kits e não será usada para Predefinições do CMake.
	"cmake.configureSettings": {},

	// Copiar o compile_commands.json neste local após uma configuração bem-sucedida.
	"cmake.copyCompileCommands": null,

	// Argumentos adicionais a serem passados para o CPack (somente ao usar predefinições, sem suporte para kits). Esses argumentos são adicionados temporariamente aos argumentos fornecidos pela predefinição de pacote ativa.
	"cmake.cpackArgs": [],

	// Variáveis de ambiente a serem definidas ao empacotar com o CPack (somente ao usar predefinições, sem suporte para kits). Elas são adicionadas temporariamente ao ambiente usado para execuções do CPack.
	"cmake.cpackEnvironment": {},

	// Caminho para o executável do CPack. Se nulo, será inferido a partir do cmake.cmakePath (recomenda-se deixar nulo). Será ignorado quando forem usados kits em vez de predefinições.
	"cmake.cpackPath": null,

	// Permite que ctests sejam executados em paralelo, no entanto, a saída do resultado pode ser distorcida como resultado.
	"cmake.ctest.allowParallelJobs": false,

	// O número de trabalhos de teste paralelos. Use zero para usar o valor de `cmake.parallelJobs#`. Isso só se aplica quando `#cmake.ctest.allowParallelJobs` é definido como `true`.
	"cmake.ctest.parallelJobs": 0,

	// Se a integração com o gerenciador de teste está habilitada ou não. É útil desabilitar esse recurso se você preferir usar uma extensão diferente para a integração de testes.
	"cmake.ctest.testExplorerIntegrationEnabled": true,

	// Argumentos adicionais a serem passados para o CTest. Ao usar predefinições do CMake, esses argumentos são adicionados temporariamente aos argumentos fornecidos pela predefinição de teste ativa.
	"cmake.ctestArgs": [],

	// Argumentos aprovados por padrão para CTest.
	"cmake.ctestDefaultArgs": [
		"-T",
		"test",
		"--output-on-failure"
	],

	// O caminho para o executável do CTest. Se for nulo, será deduzido por meio do cmake.cmakePath (recomenda-se deixar nulo).
	"cmake.ctestPath": null,

	// A configuração de depuração a ser usada durante a depuração de um destino.
	"cmake.debugConfig": {},

	// Definir as configurações de variante padrão.
	"cmake.defaultVariants": {
		"buildType": {
			"default": "debug",
			"description": "O tipo de build.",
			"choices": {
				"debug": {
					"short": "Debug",
					"long": "Desabilitar as otimizações – incluir as informações de depuração.",
					"buildType": "Debug"
				},
				"release": {
					"short": "Release",
					"long": "Otimizar para velocidade – excluir as informações de depuração.",
					"buildType": "Release"
				},
				"minsize": {
					"short": "MinSizeRel",
					"long": "Otimizar para o menor tamanho binário – excluir as informações de depuração.",
					"buildType": "MinSizeRel"
				},
				"reldeb": {
					"short": "RelWithDebInfo",
					"long": "Otimizar para velocidade – incluir as informações de depuração.",
					"buildType": "RelWithDebInfo"
				}
			}
		}
	},

	// Os diretórios nos quais o Emscripten pode ser instalado.
	"cmake.emscriptenSearchDirs": [],

	// Os analisadores de saída a serem usados. Há suporte para os analisadores `cmake`, `gcc` e `gnuld` para a saída de vinculador no estilo GNULD, `msvc` para o Microsoft Visual C++ e `ghs` para o compilador Green Hills com --no_wrap_diagnostics --brief_diagnostics e `diab` para o compilador Wind River Diab.
	"cmake.enabledOutputParsers": [
		"cmake",
		"gcc",
		"gnuld",
		"msvc",
		"ghs",
		"diab"
	],

	// Habilitar o log de rastreamento para arquivo e console (muito ruído).
	"cmake.enableTraceLogging": false,

	// As variáveis de ambiente a serem definidas ao executar os comandos do CMake. Ao usar predefinições do CMake, elas são adicionadas temporariamente ao ambiente usado para comandos do CMake.
	"cmake.environment": {},

	// Habilita a exportação de compile_commands.json.
	"cmake.exportCompileCommandsFile": true,

	// O gerador do CMake a ser usado.
	"cmake.generator": null,

	// Se for `true`, a extensão não solicitará que o usuário selecione um arquivo CMakeLists.txt para configuração quando um for encontrado no espaço de trabalho, mas não na pasta raiz.
	"cmake.ignoreCMakeListsMissing": false,

	// Não use as variáveis de ambiente do kit ao executar os comandos do CMake.
	"cmake.ignoreKitEnv": false,

	// O diretório para o qual os arquivos instalados do CMake irão.
	"cmake.installPrefix": null,

	// Controla o que acontece com o terminal de lançamento quando você lança um alvo.
	//  - reuseTerminal: A instância do terminal de lançamento é reaproveitada e o alvo será lançado assim que o terminal estiver ocioso.
	//  - breakAndReuseTerminal: A instância do terminal de lançamento é reutilizada e um comando `break` é enviado para terminar qualquer processo ativo em primeiro plano antes de lançar o alvo.
	//  - newTerminal: Uma nova instância terminal é criada e o alvo é lançado nela. Os terminais existentes não são limpos automaticamente.
	"cmake.launchBehavior": "reuseTerminal",

	// Controla se a extensão lê compile_commands.json para habilitar a compilação de arquivo único.
	"cmake.loadCompileCommands": true,

	// Informar quais tipos de mensagens devem ser registradas no console.
	"cmake.loggingLevel": "info",

	// Coletar e mesclar recursivamente todos os compile_commands.json encontrados no diretório CMake.BuildDirectory.
	"cmake.mergedCompileCommands": null,

	// **Deprecated**: Please use `cmake.additionalCompilerSearchDirs` instead.
	// Os diretórios nos quais o MinGW pode ser instalado.
	"cmake.mingwSearchDirs": [],

	// Define as configurações para a Exibição de Status do Projeto individual e as opções da barra de status. Essas configurações podem substituir a configuração `cmake.options.statusBarVisibility` mais geral. [Mais informações](https://aka.ms/cmaketoolsoptionsconfiguration).
	"cmake.options.advanced": {
		"build": {
			"statusBarVisibility": "inherit",
			"inheritDefault": "visible"
		},
		"launch": {
			"statusBarVisibility": "inherit",
			"inheritDefault": "visible"
		},
		"debug": {
			"statusBarVisibility": "inherit",
			"inheritDefault": "visible"
		}
	},

	// Configura como a extensão exibe as opções na Barra de Status. Essas configurações podem ser substituídas pela configuração `cmake.options.advanced.statusBarVisibility` mais específica. [Mais informações](https://aka.ms/cmaketoolsoptionsconfiguration).
	"cmake.options.statusBarVisibility": "hidden",

	// A codificação da saída de comandos externos (ex.: cmake -- build).
	"cmake.outputLogEncoding": "auto",

	// O número de trabalhos de construção paralelos. Use zero para detectar automaticamente o número de CPUs. Definir isso como 1 omitirá o sinalizador de paralelismo (-j) do comando de construção subjacente, que tem um efeito dependente do gerador no paralelismo de construção.
	"cmake.parallelJobs": 0,

	// Analisar os avisos e erros da saída do compilador.
	"cmake.parseBuildDiagnostics": true,

	// Lista de comandos CMake para fixar.
	"cmake.pinnedCommands": [],

	// A plataforma do CMake a ser usada durante a configuração.
	"cmake.platform": null,

	// Os geradores preferenciais do CMake a serem usados durante a configuração (tentados na ordem da listagem).
	"cmake.preferredGenerators": [],

	// Define as configurações para mostrar o log e se concentrar no canal de saída.
	//  - focus: O log é exibido e o canal de saída usa o foco do cursor.
	//  - always: O log é exibido, mas o canal de saída não leva o foco do cursor.
	//  - never: O log não aparece nem usa o foco.
	"cmake.revealLog": "always",

	// Salvar os arquivos abertos antes do build.
	"cmake.saveBeforeBuild": true,

	// Definir o CMAKE_BUILD_TYPE também nos geradores de multiconfiguração.
	"cmake.setBuildTypeOnMultiConfig": false,

	// Habilita o pop-up que pergunta ao usuário se, após uma configuração com falha, ele deseja configurar com o Depurador do CMake.
	"cmake.showConfigureWithDebuggerNotification": true,

	// Habilita o pop-up que pergunta ao usuário se ele quer prosseguir com a compilação, apesar de alguns arquivos possivelmente não serem salvos. Se o pop-up não estiver habilitado, a compilação irá prosseguir.
	"cmake.showNotAllDocumentsSavedQuestion": true,

	// Habilita a notificação sobre as opções da barra de status que se movem para a Exibição de Status do Projeto para mostrar quando a extensão é iniciada.
	"cmake.showOptionsMovedNotification": true,

	// Incluir kits do sistema na seleção do kit.
	"cmake.showSystemKits": true,

	// Ignore o processo de configuração se o cache estiver presente.
	"cmake.skipConfigureIfCachePresent": null,

	// Caminho ou matriz de caminhos para o diretório/diretórios raiz do CMakeLists.txt.
	"cmake.sourceDirectory": "${workspaceFolder}",

	// As variáveis de ambiente a serem passadas para o CTest. Ao usar predefinições do CMake, elas são adicionadas temporariamente ao ambiente fornecido pela predefinição de teste ativa.
	"cmake.testEnvironment": {},

	// O conjunto de ferramentas do CMake a ser usado durante a configuração.
	"cmake.toolset": null,

	// Define configurações avançadas de como a extensão exibe botões em uma Touch Bar do MacBook.
	"cmake.touchbar.advanced": {},

	// Configura como a extensão exibe os botões em uma Touch Bar do MacBook.
	//  - default: Mostrar os botões da Touch Bar nos sistemas com suporte.
	//  - hidden: Não mostrar os botões da Touch Bar.
	"cmake.touchbar.visibility": "default",

	// Use o CMakePresets.json para configurar a unidade CMake de configuração, compilação e teste. Ao usar o CMakePresets.json, kits, variantes e algumas configurações do settings.json serão ignoradas.
	"cmake.useCMakePresets": "auto",

	// Controla o provedor de preenchimento automático. Se estiver `disabled` e você quiser a conclusão baseada em palavras, também precisará definir `"[cpp]": {"editor.wordBasedSuggestions": <value>}` (e da mesma forma para linguagens `c` e `cuda-cpp`).
	//  - default: Usa o mecanismo IntelliSense ativo.
	//  - disabled: Usa o preenchimento baseado em palavras fornecido pelo Visual Studio Code.
	"C_Cpp.autocomplete": "default",

	// Se `true`, autocomplete adicionará automaticamente `(` após chamadas de função, neste caso `)` também pode ser adicionado, dependendo do valor da configuração `editor.autoClosingBrackets`.
	"C_Cpp.autocompleteAddParentheses": false,

	// Se habilitado, os intervalos de dobramento de código serão fornecidos pelo servidor de idiomas.
	"C_Cpp.codeFolding": "enabled",

	// Determina se as notificações pop-up serão mostradas quando uma extensão do provedor de configuração não puder fornecer uma configuração para um arquivo de origem.
	"C_Cpp.configurationWarnings": "enabled",

	// O valor a ser usado em uma configuração se `browse.databaseFilename` não for especificado ou definido como `${default}`.
	"C_Cpp.default.browse.databaseFilename": "",

	// O valor a ser usado em uma configuração se `browse.limitSymbolsToIncludedHeaders` não for especificado ou definido como `${default}`.
	"C_Cpp.default.browse.limitSymbolsToIncludedHeaders": true,

	// O valor a ser usado em uma configuração se `browse.path` não for especificado, ou os valores a serem inseridos se `${default}` estiver presente em `browse.path`.
	"C_Cpp.default.browse.path": null,

	// O valor a ser usado em uma configuração se `compileCommands` não for especificado ou definido como `${default}`.
	"C_Cpp.default.compileCommands": "",

	// O valor a ser usado na configuração se `compilerArgs` não for especificado ou definido como `${default}`.
	"C_Cpp.default.compilerArgs": [],

	// O valor a ser usado em uma configuração se `compilerPath` não for especificado ou definido como `${default}`.
	"C_Cpp.default.compilerPath": null,

	// O valor a ser usado em uma configuração se `configurationProvider` não for especificado ou definido como `${default}`.
	"C_Cpp.default.configurationProvider": "",

	// O valor a ser usado em uma configuração se `cppStandard` não for especificado ou definido como `${default}`.
	"C_Cpp.default.cppStandard": "",

	// O valor a ser usado em uma configuração se `cStandard` não for especificado ou definido como `${default}`.
	"C_Cpp.default.cStandard": "",

	// O valor a ser usado em uma configuração se `customConfigurationVariables` não estiver definido, ou os valores a serem inseridos se `${default}` estiver presente como uma chave em `customConfigurationVariables`.
	"C_Cpp.default.customConfigurationVariables": null,

	// O valor a ser usado em uma configuração se `defines` não for especificado, ou os valores a serem inseridos se `${default}` estiver presente em `defines`.
	"C_Cpp.default.defines": [],

	// O valor a ser usado em uma configuração se `dotConfig` não for especificado, ou o valor a ser inserido se `${default}` estiver presente em `dotConfig`.
	"C_Cpp.default.dotConfig": "",

	// Controla se a extensão reportará erros detectados em `c_cpp_properties.json`.
	"C_Cpp.default.enableConfigurationSquiggles": true,

	// O valor a usar em uma configuração se `forcedInclude` não for especificado, ou os valores a inserir se `${default}` estiver presente em `forcedInclude`.
	"C_Cpp.default.forcedInclude": [],

	// O valor a ser usado em uma configuração se `includePath` não for especificado em `c_cpp_properties.json`. Se `includePath` for especificado, adicione `${default}` ao array para inserir os valores desta configuração. Normalmente, isso não deve incluir inclusões de sistema; em vez disso, defina `C_Cpp.default.compilerPath`.
	"C_Cpp.default.includePath": [],

	// O valor a ser usado em uma configuração se `intelliSenseMode` não for especificado ou definido como `${default}`.
	"C_Cpp.default.intelliSenseMode": "",

	// O valor a ser usado em uma configuração se `macFrameworkPath` não for especificado, ou os valores a serem inseridos se `${default}`estiver presente em `macFrameworkPath`.
	"C_Cpp.default.macFrameworkPath": [],

	// Defina como `true` para mesclar os caminhos de inclusão, definições e inclusões forçadas com aqueles de um provedor de configuração.
	"C_Cpp.default.mergeConfigurations": false,

	// O valor a ser usado para o sistema inclui o caminho. Se definido, ele substitui o sistema inclui o caminho adquirido através das configurações `compilerPath` e `compileCommands`.
	"C_Cpp.default.systemIncludePath": [],

	// A versão do SDK do Windows inclui o caminho a ser usado no Windows, por exemplo, `10.0.17134.0`.
	"C_Cpp.default.windowsSdkVersion": "",

	// Controla se os blocos de pré-processador inativos são coloridos de forma diferente do código ativo. Esta configuração não terá efeito se o IntelliSense estiver desabilitado ou se você estiver usando o tema de Alto Contraste Padrão.
	"C_Cpp.dimInactiveRegions": true,

	// Se habilitado, o código é colorido com base no IntelliSense. Esta configuração só se aplica se `C_Cpp.intelliSenseEngine` estiver definido como `default`.
	"C_Cpp.enhancedColorization": "enabled",

	// Controla se os erros de compilação suspeitos detectados pelo mecanismo do IntelliSense serão relatados de volta ao editor. Ele também controla se os avisos de análise de código são relatados se as inclusões não puderem ser encontradas. Essa configuração é ignorada pelo mecanismo do Analisador de Marca.
	"C_Cpp.errorSquiggles": "enabledIfIncludesResolve",

	// Instrui a extensão quando usar a configuração `files.exclude#` (e `#C_Cpp.files.exclude#`) ao determinar quais arquivos devem ser adicionados ao banco de dados de navegação de código enquanto percorre os caminhos em `browse.path` matriz. Se sua configuração `#files.exclude` contém apenas pastas, então `checkFolders` é a melhor escolha e aumentará a velocidade na qual a extensão pode inicializar o banco de dados de navegação de código.
	//  - checkFolders: Os filtros de exclusão serão avaliados apenas uma vez por pasta (arquivos individuais não são verificados).
	//  - checkFilesAndFolders: Os filtros de exclusão serão avaliados em relação a todos os arquivos e pastas encontrados.
	"C_Cpp.exclusionPolicy": "checkFolders",

	// Configure os padrões glob para excluir pastas (e arquivos se `C_Cpp.exclusionPolicy#` for alterado). Eles são específicos para a extensão C/C++ e são adicionais a `#files.exclude#`, mas ao contrário de `#files.exclude` eles também se aplicam a caminhos fora da pasta do espaço de trabalho atual e não são removidos da visualização do Explorer. Leia mais sobre padrões glob [aqui](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).
	"C_Cpp.files.exclude": {
		"**/.vscode": true,
		"**/.vs": true
	},

	// Se desabilitado, os detalhes do hover não são mais fornecidos pelo servidor de idiomas.
	"C_Cpp.hover": "default",

	// Controla a cor da tela de fundo dos blocos de pré-processador inativos. A entrada está no formato de um código de cor hexadecimal ou de uma Cor de Tema válida. Se não estiver definido, transparente será usado como padrão. Esta configuração é aplicável somente quando o esmaecimento da região inativa está habilitado.
	"C_Cpp.inactiveRegionBackgroundColor": "",

	// Controla a cor da fonte dos blocos de pré-processador inativos. A entrada está no formato de um código de cor hexadecimal ou de uma Cor de Tema válida. Se não estiver definido, o esquema de cores de sintaxe do editor será usado como padrão. Esta configuração é aplicável somente quando o esmaecimento da região inativa está habilitado.
	"C_Cpp.inactiveRegionForegroundColor": "",

	// Controla a opacidade de blocos de pré-processador inativos. Escalas entre `0.1` e `1.0`. Esta configuração só se aplica quando o escurecimento da região inativa está habilitado.
	"C_Cpp.inactiveRegionOpacity": 0.55,

	// Exibir dicas embutidas para o tipo deduzido quando `auto` é usado em uma declaração:
	// ```cpp 
	// 
	//  auto index /* : int */ = 0;
	// ```
	"C_Cpp.inlayHints.autoDeclarationTypes.enabled": false,

	// Exibir dicas embutidas para o tipo deduzido quando `auto` é usado em uma declaração à esquerda do identificador:
	// ```cpp 
	// 
	//  auto /* int */ index = 0;
	// ```
	"C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft": false,

	// Exibir dicas de inlay para nomes de parâmetro:
	// ```cpp 
	// 
	//  int a = getArea(/* largura: */ x, /* peso: */ y);
	// ```
	"C_Cpp.inlayHints.parameterNames.enabled": false,

	// Ocultar o entrelinhamento `_` nas dicas de nome do parâmetro.
	"C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores": true,

	// Suprimir dicas de nome de parâmetro quando o texto do argumento ou o comentário embutido contiver o nome do parâmetro:
	// ```cpp 
	// 
	//  int a = getArea(largura, /* peso: */ y);
	// ```
	"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName": true,

	// Exibe o operador de referência de dica de incrustação `&` para parâmetros passados por referência não constante:
	// ```cpp 
	// 
	//  swap(/* &first: */ str1, /* &last: */ str2);
	// ```
	"C_Cpp.inlayHints.referenceOperator.enabled": false,

	// Controla se um espaço é mostrado após `&` para parâmetros passados por referência não constante:
	// ```cpp 
	// 
	//  swap(/* & first: */ str1, /* & last: */ str2);
	// ```
	"C_Cpp.inlayHints.referenceOperator.showSpace": false,

	// Controla o provedor IntelliSense.
	//  - default: Fornece resultados baseados no contextopor meio de um processo IntelliSense separado.
	//  - Tag Parser: Fornece resultados "difusos" que não são sensíveis ao contexto.
	//  - disabled: Desabilita os recursos do serviço de linguagem C/C++.
	"C_Cpp.intelliSenseEngine": "default",

	// Controla se o mecanismo IntelliSense mudará automaticamente para o Analisador de tags para unidades de tradução contendo erros `#include`.
	"C_Cpp.intelliSenseEngineFallback": "disabled",

	// Controla o atraso em milissegundos até que o IntelliSense comece a ser atualizado após uma modificação.
	"C_Cpp.intelliSenseUpdateDelay": 1000,

	// Habilite o comportamento anterior à v1.10.0 para como o escape do shell é tratado nas configurações do argumento do compilador. O escape de shell não é mais esperado ou suportado por padrão em matrizes arg a partir da v1.10.0.
	"C_Cpp.legacyCompilerArgsBehavior": false,

	// Controla se o arquivo de cabeçalho de uma função/símbolo refatorado deve ser incluído em seu arquivo de origem correspondente ao executar uma ação de refatoração, como criar declaração/definição.
	//  - always: Sempre inclua o arquivo de cabeçalho se ele não estiver incluído explicitamente em seu arquivo de origem.
	//  - ifNeeded: Inclua o arquivo de cabeçalho apenas se ele não estiver incluído explicitamente em seu arquivo de origem ou por meio de inclusão implícita.
	//  - never: Nunca inclua o arquivo de cabeçalho.
	"C_Cpp.refactoring.includeHeader": "always",

	// Se `true`, 'Renomear Símbolo' exigirá um identificador C/C++ válido.
	"C_Cpp.renameRequiresIdentifier": true,

	// Se `true`, os snippets são fornecidos pelo servidor de linguagem.
	"C_Cpp.suggestSnippets": true,

	// Controla se a análise dos arquivos do espaço de trabalho não ativo usa hibernação para evitar o uso de 100% da CPU. Os valores `highest`/`high`/`medium`/`low` correspondem a aproximadamente 100/75/50/25% do uso da CPU.
	"C_Cpp.workspaceParsingPriority": "highest",

	// Os símbolos a serem incluídos nos resultados da consulta quando 'Acessar o Símbolo no Workspace' é invocado.
	"C_Cpp.workspaceSymbols": "Just My Code",

	// Nome do estilo predefinido usado como fallback no caso de `clang-format` ser invocado com o estilo `file`, mas o arquivo `.clang-format` não for encontrado. Os valores possíveis são `Visual Studio`,`LLVM`, `Google`,`Chromium`, `Mozilla`,`WebKit`, `Microsoft`, `GNU`, `none` ou use `{key: value, .. .}` para definir parâmetros específicos. Por exemplo, o estilo `Visual Studio` é semelhante a: `{BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifier: - 4, NamespaceIndentation: All, FixNamespaceComments: false}`.
	"C_Cpp.clang_format_fallbackStyle": "Visual Studio",

	// O caminho completo do executável `clang-format`. Se não for especificado, o `clang-format` estará disponível no caminho do ambiente usado. Se não for encontrado no caminho do ambiente, o `clang-format` empacotado com a extensão será usado.
	"C_Cpp.clang_format_path": "",

	// Se definido, substitui o comportamento de classificação de inclusão determinado pelo parâmetro `SortIncludes`.
	"C_Cpp.clang_format_sortIncludes": null,

	// Estilo de codificação, atualmente suporta: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` para carregar o estilo de um arquivo `.clang-format` no diretório atual ou pai, ou use `file:<path>/.clang-format` para referenciar um caminho específico. Use `{chave: valor, ...}` para definir parâmetros específicos. Por exemplo, o estilo `Visual Studio` é semelhante a: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: - 4, NamespaceIndentation: All, FixNamespaceComments: false }`.
	"C_Cpp.clang_format_style": "file",

	// Configura o mecanismo de formatação.
	//  - clangFormat: `clang-format` será usado para formatar o código.
	//  - vcFormat: O mecanismo de formatação Visual C++ será usado para formatar o código.
	//  - default: Por padrão, `clang-format` será usado para formatar o código. No entanto, o mecanismo de formatação Visual C++ será usado se um arquivo `.editorconfig` com configurações relevantes for encontrado próximo ao código sendo formatado e `C_Cpp.clang_format_style` for o valor padrão:`arquivo`.
	//  - disabled: A formatação de código será desabilitada.
	"C_Cpp.formatting": "default",

	// Os especificadores de acesso são recuados em relação às definições de classe ou estrutura pela quantidade especificada na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.accessSpecifiers": false,

	// As chaves são recuadas pelo valor especificado na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.braces": false,

	// O código dentro de um bloco `case` é recuado em relação ao seu rótulo pela quantidade especificada na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.caseContents": true,

	// Recue os colchetes seguindo uma instrução de caso pela quantidade especificada na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.caseContentsWhenBlock": false,

	// Os rótulos são recuados em relação às instruções de troca pela quantidade especificada na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.caseLabels": false,

	// A posição dos rótulos goto.
	//  - oneLeft: Posicione os rótulos goto à esquerda do recuo do código atual, pelo valor especificado na configuração `editor.tabSize`.
	//  - leftmostColumn: Posicionar os rótulos goto na borda mais à esquerda do código.
	//  - none: Os rótulos goto não serão formatados.
	"C_Cpp.vcFormat.indent.gotoLabels": "oneLeft",

	// Recue colchetes de lambdas usados ​​como parâmetros de função relativos ao início da instrução pela quantidade especificada na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter": true,

	// Determina a que recuo de nova linha é relativo.
	//  - outermostParenthesis: Recuar a nova linha em relação ao parêntese de abertura mais externo.
	//  - innermostParenthesis: Recuar a nova linha em relação ao parêntese de abertura mais interno.
	//  - statementBegin: Recuar a nova linha em relação ao início da instrução atual.
	"C_Cpp.vcFormat.indent.multiLineRelativeTo": "innermostParenthesis",

	// O código é recuado em relação ao seu namespace delimitador pela quantidade especificada na configuração `editor.tabSize`.
	"C_Cpp.vcFormat.indent.namespaceContents": true,

	// A posição das diretivas do pré-processador.
	//  - oneLeft: As diretivas do pré-processador são posicionadas à esquerda do recuo do código atual, pela quantidade especificada na configuração `editor.tabSize`.
	//  - leftmostColumn: As diretivas de pré-processador são posicionadas na borda mais à esquerda do código.
	//  - none: As diretivas de pré-processador não serão formatadas.
	"C_Cpp.vcFormat.indent.preprocessor": "leftmostColumn",

	// O recuo dos comentários não é alterado durante as operações de formatação.
	"C_Cpp.vcFormat.indent.preserveComments": false,

	// No código existente, preservar o alinhamento de recuo existente das novas linhas entre parênteses.
	"C_Cpp.vcFormat.indent.preserveWithinParentheses": false,

	// Quando uma nova linha é digitada, ela é alinhada sob o parêntese de abertura ou baseada em `C_Cpp.vcFormat.indent.multiLineRelativeTo`.
	//  - alignToParenthesis: A nova linha é alinhada sob o parêntese de abertura.
	//  - indent: A nova linha é recuada com base em `C_Cpp.vcFormat.indent.multiLineRelativeTo`.
	"C_Cpp.vcFormat.indent.withinParentheses": "indent",

	// Coloque `catch` e palavras-chave semelhantes em uma nova linha.
	"C_Cpp.vcFormat.newLine.beforeCatch": true,

	// Coloque `else` em uma nova linha.
	"C_Cpp.vcFormat.newLine.beforeElse": true,

	// A posição das chaves de abertura para blocos de controle.
	//  - newLine: As chaves de abertura são movidas para uma nova linha.
	//  - sameLine: As chaves de abertura são mantidas na mesma linha e um espaço é adicionado antes de cada uma.
	//  - ignore: As chaves de abertura não são formatadas.
	"C_Cpp.vcFormat.newLine.beforeOpenBrace.block": "ignore",

	// A posição das chaves de abertura para funções.
	//  - newLine: As chaves de abertura são movidas para uma nova linha.
	//  - sameLine: As chaves de abertura são mantidas na mesma linha e um espaço é adicionado antes de cada uma.
	//  - ignore: As chaves de abertura não são formatadas.
	"C_Cpp.vcFormat.newLine.beforeOpenBrace.function": "ignore",

	// A posição das chaves de abertura para funções lambda.
	//  - newLine: As chaves de abertura são movidas para uma nova linha.
	//  - sameLine: As chaves de abertura são mantidas na mesma linha e um espaço é adicionado antes de cada uma.
	//  - ignore: As chaves de abertura não são formatadas.
	"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda": "ignore",

	// A posição das chaves de abertura para namespaces.
	//  - newLine: As chaves de abertura são movidas para uma nova linha.
	//  - sameLine: As chaves de abertura são mantidas na mesma linha e um espaço é adicionado antes de cada uma.
	//  - ignore: As chaves de abertura não são formatadas.
	"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace": "ignore",

	// A posição das chaves de abertura para definições de tipo.
	//  - newLine: As chaves de abertura são movidas para uma nova linha.
	//  - sameLine: As chaves de abertura são mantidas na mesma linha e um espaço é adicionado antes de cada uma.
	//  - ignore: As chaves de abertura não são formatadas.
	"C_Cpp.vcFormat.newLine.beforeOpenBrace.type": "ignore",

	// Coloque `while` em um loop `do`-`while` em uma nova linha.
	"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile": false,

	// Para corpos de função vazios, mover as chaves de fechamento para a mesma linha que as chaves de abertura.
	"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction": false,

	// Para tipos vazios, mover as chaves de fechamento para a mesma linha que as chaves de abertura.
	"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType": false,

	// Posicionar as chaves de abertura e de fechamento de escopos em linhas separadas.
	"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines": false,

	// Um espaço é adicionado depois do parêntese de fechamento de uma conversão de estilo C.
	"C_Cpp.vcFormat.space.afterCastCloseParenthesis": false,

	// Um espaço é adicionado depois de cada vírgula.
	"C_Cpp.vcFormat.space.afterComma": true,

	// Um espaço é adicionado entre a palavra-chave e o parêntese de abertura nas instruções de fluxo de controle.
	"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements": true,

	// Espaços em torno de operadores de atribuição.
	//  - insert: Um espaço é adicionado antes do operador e também depois dele.
	//  - remove: Os espaços antes e depois do operador são removidos.
	//  - ignore: Os espaços são mantidos conforme foram inseridos.
	"C_Cpp.vcFormat.space.aroundAssignmentOperator": "insert",

	// Espaços em torno de operadores binários.
	//  - insert: Um espaço é adicionado antes do operador e também depois dele.
	//  - remove: Os espaços antes e depois do operador são removidos.
	//  - ignore: Os espaços são mantidos conforme foram inseridos.
	"C_Cpp.vcFormat.space.aroundBinaryOperator": "insert",

	// Espaços em torno de operadores condicionais.
	//  - insert: Um espaço é adicionado antes do operador e também depois dele.
	//  - remove: Os espaços antes e depois do operador são removidos.
	//  - ignore: Os espaços são mantidos conforme foram inseridos.
	"C_Cpp.vcFormat.space.aroundTernaryOperator": "insert",

	// Um espaço é adicionado antes da chave de abertura dos blocos de escopo.
	"C_Cpp.vcFormat.space.beforeBlockOpenBrace": true,

	// Um espaço é adicionado antes de cada vírgula.
	"C_Cpp.vcFormat.space.beforeComma": false,

	// Um espaço é adicionado antes dos dois-pontos nas definições do construtor.
	"C_Cpp.vcFormat.space.beforeConstructorColon": true,

	// Quando colchetes estão vazios, um espaço é adicionado antes do colchete de abertura.
	"C_Cpp.vcFormat.space.beforeEmptySquareBrackets": false,

	// Espaçamento entre nomes de funções e parênteses de abertura de listas de argumentos.
	//  - insert: Adicionar um espaço antes do parêntese de abertura de uma função.
	//  - remove: Os espaços antes dos parênteses de abertura de uma função são removidos.
	//  - ignore: Os espaços são mantidos conforme foram inseridos.
	"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis": "remove",

	// Um espaço é adicionado antes dos dois-pontos para tipos herdados nas definições de classe.
	"C_Cpp.vcFormat.space.beforeInheritanceColon": true,

	// Um espaço é adicionado antes da chave de abertura da inicialização uniforme e das listas de inicializadores.
	"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace": false,

	// Um espaço é adicionado antes do parêntese de abertura das listas de argumentos lambda.
	"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis": false,

	// Um espaço é adicionado antes dos colchetes de abertura.
	"C_Cpp.vcFormat.space.beforeOpenSquareBracket": false,

	// Quando as chaves estão vazias e na mesma linha, um espaço é inserido entre elas.
	"C_Cpp.vcFormat.space.betweenEmptyBraces": false,

	// Quando colchetes estão vazios, um espaço é inserido entre eles.
	"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets": false,

	// Quando uma lista de parâmetros de função está vazia, um espaço é inserido entre seus respectivos parênteses.
	"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses": false,

	// Quando colchetes estão vazios, um espaço é inserido entre eles.
	"C_Cpp.vcFormat.space.betweenEmptySquareBrackets": false,

	// Para matrizes multidimensionais, todos os espaços entre colchetes são removidos. Outras configurações que controlam espaços são substituídas.
	"C_Cpp.vcFormat.space.groupSquareBrackets": true,

	// Um espaço é inserido depois de cada ponto e vírgula.
	"C_Cpp.vcFormat.space.insertAfterSemicolon": false,

	// Espaços em torno de operadores de ponteiro e referência.
	//  - left: Os ponteiros e os operadores de referência são alinhados à esquerda.
	//  - center: Os ponteiros e os operadores de referência são centralizados.
	//  - right: Os ponteiros e os operadores de referência são alinhados à direita.
	//  - ignore: Os ponteiros e os operadores de referência não são formatados.
	"C_Cpp.vcFormat.space.pointerReferenceAlignment": "left",

	// Os espaços antes e depois das vírgulas são preservados dentro inicialização uniforme e das listas de inicializadores.
	"C_Cpp.vcFormat.space.preserveInInitializerList": true,

	// Os espaços antes e depois dos operadores de acesso a membro, dos operadores de ponteiro para membro e dos operadores de resolução de escopo são removidos.
	"C_Cpp.vcFormat.space.removeAroundMemberOperators": true,

	// Os espaços entre operadores unários e operandos são removidos.
	"C_Cpp.vcFormat.space.removeAroundUnaryOperator": true,

	// Os espaços são removidos antes de cada ponto e vírgula.
	"C_Cpp.vcFormat.space.removeBeforeSemicolon": true,

	// Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento de uma conversão de estilo C.
	"C_Cpp.vcFormat.space.withinCastParentheses": false,

	// Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento nas instruções de fluxo de controle.
	"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses": false,

	// Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento de uma expressão entre parênteses.
	"C_Cpp.vcFormat.space.withinExpressionParentheses": false,

	// Um espaço é adicionado depois da chave de abertura e também antes da chave de fechamento da inicialização uniforme e das listas de inicializadores.
	"C_Cpp.vcFormat.space.withinInitializerListBraces": true,

	// Um espaço é adicionado depois do colchete de abertura e também antes do colchete de fechamento.
	"C_Cpp.vcFormat.space.withinLambdaBrackets": false,

	// Um espaço é adicionado depois do parêntese de abertura e também antes do parêntese de fechamento nas listas de parâmetros de função.
	"C_Cpp.vcFormat.space.withinParameterListParentheses": false,

	// Um espaço é adicionado depois do colchete de abertura e também antes do colchete de fechamento.
	"C_Cpp.vcFormat.space.withinSquareBrackets": false,

	// Opções de embalagem para blocos.
	//  - oneLiners: Um bloco de código completo inserido em uma linha é mantido em uma linha, independentemente dos valores de qualquer uma das configurações `C_Cpp.vcFormat.newLine.*`.
	//  - allOneLineScopes: Qualquer código onde a chave de abertura e fechamento é inserida em uma linha é mantido em uma linha, independentemente dos valores de qualquer uma das configurações `C_Cpp.vcFormat.newLine.*`.
	//  - never: Os blocos de código são sempre formatados com base nos valores das configurações `C_Cpp.vcFormat.newLine. *`.
	"C_Cpp.vcFormat.wrap.preserveBlocks": "oneLiners",

	// Define o comportamento do editor para quando a tecla Enter é pressionada dentro de um bloco de comentário de linha única ou de várias linhas.
	"C_Cpp.commentContinuationPatterns": [
		"/**"
	],

	// A cadeia de caracteres usada como a linha inicial do comentário Doxygen.
	"C_Cpp.doxygen.generatedStyle": "///",

	// Controle se o comentário Doxygen deve ser inserido automaticamente depois de digitar o estilo de comentário escolhido.
	"C_Cpp.doxygen.generateOnType": true,

	// Selecione as tags de seção do Doxygen que você quer exibir ao focalizar na área de dica de ferramenta quando a configuração `Simplificar Comentários Estruturados` estiver habilitada. 
	"C_Cpp.doxygen.sectionTags": [
		"attention",
		"tparam",
		"param",
		"result",
		"returns",
		"retval",
		"exception",
		"deprecated",
		"warning",
		"note"
	],

	// Selecione se a remarcação estará disponível na dica de ferramenta instantânea. Por padrão, apenas um subconjunto de marcação será aplicado aos comentários na dica de ferramenta instantânea.
	//  - subsetEnabled: Habilite todos os recursos de marcação na dica de ferramenta instantânea, exceto aqueles que incluem os caracteres '_' e '*'.
	//  - enabled: Habilite todos os recursos de marcação na dica de ferramenta de foco.
	//  - disabled: Desabilite todos os recursos de marcação na dica de ferramenta de foco.
	"C_Cpp.markdownInComments": "subsetEnabled",

	// Se for `true`, as dicas de passar o mouse e autocompletar exibirão apenas alguns rótulos de comentários estruturados. Caso contrário, todos os comentários serão exibidos.
	"C_Cpp.simplifyStructuredComments": true,

	// Argumentos de linha de comando adicionais a serem passados para `clang-tidy`. Elas têm precedência sobre as configurações `C_Cpp.codeAnalysis.clangTidy.*` equivalentes.
	"C_Cpp.codeAnalysis.clangTidy.args": [],

	// Lista de verificações `clang-tidy` desabilitadas. Os valores são acrescentados às `Checks` em um arquivo `.clang-tidy` ou `C_Cpp.codeAnalysis.clangTidy.config`, se houver.
	"C_Cpp.codeAnalysis.clangTidy.checks.disabled": [],

	// Lista de verificações `clang-tidy` habilitadas. Os valores são acrescentados às `Checks` em um arquivo `.clang-tidy` ou `C_Cpp.codeAnalysis.clangTidy.config`, se houver. A verificação padrão `clang-analyzer-*` é sempre usada, a menos que seja explicitamente desabilitada.
	"C_Cpp.codeAnalysis.clangTidy.checks.enabled": [],

	// Se for `true`, a formatação será executada nas linhas alteradas pelas ações de código 'Corrigir'.
	"C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes": true,

	// Controla quais opções de ação de código de problema de análise de código 'Limpar' estão disponíveis. Alterar a configuração para mostrar mais opções pode exigir a re-execução da análise de código.
	//  - None: Não mostrar ações de código 'Limpar'.
	//  - AllOnly: Mostrar apenas a ação de código 'Limpar tudo' (ou 'Limpar todos <type>' se houver apenas um tipo ou 'Limpar isso' se houver apenas um problema).
	//  - AllAndAllType: Mostrar a ação de código 'Limpar tudo' (se houver vários tipos de problema) e a ação de código 'Limpar tudo <type>' código de ação (ou 'Limpar isso' se houver apenas um problema para o <type>)
	//  - AllAndAllTypeAndThis: Mostrar 'Limpar tudo' (se houver vários tipos de problema), 'Limpar todos os <type>' (se houver vários problemas para o <type>), e 'Limpar isso' para código de ações
	"C_Cpp.codeAnalysis.clangTidy.codeAction.showClear": "AllAndAllTypeAndThis",

	// Se for `true`, a ação de código 'Disable' será mostrada quando disponível (na próxima vez que a análise de código for executada). Quando a ação de código 'Desabilitar' é usada, ela adiciona o código de aviso à configuração `C_Cpp.codeAnalysis.clangTidy.checks.disabled`.
	"C_Cpp.codeAnalysis.clangTidy.codeAction.showDisable": true,

	// Se for `true`, a ação de código 'Mostrar Documentação para' será mostrada quando disponível (na próxima vez que a análise de código for executada).
	"C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation": true,

	// Especifica uma configuração `clang-tidy` no formato YAML/JSON: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{chave: x, valor: y}]}`. Quando o valor estiver vazio, `clang-tidy` tentará localizar um arquivo chamado `.clang-tidy` para cada arquivo de origem em seus diretórios pai.
	"C_Cpp.codeAnalysis.clangTidy.config": "",

	// Se for `true`, a análise de código usando `clang-tidy` será habilitada e será executada depois que um arquivo for aberto ou salvo se `C_Cpp.codeAnalysis.runAutomatically` for `true` (o padrão).
	"C_Cpp.codeAnalysis.clangTidy.enabled": false,

	// Especifica uma configuração `clang-tidy` no formato YAML/JSON a ser usada como fallback quando `C_Cpp.codeAnalysis.clangTidy.config` não estiver definido e nenhum arquivo `.clang-tidy` for encontrado: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{chave: x, valor: y}]}`.
	"C_Cpp.codeAnalysis.clangTidy.fallbackConfig": "",

	// Uma expressão regular estendida (ERE) que corresponde ao nome do cabeçalho a partir do qual o diagnóstico deve ser gerado. Os diagnósticos do arquivo principal de cada unidade de tradução são sempre exibidos. A variável `${workspaceFolder}` é suportada (e será usada como o valor de fallback padrão se o arquivo `.clang-tidy` não existir). Se esta opção não for `null` (vazia), ela substituirá a opção `HeaderFilterRegex` em um arquivo `.clang-tidy`, se houver.
	"C_Cpp.codeAnalysis.clangTidy.headerFilter": null,

	// O caminho completo do executável `clang-tidy`. Se não for especificado, o `clang-tidy` estará disponível no caminho do ambiente usado. Se não for encontrado no caminho do ambiente, o `clang-tidy` empacotado com a extensão será usado.
	"C_Cpp.codeAnalysis.clangTidy.path": "",

	// Se `true` e `compileCommands` estiver definido, o argumento `-p=<build-path>` será passado para `clang-tidy` em vez dos argumentos de compilação que estão sendo passados após `--`. Isso pode não funcionar se as variáveis de ambiente não estão definidas para que as inscrições do sistema possam ser encontradas.
	"C_Cpp.codeAnalysis.clangTidy.useBuildPath": false,

	// Configure padrões glob para excluir pastas e arquivos para análise de código. Arquivos que não estão na pasta do workspace são sempre excluídos. Herda valores de `files.exclude#` e `#C_Cpp.files.exclude`. Leia mais sobre padrões glob [aqui](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).
	"C_Cpp.codeAnalysis.exclude": {},

	// O número máximo de threads simultâneos a serem usados para análise de código. O padrão `null` (vazio) usa metade do valor herdado de `C_Cpp.maxConcurrentThreads`.
	"C_Cpp.codeAnalysis.maxConcurrentThreads": null,

	// Menos processos de análise de código serão executados simultaneamente depois que esse uso de memória (em MB) for excedido. O padrão de `null` (vazio) usa o valor herdado de `C_Cpp.maxMemory`.
	"C_Cpp.codeAnalysis.maxMemory": null,

	// Se for `true`, a análise de código será executada automaticamente em um arquivo depois que ele for aberto ou salvo.
	"C_Cpp.codeAnalysis.runAutomatically": true,

	// Controla o atraso em milissegundos antes que a análise de código comece o processamento depois que um salvamento é disparado de uma edição quando `files.autoSave#` é `afterDelay` e `#C_Cpp.codeAnalysis.runAutomatically` é `true`.
	"C_Cpp.codeAnalysis.updateDelay": 2000,

	// Se for `true`, a substituição do comando shell do depurador usará o acento grave obsoleto ``(`)``.
	"C_Cpp.debugger.useBacktickCommandSubstitution": false,

	// Mostrar o botão de reprodução "Executar e Depurar" e a engrenagem "Adicionar Configuração de Depuração" na barra de título do editor para arquivos C++.
	"C_Cpp.debugShortcut": true,

	// Controla se a visualização Destinos SSH é visível. Por padrão, ative a visualização quando um comando SSH for chamado.
	"C_Cpp.sshTargetsView": "default",

	// O número máximo de processos do IntelliSense a serem mantidos em execução. O padrão de `null` (vazio) usa o valor herdado de `C_Cpp.maxCachedProcesses`
	"C_Cpp.intelliSense.maxCachedProcesses": null,

	// Os processos mais antigos do IntelliSense serão desligados antes que novos processos sejam criados depois que esse uso de memória (em MB) for excedido. O padrão de `null` (vazio) usa o valor herdado de `C_Cpp.maxMemory`.
	"C_Cpp.intelliSense.maxMemory": null,

	// Define o caminho da pasta para cabeçalhos pré-compilados em cache usados ​​pelo IntelliSense. O caminho de cache padrão é `%LocalAppData%/Microsoft/vscode-cpptools` no Windows,`$XDG_CACHE_HOME/vscode-cpptools/` no Linux (ou `$HOME/.cache/vscode-cpptools/` se`XDG_CACHE_HOME` não é definido) e `$HOME/Library/Caches/vscode-cpptools/` no macOS. O caminho padrão será usado se nenhum caminho for especificado ou se um caminho especificado for inválido.
	"C_Cpp.intelliSenseCachePath": "",

	// Tamanho máximo do espaço do disco rígido por espaço de trabalho em megabytes (MB) para cabeçalhos pré-compilados em cache; o uso real pode oscilar em torno desse valor. O tamanho padrão é `5120` MB. O cache de cabeçalho pré-compilado é desabilitado quando o tamanho é `0`.
	"C_Cpp.intelliSenseCacheSize": 5120,

	// Limite de uso de memória em megabytes (MB) de um processo IntelliSense. O padrão é `4096` e o máximo é `16384`. A extensão será desligada e reiniciada um processo IntelliSense quando ele exceder o limite.
	"C_Cpp.intelliSenseMemoryLimit": 4096,

	// O número máximo de processos armazenados em cache a serem usado para o processamento do serviço de linguagem. O padrão `null` (vazio) usa duas vezes o número de processadores lógicos disponíveis.
	"C_Cpp.maxCachedProcesses": null,

	// O número máximo de threads simultâneos a serem usado para processamento de serviço de linguagem. O valor é uma dica e nem sempre pode ser usado. O padrão de `null` (vazio) usa o número de processadores lógicos disponíveis.
	"C_Cpp.maxConcurrentThreads": null,

	// A memória máxima (em MB) disponível para processamento do serviço de idioma. Menos processos serão armazenados em cache e executados simultaneamente depois que esse uso de memória for excedido. O padrão `null` (vazio) usa a memória livre do sistema.
	"C_Cpp.maxMemory": null,

	// O número máximo de processos para manter na memória para 'Encontrar todas as referências' e 'Renomear'. O padrão de `0` desabilita esse recurso. O valor de `null` (vazio) usa o valor herdado de `C_Cpp.maxCachedProcesses`.
	"C_Cpp.references.maxCachedProcesses": 0,

	// O número máximo de threads simultâneos a serem usados para 'Localizar todas as referências' e 'Renomear'. O padrão de `null` (vazio) usa o valor herdado de `C_Cpp.maxConcurrentThreads`.
	"C_Cpp.references.maxConcurrentThreads": null,

	// Menos processos 'Localizar Todas as Referências' e 'Renomear' serão armazenados em cache e executados simultaneamente depois que esse uso de memória (em MB) for excedido. O padrão de `null` (vazio) usa o valor herdado de `C_Cpp.maxMemory`.
	"C_Cpp.references.maxMemory": null,

	// Adicione caminhos de inclusão de `nan` e `node-addon-api` quando forem dependências.
	"C_Cpp.addNodeAddonIncludePaths": false,

	// Controla se os arquivos são adicionados automaticamente a `files.associations` quando eles são o destino de uma operação de navegação de um arquivo C/C++.
	"C_Cpp.autoAddFileAssociations": true,

	// Se definido como `default`, o sistema de arquivos do workspace não diferencia maiúsculas de minúsculas no Windows e diferencia maiúsculas de minúsculas no macOS ou Linux. Se definido como `enabled`, o sistema de arquivos do workspace é considerado sensível a maiúsculas e minúsculas no Windows.
	"C_Cpp.caseSensitiveFileSupport": "default",

	// Controla se os recursos "experimentais" podem ser usados.
	"C_Cpp.experimentalFeatures": "disabled",

	// O detalhamento do registro no painel de saída. A ordem dos níveis do menos detalhado para o mais detalhado é:  `None` < `Error` < `Warning` < `Information` < `Debug`.
	"C_Cpp.loggingLevel": "Error",

	// O caractere usado como separador de caminho para resultados de preenchimento automático de `#include`.
	"C_Cpp.preferredPathSeparator": "Forward Slash",

	// Esta configuração foi preterida. As extensões de pré-lançamento agora estão disponíveis por meio do Marketplace.
	// Defina como `Insiders` para baixar e instalar automaticamente as compilações mais recentes dos Insiders da extensão, que incluem os próximos recursos e correções de bugs.
	"C_Cpp.updateChannel": "Default",

	// Habilitar os serviços de integração para o [gerenciador de dependências vcpkg](https://aka.ms/vcpkg/).
	"C_Cpp.vcpkg.enabled": true,

	// Enables various accessibility features, such as audio cues about what is happening in the session.
	"liveshare.accessibility.accessibilityFeaturesEnabled": "auto",

	// Output device to play audio in accessibility mode.
	"liveshare.accessibility.outputDevice": "Default",

	// Enables sound effects about activity.
	"liveshare.accessibility.soundsEnabled": true,

	// Controls the volume of sound audio in accessibility mode (between 0 and 100).
	"liveshare.accessibility.soundVolume": 100,

	// Controls the rate of speech in accessibility mode.
	"liveshare.accessibility.speechRate": 2,

	// The voice used for speech in accessibility mode.
	"liveshare.accessibility.voice": "en-US-Jenny",

	// Enables spoken announcements about activity.
	"liveshare.accessibility.voiceEnabled": true,

	// Controls the volume of voice audio in accessibility mode (between 0 and 100).
	"liveshare.accessibility.voiceVolume": 100,

	// Allow guests to start and stop debugging sessions.
	"liveshare.allowGuestDebugControl": false,

	// Allow guests to run and terminate workspace tasks.
	"liveshare.allowGuestTaskControl": false,

	// Ensures that the session's host is always followed.
	"liveshare.alwaysFollowHost": false,

	// Controls how to handle join requests from anonymous guests.
	"liveshare.anonymousGuestApproval": "prompt",

	// Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions.
	"liveshare.autoShareServers": true,

	// Controls whether terminals are automatically shared with guests (read-only).
	"liveshare.autoShareTerminals": true,

	// Controls whether to show the CodeLens for starting a collaboration session.
	"liveshare.codeLens": true,

	// Controls whether to allow comments in collaboration sessions
	"liveshare.comments": true,

	// Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed.
	"liveshare.connectionMode": "auto",

	// Enables the Visual Studio Live Share output channel.
	"liveshare.diagnosticLogging": false,

	// Specifies the level of logging output from Visual Studio Live Share Extension
	"liveshare.diagnosticLoggingLevel": "Warning",

	// Enables diagnostic notifications and logs.
	"liveshare.diagnosticMode": false,

	// Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy).
	"liveshare.featureSet": "stable",

	// Specifies how to respond to focus requests from other participants.
	"liveshare.focusBehavior": "accept",

	// Controls whether the host needs to explicitly approve guest requests to join collaboration sessions.
	"liveshare.guestApprovalRequired": false,

	// Increases the guest limit from 5 to 30.
	"liveshare.increasedGuestLimit": true,

	// Controls how the participant will join incoming shared debug sessions.
	"liveshare.joinDebugSessionOption": "Automatic",

	// Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages.
	"liveshare.keepAliveInterval": 20,

	// Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens
	"liveshare.languages.allowGuestCommandControl": false,

	// Specifies the client to launch when clicking on a Live Share URL.
	"liveshare.launcherClient": "web",

	// Controls when to display a participant's name tag instead of just their cursor.
	"liveshare.nameTagVisibility": "Activity",

	// Allow guests to run notebook cells
	"liveshare.notebooks.allowGuestExecuteCells": false,

	// Controls whether to automatically open shared servers in your default browser.
	"liveshare.openSharedServers": true,

	// Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).
	"liveshare.populateGitCoAuthors": "always",

	// Controls whether to publish your current workspace folder to other users
	"liveshare.publishWorkspaceInfo": false,

	// Height of shared terminal window, characters.
	"liveshare.sharedTerminalHeight": 50,

	// Width of shared terminal window, characters.
	"liveshare.sharedTerminalWidth": 120,

	// Automatically share external files opened by the host during a collaboration session.
	"liveshare.shareExternalFiles": true,

	// Show or hide the Live Share status bar items.
	"liveshare.showInStatusBar": "always",

	// Controls visibility of the cursor and highlights for read-only users.
	"liveshare.showReadOnlyUsersInEditor": "whileFollowing",

	// Controls whether to show verbose notifications, such as when a guest joins and leaves a session.
	"liveshare.showVerboseNotifications": true,

	// Path to custom docstring template (overrides docstringFormat). Path can be absolute or relative to the project root.
	"autoDocstring.customTemplatePath": "",

	// Which docstring format to use.
	"autoDocstring.docstringFormat": "google",

	// Generate docstring on pressing enter after opening a docstring (use quoteStyle)
	"autoDocstring.generateDocstringOnEnter": true,

	// Guess the type of parameters and return values
	"autoDocstring.guessTypes": true,

	// Include [extended_summary] tag
	"autoDocstring.includeExtendedSummary": false,

	// Include function names at the start of docstrings
	"autoDocstring.includeName": false,

	// Output log information
	"autoDocstring.logLevel": "Info",

	// Style of quote used with generate docstring command
	"autoDocstring.quoteStyle": "\"\"\"",

	// Start docstring on new line
	"autoDocstring.startOnNewLine": false,

	// Nível de registro em Log para o console
	"intellicodeApiExamples.loggingLevel": "INFO",

	// Habilitar Exemplos de Uso de API para arquivos Python
	"intellicodeApiExamples.python.enabled": true,

	// Habilitar Exemplos de Uso de API para arquivos Typescript/Javascript
	"intellicodeApiExamples.typescript.enabled": true,

	// Habilitar as conclusões de IntelliCode do Visual Studio para Java
	"vsintellicode.java.completionsEnabled": true,

	// Controle se o IntelliCode do Visual Studio modificará `editor.suggestSelection` se estiver definido como um valor (`recentlyUsed`) que fará os itens de conclusão sugeridos pelo IntelliCode não estarem visíveis.
	//  - enabled: Permite que o IntelliCode modifique a configuração editor.suggestSelection no seu nome.
	//  - disabled: Você recusou explicitamente que essa configuração seja controlada pelo IntelliCode.
	//  - automaticallyOverrodeDefaultValue: (NÃO DEFINA ISSO MANUALMENTE) O IntelliCode definirá isso para registrar que a configuração foi modificada automaticamente para substituir um valor padrão.
	//  - choseToUpdateConfiguration: (NÃO DEFINA ISSO MANUALMENTE) O IntelliCode definirá isso para registrar que você escolheu permitir que ele altere a configuração de um valor definido explicitamente.
	"vsintellicode.modify.editor.suggestSelection": "enabled",

	// Habilitar as conclusões de IntelliCode do Visual Studio para Python
	"vsintellicode.python.completionsEnabled": true,

	// Habilitar as conclusões do IntelliCode do Visual Studio para MSSQL
	"vsintellicode.sql.completionsEnabled": true,

	// Habilitar as conclusões de IntelliCode do Visual Studio para TypeScript e JavaScript
	"vsintellicode.typescript.completionsEnabled": true,

	// Minimum level of debugger logs that are sent to VS Code.
	"java.debug.logLevel": "warn",

	// The specified console to launch Java program. If you want to customize the console for a specific debug session, please modify the 'console' config in launch.json.
	//  - internalConsole: VS Code debug console (input stream not supported).
	//  - integratedTerminal: VS Code integrated terminal.
	//  - externalTerminal: External terminal that can be configured in user settings.
	"java.debug.settings.console": "integratedTerminal",

	// [Experimental]: Enable debugging support on the decompiled source code. Be aware that this feature may affect the loading speed of Call Stack Viewlet.
	"java.debug.settings.debugSupportOnDecompiledSource": "on",

	// Enable the run and debug code lens providers over main methods.
	"java.debug.settings.enableRunDebugCodeLens": true,

	// Specifies the allowed locations where the exception breakpoint can break on. Wildcard is supported, e.g. java.*, *.Foo
	"java.debug.settings.exceptionBreakpoint.allowClasses": [],

	// Specifies a set of exception types you want to break on, e.g. java.lang.NullPointerException. A specific exception type and its subclasses can be selected for caught exceptions, uncaught exceptions, or both can be selected.
	"java.debug.settings.exceptionBreakpoint.exceptionTypes": [],

	// Skip the specified classes when breaking on exception. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo
	"java.debug.settings.exceptionBreakpoint.skipClasses": [],

	// Force building the workspace before launching java program.
	"java.debug.settings.forceBuildBeforeLaunch": true,

	// Reload the changed Java classes during debugging.
	"java.debug.settings.hotCodeReplace": "manual",

	// Experimental: Controls whether the debugger is allowed to send JDWP commands asynchronously. Async mode can improve remote debugging response speed on high-latency networks.
	"java.debug.settings.jdwp.async": "auto",

	// The maximum number of variables or fields that can be requested in one JDWP request. The higher the value, the less frequently debuggee will be requested when expanding the variable view. Also a large number can cause JDWP request timeout.
	"java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest": 100,

	// The timeout (ms) of JDWP request when the debugger communicates with the target JVM.
	"java.debug.settings.jdwp.requestTimeout": 3000,

	// The maximum length of strings displayed in "Variables" or "Debug Console" viewlet, strings longer than this length will be trimmed, if 0 no trim is performed.
	"java.debug.settings.maxStringLength": 0,

	// The precision when formatting doubles in "Variables" or "Debug Console" viewlet.
	"java.debug.settings.numericPrecision": 0,

	// Force to proceed when build fails
	"java.debug.settings.onBuildFailureProceed": false,

	// Show numbers in hex format in "Variables" viewlet.
	"java.debug.settings.showHex": false,

	// Show the logical structure for the Collection and Map classes in "Variables" viewlet.
	"java.debug.settings.showLogicalStructure": true,

	// Show fully qualified class names in "Variables" viewlet.
	"java.debug.settings.showQualifiedNames": false,

	// Show static variables in "Variables" viewlet.
	"java.debug.settings.showStaticVariables": false,

	// Show 'toString()' value for all classes that override 'toString' method in "Variables" viewlet.
	"java.debug.settings.showToString": true,

	// Skip the specified classes when stepping. You could use the built-in variables such as '$JDK' and '$Libraries' to skip a group of classes, or add a specific class name expression, e.g. java.*, *.Foo
	"java.debug.settings.stepping.skipClasses": [],

	// Skip constructor methods when stepping.
	"java.debug.settings.stepping.skipConstructors": false,

	// Skip static initializer methods when stepping.
	"java.debug.settings.stepping.skipStaticInitializers": false,

	// Skip synthetic methods when stepping.
	"java.debug.settings.stepping.skipSynthetics": false,

	// The default VM arguments to launch the Java program. Eg. Use '-Xmx1G -ea' to increase the heap size to 1GB and enable assertions. If you want to customize the VM arguments for a specific debug session, please modify the 'vmArgs' config in launch.json.
	"java.debug.settings.vmArgs": "",

	// Controls whether notifications can be used to report progress. If true, use status bar to report progress instead.
	"java.silentNotification": false,

	// Synchronize Java Projects explorer with changes
	"java.dependency.autoRefresh": true,

	// Package presentation mode: flat or hierarchical
	"java.dependency.packagePresentation": "flat",

	// The delay time (ms) the auto refresh is invoked when changes are detected
	"java.dependency.refreshDelay": 2000,

	// Show the members in the explorer
	"java.dependency.showMembers": false,

	// Link Java Projects Explorer with the active editor
	"java.dependency.syncWithFolderExplorer": true,

	// When enabled, the explorer shows non-Java resources.
	"java.project.explorer.showNonJavaResources": true,

	// The output path of the exported jar. Leave it empty if you want to manually pick the output location.
	"java.project.exportJar.targetPath": "${workspaceFolder}/${workspaceFolderBasename}.jar",

	// Whether to send back detailed information from error logs for diagnostic purpose.
	"java.help.collectErrorLog": false,

	// Sets the default view which is presented during the first use.
	//  - auto: Automatically pick the first experience view
	//  - overview: Present the Java Overview page
	//  - gettingStarted: Present the Java Beginner Tips page
	//  - welcome: Present the Java Help Center page
	//  - none: Do not show any view
	"java.help.firstView": "auto",

	// Show release notes of Extension Pack for Java on startup.
	"java.help.showReleaseNotes": true,

	// Specify the configurations for running the tests.
	"java.test.config": {},

	// Specify the name of the default test configuration.
	"java.test.defaultConfig": "",

	// Specify whether to show diagnostics for conflict dependencies.
	"maven.dependency.enableConflictDiagnostics": "true",

	// Specifies file path pattern of folders to exclude while searching for Maven projects.
	"maven.excludedFolders": [
		"**/.*",
		"**/node_modules",
		"**/target",
		"**/bin",
		"**/archetype-resources"
	],

	// Specifies default options for all mvn commands.
	"maven.executable.options": "",

	// Specifies absolute path of your 'mvn' executable. When this value is empty, it tries using 'mvn' or 'mvnw' according to the value of 'maven.executable.preferMavenWrapper'.
	"maven.executable.path": "",

	// Specifies whether you prefer to use Maven wrapper. If true, it tries using 'mvnw' by walking up the parent folders. If false, or 'mvnw' is not found, it tries 'mvn' in PATH instead.
	"maven.executable.preferMavenWrapper": "true",

	// Format of project node name shown in Maven explorer.
	"maven.explorer.projectName": "${project.name}",

	// Specifies whether to update effective-pom automatically whenever changes detected.
	"maven.pomfile.autoUpdateEffectivePOM": false,

	// Specifies the glob pattern used to look for pom.xml files.
	"maven.pomfile.globPattern": "**/pom.xml",

	// Specifies whether to prefetch effective pom on startup.
	"maven.pomfile.prefetchEffectivePom": false,

	// Default method of opening newly created project.
	"maven.projectOpenBehavior": "Interactive",

	// Specifies the absolute path of your maven configuration file, the default value is ~/.m2/settings.xml
	"maven.settingsFile": null,

	// If this value is true, add a command to create Maven Projects in the Explorer context menu for folders.
	"maven.showInExplorerContextMenu": "true",

	// Specifies an array of environment variable names and values. These environment variable values will be added to the terminal session before Maven is first executed.
	"maven.terminal.customEnv": [],

	// Specify pre-defined favorite commands to execute.
	"maven.terminal.favorites": [],

	// If this value is true, and if the setting java.home has a value, then the environment variable JAVA_HOME will be set to the value of java.home when a new terminal window is created.
	"maven.terminal.useJavaHome": false,

	// Specifies the way of viewing Maven projects.
	"maven.view": "flat",

	// The path to a PHP executable.
	"php.debug.executablePath": null,

	// A unique key that allows the proxy to match requests to your editor. Only used when proxy configuration includes replacement.
	"php.debug.ideKey": "vsc",

	// Traces the communication between VSCode and the intellisense language server.
	"php-intellisense.trace.server": "off",

	// The path to a PHP 7+ executable.
	"php.executablePath": null,

	// Configure glob patterns for excluding files and folders from initial indexing. Paths are relative to root folder.
	"php.files.exclude": [],

	// The memory limit of the php language server. [Number][K|M|G]. Use '-1' to allow unlimited use of the RAM (default is 4G).
	"php.memoryLimit": "4095M",

}